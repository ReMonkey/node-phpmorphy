{"version":3,"sources":["webpack:///webpack/bootstrap a3dba318b42d11f7737c","webpack:///external \"lodash\"","webpack:///./src/utils/index.js","webpack:///./src/lib/fsa/fsa.js","webpack:///external \"fs\"","webpack:///./src/lib/langs_stuff/common.js","webpack:///external \"path\"","webpack:///./src/lib/graminfo/graminfo.js","webpack:///./src/lib/constants.js","webpack:///./src/lib/fsa/access/fsa_sparse_file.js","webpack:///./src/lib/fsa/access/fsa_sparse_mem.js","webpack:///./src/lib/fsa/access/fsa_tree_file.js","webpack:///./src/lib/fsa/access/fsa_tree_mem.js","webpack:///./src/lib/graminfo/access/graminfo_file.js","webpack:///./src/lib/graminfo/access/graminfo_mem.js","webpack:///./src/lib/langs_stuff/ru_ru.js","webpack:///./src/lib/morphiers.js","webpack:///external \"encoding\"","webpack:///./src/index.js","webpack:///./src/lib/common.js","webpack:///./src/lib/fsa/fsa_state.js","webpack:///./src/lib/gramtab.js","webpack:///./src/lib/gramtab_consts.js","webpack:///./src/lib/source.js","webpack:///./src/lib/storage.js","webpack:///./src/lib/unicode.js","webpack:///./src/lib/fsa/access ^\\.\\/fsa_.*$","webpack:///./src/lib/graminfo/access ^\\.\\/graminfo_.*$","webpack:///./src/lib/langs_stuff ^\\.\\/.*$","webpack:///external \"core-js/modules/es6.reflect.apply\"","webpack:///external \"core-js/modules/es6.reflect.construct\"","webpack:///external \"core-js/modules/es6.reflect.define-property\"","webpack:///external \"core-js/modules/es6.reflect.delete-property\"","webpack:///external \"core-js/modules/es6.reflect.get\"","webpack:///external \"core-js/modules/es6.reflect.get-own-property-descriptor\"","webpack:///external \"core-js/modules/es6.reflect.get-prototype-of\"","webpack:///external \"core-js/modules/es6.reflect.has\"","webpack:///external \"core-js/modules/es6.reflect.is-extensible\"","webpack:///external \"core-js/modules/es6.reflect.own-keys\"","webpack:///external \"core-js/modules/es6.reflect.prevent-extensions\"","webpack:///external \"core-js/modules/es6.reflect.set\"","webpack:///external \"core-js/modules/es6.reflect.set-prototype-of\"","webpack:///external \"core-js/modules/es6.regexp.flags\"","webpack:///external \"core-js/modules/es6.symbol\"","webpack:///external \"core-js/modules/es6.weak-map\"","webpack:///external \"core-js/modules/es6.weak-set\"","webpack:///external \"core-js/modules/es7.array.includes\"","webpack:///external \"core-js/modules/es7.string.pad-end\"","webpack:///external \"core-js/modules/es7.string.pad-start\"","webpack:///external \"core-js/modules/web.dom.iterable\"","webpack:///external \"core-js/modules/web.immediate\"","webpack:///external \"core-js/modules/web.timers\"","webpack:///external \"phpjs\"","webpack:///external \"phpunserialize\"","webpack:///external \"util\"","webpack:///./src/test.js","webpack:///./src/tests/index.js","webpack:///external \"child_process\"","webpack:///external \"core-js/modules/es6.array.from\"","webpack:///external \"core-js/modules/es6.function.name\"","webpack:///external \"core-js/modules/es6.map\"","webpack:///external \"core-js/modules/es6.promise\"","webpack:///external \"core-js/modules/es6.set\"","webpack:///external \"core-js/modules/es7.object.entries\"","webpack:///external \"core-js/modules/es7.object.get-own-property-descriptors\"","webpack:///external \"core-js/modules/es7.object.values\""],"names":["onShutdown","cb","handlers","push","logger","log","console","bind","trace","info","warn","error","castArray","any","isUndefined","isNull","isArray","inspect","object","opts","depth","colors","maxArrayLength","ini_set","unpack","format","buffer","codes","parts","split","offset","mod","lenStr","len","length","result","idx","slice","readUInt32LE","readUInt16LE","exec","parseInt","toString","puts","obj","unserialize","ord","str","Buffer","isBuffer","from","isNumber","_substr","substr","php$substr","start","end","apply","arguments","isStringifyedNumber","int","toInteger","toBuffer","something","encoding","retVal","item","map","isString","isPlainObject","clone","forEach","val","key","buffer2str","str2ascii","i","str2hex","instance","merge","Object","create","getPrototypeOf","php","Morphy_Fsa_Interface","getRootTrans","getRootState","getAlphabet","getAnnot","trans","walk","word","readAnnot","collect","startNode","callback","path","readState","index","unpackTranses","rawTranses","Morphy_Fsa","HEADER_SIZE","storage","lazy","Morphy_Fsa_Proxy","readHeader","validateHeader","header","read","Error","type","storage_type","getTypeAsString","className","ucfirst","fsaAccess","getResource","headerRaw","join","flags","raw_flags","constructor","resource","fsa_start","root_trans","readRootTrans","alphabet","createState","getRootStateIndex","isset","readAlphabet","alphabetBuf","Morphy_Fsa_WordsCollector","collectLimit","limit","items","annot","size","getItems","clear","getCallback","Morphy_Fsa_Decorator","fsa","args","_fsa","value","Morphy_GrammemsProvider_Interface","getGrammems","partOfSpeech","Morphy_GrammemsProvider_Decorator","inner","Morphy_GrammemsProvider_Base","flatizeArray","array","flatten","values","grammems","all_grammems","getAllGrammemsGrouped","includeGroups","names","array_flip","array_keys","excludeGroups","resetGroups","resetGroupsForAll","Morphy_GrammemsProvider_Empty","Morphy_GrammemsProvider_ForFactory","enc","encoded_grammems","encodeGrammems","getGrammemsMap","from_enc","getSelfEncoding","ary","keyBuffer","keyBufferConverted","convert","new_key","new_value","valueBuffer","valueBufferConverted","Morphy_GrammemsProvider_Factory_included","Map","Morphy_GrammemsProvider_Factory","morphy","locale","getLocale","toLowerCase","has","set","included","get","grammemsProviders","err","isFunction","Morphy_GramInfo_Interface","getEncoding","getCharSize","getEnds","readGramInfoHeader","getGramInfoHeaderSize","readAncodes","readFlexiaData","readAllGramInfoOffsets","getHeader","readAllPartOfSpeech","readAllGrammems","readAllAncodes","Morphy_GramInfo","Morphy_GramInfo_Proxy","graminfoAccess","rtrim","buf","alloc","ends","fill","ends_size","cleanupCString","string","stringBuf","pos","indexOf","readSectionIndex","count","readSectionIndexAsSize","total_size","Morphy_GramInfo_Decorator","$storage","_info","Morphy_GramInfo_Proxy_WithHeader","$cacheFile","cache","readCache","fileName","readFileSync","replace","parsingGood","JSON","parse","e","Morphy_GramInfo_RuntimeCaching","$ancodes","$flexia_all","Morphy_GramInfo_AncodeCache","hits","miss","getFileSize","$offset","STORAGE_FILE","STORAGE_MEM","SOURCE_FSA","RESOLVE_ANCODES_AS_TEXT","RESOLVE_ANCODES_AS_DIALING","RESOLVE_ANCODES_AS_INT","NORMAL","IGNORE_PREDICT","ONLY_PREDICT","PREDICT_BY_NONE","PREDICT_BY_SUFFIX","PREDICT_BY_DB","Morphy_Fsa_Sparse_File","alphabet_num","fh","wordBuf","prev_trans","char","c","readSync","walked","last_trans","word_trans","stack","stack_idx","total","start_idx","state","call_user_func","pop","start_offset","getAlphabetNum","rawTrans","term","empty","attr","dest","array_map","Morphy_Fsa_Sparse_Mem","mem","$index","Morphy_Fsa_Tree_File","j","expect","llast","rlast","Morphy_Fsa_Tree_Mem","Morphy_GramInfo_File","header_size","readAncodesMap","forms_count","splitAncodes","ancodes","k","kc","mapItem","res","readAllFlexia","affixes","name","is_predict","shift","grammems_count","grammem_ids","pos_id","Morphy_GramInfo_Mem","array_values","$size","$i","Morphy_GrammemsProvider_ru_ru_instances","WeakMap","Morphy_GrammemsProvider_ru_ru","self_encoding","grammems_map","instances","Morphy_Morphier_Interface","getBaseForm","getAllForms","getPseudoRoot","getPartOfSpeech","getWordDescriptor","getAllFormsWithAncodes","getAncode","getGrammarInfoMergeForms","getGrammarInfo","Morphy_Morphier_Empty","getAllFormsWithGramInfo","castFormByGramInfo","returnWords","Morphy_AnnotDecoder_Interface","decode","annotsRaw","withBase","Morphy_AnnotDecoder_Base","INVALID_ANCODE_ID","unpack_str","getUnpackString","block_size","getUnpackBlockSize","annotRawBuf","annotRaw","unpack_size","Morphy_AnnotDecoder_Common","Morphy_AnnotDecoder_Predict","Morphy_AnnotDecoder_Factory_instances","Morphy_AnnotDecoder_Factory","AnnotDecoders","eos","getCommonDecoder","cache_common","instantinate","getPredictDecoder","cache_predict","Morphy_AncodesResolver_Interface","resolve","ancodeId","unresolve","ancode","Morphy_AncodesResolver_ToText","gramtab","ancodeToString","stringToAncode","Morphy_AncodesResolver_ToDialingAncodes","ancodesMap","ancodes_map","reverse_map","Morphy_AncodesResolver_AsIs","Morphy_AncodesResolver_Proxy","AncodesResolvers","ctorArgs","___obj","__obj","Morphy_WordDescriptor_Collection","Array","Symbol","species","annots","helper","decodeAnnot","createDescriptor","Morphy_WordDescriptor","getByPartOfSpeech","poses","desc","hasPartOfSpeech","Morphy_Morphier_Helper","graminfo","ancodesResolver","resolvePartOfSpeech","resolve_pos","ancodes_resolver","char_size","annot_decoder","gramtab_consts_included","setAnnotDecoder","annotDecoder","getEndOfString","hasAnnotDecoder","getAnnotDecoder","getAncodesResolver","getGramInfo","getGramTab","isResolvePartOfSpeech","posId","resolvePartOfSpeechId","getGrammemsAndPartOfSpeech","extractPartOfSpeech","includeGramTabConsts","includeConsts","getBaseAndPrefix","cplen","plen","flen","base","prefix","keys","composeBaseForms","composeForms","toArray","all_ancodes","flexias","common_ancode","common_grammems","form_no","form_ancodes","form_pos","form_grammems","array_merge","form","array_diff","common","all","uniqWith","isEqual","sortedUniq","sortBy","stringify","form_no_low","form_no_high","info_item","unique_info","getAllFormsWithResolvedAncodes","resolveType","composeFormsWithResolvedAncodes","foundFormNo","composeFormsWithAncodes","getAllAncodes","baseAndPrefix","annotIdx","words","current_ancodes","forms","found_form_no","is_array","Morphy_WordForm","compareGrammems","a","b","hasGrammems","grammes_count","array_intersect","getWord","getFormNo","cached_base","cached_forms","all_forms_readed","cached_pseudo_root","common_ancode_grammems","readAllForms","getWordForm","createWordForm","grammemsAndPartOfSpeech","formsWithAncodes","splice","getFoundFormNoLow","getFoundFormNoHigh","getFoundWordForm","some","wf","getWordFormsByGrammems","getWordFormsByPartOfSpeech","Morphy_Morphier_Finder_Interface","findWord","raw","Morphy_Morphier_Finder_Base","prev_word","prev_result","doFindWord","Morphy_Morphier_Finder_Common","root","getFsa","Morphy_Morphier_Finder_Predict_Suffix","minimalSuffixLength","min_suf_len","unicode","word_len","strlen","firstCharSize","fixAnnots","Morphy_Morphier_PredictCollector","collected","used_poses","result_idx","nextItemsIndex","itemsSize","max","Morphy_Morphier_Finder_Predict_Database","minPostfixMatch","min_postfix_match","collector","createCollector","createAnnotDecoder","rev_word","strrev","match_len","fixTrailing","determineAnnots","matchLen","suffix","slen","partOfWordInPlaceOfPrefix","partOfWordInPlaceOfSuffix","equals","Morphy_Morphier_Base","finder","cloneDeep","getFinder","getHelper","returnOnlyWord","castFormByPattern","patternWord","orig_annots","pattern_annots","Morphy_Morphier_Common","Morphy_Morphier_Predict_Suffix","Morphy_Morphier_Predict_Database","Morphy_Morphier_Bulk","notfound","getGraminfo","getNotFoundWords","data","processAnnotsWithHelper","method","callWithWord","annot_raw","result_for_annot","patriciaTrie","buildPatriciaTrie","labels","finals","dests","n","label","is_final","concat","onlyBase","pseudoRoot","sort","compare","prev_wordBuf","prev_word_len","prev_lcp","node","state_labels","state_dests","state_finals","new_state_id","need_split","trim_size","node_key","new_node_id_1","new_node_id_2","new_node_id","lcp","Math","min","stack_size","abs","node_key_buf","defaults","dir","__dirname","predict_by_suffix","predict_by_db","graminfo_as_text","use_ancodes_cache","resolve_ancodes","Morphy","lang","assign","options","morpher","prepareWord","asBuffer","toUpperCase","getCommonMorphier","getPredictBySuffixMorphier","getPredictByDatabaseMorphier","getBulkMorphier","getGrammemsProvider","getDefaultGrammemsProvider","isLastPredicted","getLastPredictionType","lemmatize","asText","getGramInfoMergeForms","getAnnotForWord","castFormByAncode","commonAncode","grammemsProvider","Morphy_FilesBundle","dirName","setLang","getLang","getCommonAutomatFile","genFileName","getPredictAutomatFile","getGramInfoFile","getGramInfoAncodesCacheFile","getAncodesMapFile","getGramTabFile","getGramTabFileWithTextIds","getGramInfoHeaderCacheFile","token","extraExt","Morphy_WordDescriptor_Collection_Serializer","serialize","collection","descriptor","processWordDescriptor","word_form","serializeGramInfo","wordForm","implode","phpMorphy","repairOptions","init","createFilesBundle","last_prediction_type","bundle","storage_factory","createStorageFactory","common_fsa","createFsa","open","predict_fsa","createGramInfo","createGramTab","createMorphierHelper","__common_morphier","__predict_by_suf_morphier","__predict_by_db_morphier","__bulk_morphier","__grammems_provider","w","invoke","out","r","processWordsCollection","resolver","common_ancode_id","ancode_id","word_annot","paradigm","grammar","essential_grammems","uniq","__word_descriptor_serializer","not_found","predictWord","createCommonSource","repairOldOptions","repairSourceOptions","common_source","___predict_by_db_morphier","createPredictByDbMorphier","___predict_by_suf_morphier","createPredictBySuffixMorphier","___bulk_morphier","createBulkMorphier","___common_morphier","createCommonMorphier","___word_descriptor_serializer","createWordDescriptorSerializer","___grammems_provider","createGrammemsProvider","graminfoFile","createAncodesResolverInternal","createAncodesResolver","graminfoAsText","Morphy_Link_Base","raw_trans","isAnnotation","getTrans","getRawTrans","Morphy_Link","getDest","getAttr","getTargetState","Morphy_State","Morphy_Link_Annot","getAnnotation","raw_transes","transes","getLinks","createNormalLink","createAnnotLink","getSize","Morphy_GramTab_Interface","resolveGrammemIds","ids","id","partOfSpeechId","grammemIds","Morphy_GramTab_Empty","Morphy_GramTab_Proxy","Morphy_GramTab","___ancodes_map","require","findAncode","__ancodes_map","buildAncodesMap","PMY_RP_NOUN","PMY_RP_ADJ_FULL","PMY_RP_VERB","PMY_RP_PRONOUN","PMY_RP_PRONOUN_P","PMY_RP_PRONOUN_PREDK","PMY_RP_NUMERAL","PMY_RP_NUMERAL_P","PMY_RP_ADV","PMY_RP_PREDK","PMY_RP_PREP","PMY_RP_POSL","PMY_RP_CONJ","PMY_RP_INTERJ","PMY_RP_INP","PMY_RP_PHRASE","PMY_RP_PARTICLE","PMY_RP_ADJ_SHORT","PMY_RP_PARTICIPLE","PMY_RP_ADVERB_PARTICIPLE","PMY_RP_PARTICIPLE_SHORT","PMY_RP_INFINITIVE","PMY_RP_EMPTY","PMY_RG_PLURAL","PMY_RG_SINGULAR","PMY_RG_NOMINATIV","PMY_RG_GENITIV","PMY_RG_DATIV","PMY_RG_ACCUSATIV","PMY_RG_INSTRUMENTALIS","PMY_RG_LOCATIV","PMY_RG_VOCATIV","PMY_RG_MASCULINUM","PMY_RG_FEMINUM","PMY_RG_NEUTRUM","PMY_RG_MASC_FEM","PMY_RG_PRESENT_TENSE","PMY_RG_FUTURE_TENSE","PMY_RG_PAST_TENSE","PMY_RG_FIRST_PERSON","PMY_RG_SECOND_PERSON","PMY_RG_THIRD_PERSON","PMY_RG_IMPERATIVE","PMY_RG_ANIMATIVE","PMY_RG_NON_ANIMATIVE","PMY_RG_COMPARATIVE","PMY_RG_PERFECTIVE","PMY_RG_NON_PERFECTIVE","PMY_RG_NON_TRANSITIVE","PMY_RG_TRANSITIVE","PMY_RG_ACTIVE_VOICE","PMY_RG_PASSIVE_VOICE","PMY_RG_INDECLINABLE","PMY_RG_INITIALISM","PMY_RG_PATRONYMIC","PMY_RG_TOPONYM","PMY_RG_ORGANISATION","PMY_RG_QUALITATIVE","PMY_RG_DE_FACTO_SING_TANTUM","PMY_RG_INTERROGATIVE","PMY_RG_DEMONSTRATIVE","PMY_RG_NAME","PMY_RG_SUR_NAME","PMY_RG_IMPERSONAL","PMY_RG_SLANG","PMY_RG_MISPRINT","PMY_RG_COLLOQUIAL","PMY_RG_POSSESSIVE","PMY_RG_ARCHAISM","PMY_RG_SECOND_CASE","PMY_RG_POETRY","PMY_RG_PROFESSION","PMY_RG_SUPERLATIVE","PMY_RG_POSITIVE","PMY_RG_SHORT","PMY_RG_INFO","PMY_RG_DEEPR","PMY_RG_PR","PMY_EP_NOUN","PMY_EP_ADJ","PMY_EP_VERB","PMY_EP_VBE","PMY_EP_MOD","PMY_EP_NUMERAL","PMY_EP_CONJ","PMY_EP_INTERJ","PMY_EP_PREP","PMY_EP_PARTICLE","PMY_EP_ART","PMY_EP_ADV","PMY_EP_PN","PMY_EP_ORDNUM","PMY_EP_PRON","PMY_EP_POSS","PMY_EP_PN_ADJ","PMY_EP_EMPTY","PMY_EG_SINGULAR","PMY_EG_PLURAL","PMY_EG_MASCULINUM","PMY_EG_FEMINUM","PMY_EG_ANIMATIVE","PMY_EG_PERFECTIVE","PMY_EG_NOMINATIVE","PMY_EG_OBJECT_CASE","PMY_EG_NARRATIVE","PMY_EG_GEOGRAPHICS","PMY_EG_PROPER","PMY_EG_PERSONAL_PRONOUN","PMY_EG_POSSESSIVE","PMY_EG_PREDICATIVE","PMY_EG_UNCOUNTABLE","PMY_EG_REFLEXIVE_PRONOUN","PMY_EG_DEMONSTRATIVE_PRONOUN","PMY_EG_MASS","PMY_EG_COMPARATIV","PMY_EG_SUPREMUM","PMY_EG_FIRST_PERSON","PMY_EG_SECOND_PERSON","PMY_EG_THIRD_PERSON","PMY_EG_PRESENT_INDEF","PMY_EG_INFINITIVE","PMY_EG_PAST_INDEF","PMY_EG_PAST_PARTICIPLE","PMY_EG_GERUND","PMY_EG_FUTURUM","PMY_EG_CONDITIONAL","PMY_EG_APOSTROPHE_S","PMY_EG_APOSTROPHE","PMY_EG_NAMES","PMY_EG_ORGANISATION","PMY_GP_ART","PMY_GP_ADJ","PMY_GP_ADV","PMY_GP_EIG","PMY_GP_SUB","PMY_GP_VER","PMY_GP_P_A1","PMY_GP_P_A2","PMY_GP_PRONOMEN","PMY_GP_PRP","PMY_GP_KON","PMY_GP_NEG","PMY_GP_INJ","PMY_GP_ZAL","PMY_GP_ZUS","PMY_GP_PRO_BEG","PMY_GP_ZU_INFINITIV","PMY_GP_EMPTY","PMY_GG_NOA_UNK","PMY_GG_PREDIK_BENUTZ","PMY_GG_PRO_UNK","PMY_GG_TMP_UNK","PMY_GG_NAC","PMY_GG_MOU","PMY_GG_COU","PMY_GG_GEO","PMY_GG_WASSER","PMY_GG_GEB","PMY_GG_STD","PMY_GG_LOK","PMY_GG_VOR","PMY_GG_SICH_ACC","PMY_GG_SICH_DAT","PMY_GG_SCHWACH","PMY_GG_NICHT_SCHWACH","PMY_GG_MODAL","PMY_GG_AUXILIAR","PMY_GG_KONJ1","PMY_GG_KONJ2","PMY_GG_PARTIZIP1","PMY_GG_PARTIZIP2","PMY_GG_ZU_VERB_FORM","PMY_GG_IMPERATIV","PMY_GG_PRAETERITUM","PMY_GG_PRASENS","PMY_GG_GRUNDFORM","PMY_GG_KOMPARATIV","PMY_GG_SUPERLATIV","PMY_GG_PROPORTIONAL_KONJUNKTION","PMY_GG_INFINITIV","PMY_GG_VERGLEICHS_KONJUNKTION","PMY_GG_NEBENORDNENDE","PMY_GG_UNTERORDNENDE","PMY_GG_PERSONAL","PMY_GG_DEMONSTRATIV","PMY_GG_INTERROGATIV","PMY_GG_POSSESSIV","PMY_GG_REFLEXIV","PMY_GG_RIN_PRONOMEN","PMY_GG_ALG_PRONOMEN","PMY_GG_ADJEKTIVE_OHNE_ARTIKEL","PMY_GG_ADJEKTIVE_MIT_UNBESTIMMTE","PMY_GG_ADJEKTIVE_MIT_BESTIMMTE","PMY_GG_ERSTE_PERSON","PMY_GG_ZWEITE_PERSON","PMY_GG_DRITTE_PERSON","PMY_GG_FEMININ","PMY_GG_MASKULIN","PMY_GG_NEUTRUM","PMY_GG_PLURAL","PMY_GG_SINGULAR","PMY_GG_NOMINATIV","PMY_GG_GENITIV","PMY_GG_DATIV","PMY_GG_AKKUSATIV","PMY_GG_ABBREVIATION","PMY_GG_EINWOHNER","PMY_GG_TRANSITIV","PMY_GG_INTRANSITIV","PMY_GG_IMPERSONAL","PMY_UP_UNKNOWN","PMY_UG_UNKNOWN","Morphy_Source_Interface","getValue","Morphy_Source_Fsa","Morphy_Storage","file_name","getFileName","getType","exactLength","readUnsafe","message","Morphy_Storage_Proxy","factory","Morphy_Storage_File","stat","fstatSync","openSync","Morphy_Storage_Mem","Morphy_Storage_Factory","storages","Morphy_UnicodeHelper_cache","Morphy_UnicodeHelper_unicodeHelpers","Morphy_UnicodeHelper","unicodeHelpers","doCreate","matches","match","tmp","encoding_name","utf_type","utf_base","endiannes","pack","str_replace","Morphy_UnicodeHelper_singlebyte","Morphy_UnicodeHelper_Base","php_strlen","Morphy_UnicodeHelper_MultiByteFixed","array_reverse","str_split","floor","reverse","Morphy_UnicodeHelper_utf_8","tails_length","getTailsLength","diff","seq_len","Morphy_UnicodeHelper_utf_16_Base","isBigEndian","is_be","char_fmt","fmt","t","array_unshift","isSurrogate","Morphy_UnicodeHelper_utf_16le","Morphy_UnicodeHelper_utf_16be","Morphy_UnicodeHelper_utf_32_Base","Morphy_UnicodeHelper_utf_32le","Morphy_UnicodeHelper_utf_32be","Morphy_UnicodeHelper_ucs_2le","Morphy_UnicodeHelper_ucs_2be","Morphy_UnicodeHelper_ucs_4le","Morphy_UnicodeHelper_ucs_4be","runPhpTests","runLocalTests","cliEncode","phpTestsFile","relative","process","cwd","runPhpFileWithArgs","noop","cliArgs","Promise","reject","maxBuffer","stdout","stderr","success","testFoundWordParadigms","paradigms","formsOfSourceWord","sampleFormsByGrammem","sampleFormsByPartOfSpeech","formNo","includes","tests","provider","results","fn","partition","test","wordsEn","another","wordsRu","filter","testData","config","time","phpResults","localResults","reduce","testName","consistentResults","local","timeEnd","hasErrors","groupName","catch"],"mappings":"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","file":"test.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 58);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a3dba318b42d11f7737c","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 0\n// module chunks = 0 1","import _ from 'lodash';\nimport util from 'util';\n// import jschardet from 'jschardet';\n// import encoding from 'encoding';\nimport php from 'phpjs';\nimport phpunserialize from 'phpunserialize';\n\n/**\n * @param {function} cb\n */\nfunction onShutdown (cb) {\n  onShutdown.handlers.push(cb);\n}\nonShutdown.handlers = [];\n\nconst logger = {};\nlogger.log = console.log.bind(console);\nlogger.trace = console.trace.bind(console);\nlogger.info = console.info.bind(console);\nlogger.warn = console.warn.bind(console);\nlogger.error = console.error.bind(console);\n\n/**\n * @param any\n * @returns {Array}\n */\nfunction castArray (any) {\n  any = (!_.isUndefined(any) && !_.isNull(any)) ? any : [];\n  any = _.isArray(any) ? any : [any];\n  \n  return any;\n}\n\n/**\n * @param object\n * @param {{}} [opts]\n * @returns {string}\n */\nfunction inspect (object, opts = {\n  depth: null,\n  colors: true,\n  maxArrayLength: 1000\n}) {\n  return util.inspect(object, opts);\n}\n\n// /**\n//  * @param {String|Buffer} text\n//  * @returns {String}\n//  */\n// function detectCharset (text) {\n//   let buffer;\n//   let retVal = null;\n//\n//   if (_.isArray(text)) {\n//     return _.map(text, item => detectCharset(item));\n//   } else\n//   if (_.isString(text)) {\n//     buffer = Buffer.from(text, 'binary');\n//   } else\n//   if (!Buffer.isBuffer(text)) {\n//     buffer = null;\n//   }\n//\n//   if (buffer) {\n//     retVal = jschardet.detect(buffer).encoding;\n//     retVal = (retVal) ? retVal.toLowerCase() : null;\n//   }\n//\n//   return retVal;\n// }\n\n// /**\n//  * @param {String|Buffer} text\n//  * @param {String} to\n//  * @param {String} [from='UTF-8']\n//  * @returns {*}\n//  */\n// function convert (text, to, from = 'UTF-8') {\n//   let args = _.toArray(arguments);\n//   let buffer = null;\n//   let retVal = text;\n//\n//   if (_.isArray(text)) {\n//     return _.map(text, (item) => convert.apply(convert, [item].concat(args.slice(1))));\n//   } else\n//   if (_.isString(text)) {\n//     buffer = Buffer.from(text, 'binary');\n//   } else\n//   if (!Buffer.isBuffer(text)) {\n//     buffer = null;\n//   }\n//\n//   if (buffer) {\n//     from = (!from) ? detectCharset(buffer) : from;\n//\n//     if (from) {\n//       retVal = encoding.convert(buffer, to, from);\n//     }\n//\n//     return retVal.toString();\n//   }\n//\n//   return retVal;\n// }\n\n//php.ini_set('unicode.semantics', 'on');\nphp.ini_set('phpjs.objectsAsArrays', false);\n\nphp.unpack = function unpack (format, buffer) {\n  /**\n   * Параметр format задается в виде строки и состоит из кодов формата и\n   * опционального аргумента повторения. Аргумент может быть целочисленным,\n   * либо * для повторения до конца введенных данных. Для a, A, h, H число\n   * повторений определяет то, сколько символов взято от одного аргумента\n   * данных, для @ - это абсолютная позиция для размещения следующих данных,\n   * для всего остального число повторений определяет как много аргументов\n   * данных было обработано и упаковано в результирующую бинарную строку.\n   */\n  const codes  = {\n    'a': 'Строка (string) с NULL-заполнением',\n    'A': 'Строка (string) со SPACE-заполнением',\n    'h': 'Hex-строка (Hex string), с нижнего разряда',\n    'H': 'Hex-строка (Hex string), с верхнего разряда',\n    'c': 'знаковый символ (char)',\n    'C': 'беззнаковый символ (char)',\n    's': 'знаковый short (всегда 16 бит, машинный байтовый порядок)',\n    'S': 'беззнаковый short (всегда 16 бит, машинный байтовый порядок)',\n    'n': 'беззнаковый short (всегда 16 бит, порядок big endian)',\n    'v': 'беззнаковый short (всегда 16 бит, порядок little endian)',\n    'i': 'знаковый integer (машинно-зависимый размер и порядок)',\n    'I': 'беззнаковый integer (машинно-зависимый размер и порядок)',\n    'l': 'знаковый long (всегда 32 бит, машинный порядок)',\n    'L': 'беззнаковый long (всегда 32 бит, машинный порядок)',\n    'N': 'беззнаковый long (всегда 32 бит, порядок big endian)',\n    'V': 'беззнаковый long (всегда 32 бит, порядок little endian)',\n    'f': 'float (машинно-зависимые размер и прдставление)',\n    'd': 'double (машинно-зависимые размер и прдставление)',\n    'x': 'NUL байт',\n    'X': 'Резервирование одного байта',\n    '@': 'NUL-заполнение до абсолютной позиции'\n  };\n  const parts  = format.split('/');\n  let offset = 0, mod, lenStr, len;\n  if (parts.length > 1) {\n    let result = {};\n    for (let idx = 0; idx < parts.length; idx++) {\n      mod = parts[idx][0];\n      if (mod in codes) {\n        switch (mod) {\n          case 'V':\n            result[parts[idx].slice(1)] = buffer.readUInt32LE(offset);\n            offset += 4;\n            break;\n          case 'v':\n            result[parts[idx].slice(1)] = buffer.readUInt16LE(offset);\n            offset += 2;\n            break;\n          case 'a':\n            lenStr = /\\d+/g.exec(parts[idx])[0];\n            len = parseInt(lenStr, 10);\n            result[parts[idx].slice(1 + lenStr.length)] = buffer.toString('ascii', offset, len);\n            offset += len;\n            break;\n          default:\n            util.puts(parts[idx] + ' ' + offset);\n            break;\n        }\n      }\n    }\n    \n    return result;\n  } else {\n    let result = [];\n    do {\n      let obj = {};\n      mod = format[0];\n      if (mod in codes) {\n        switch (mod) {\n          case 'V':\n            obj = buffer.readUInt32LE(offset);\n            offset += 4;\n            break;\n          case 'v':\n            obj = buffer.readUInt16LE(offset);\n            offset += 2;\n            break;\n          case 'a':\n            lenStr = /\\d+/g.exec(format)[0];\n            len = parseInt(lenStr, 10);\n            obj = buffer.toString('ascii', offset, len);\n            offset += len;\n            break;\n          default:\n            util.puts(format);\n            break;\n        }\n      }\n      result.push(obj);\n    } while (offset < buffer.length);\n    \n    return result;\n  }\n};\n\nphp.unserialize = phpunserialize;\n\nphp.ord = function ord (str, idx) {\n  if (!Buffer.isBuffer(str)) {\n    str = Buffer.from(str);\n  }\n  \n  idx = (!_.isUndefined(idx) && _.isNumber(idx) && idx < str.length) ? idx : 0;\n  \n  return str[idx];\n};\n\nphp._substr = php.substr; // safe\n/**\n * @param {String|Buffer} str\n * @param {Number} start\n * @param {Number} [len]\n * @returns {string|Buffer|boolean}\n */\nphp.substr = function php$substr (str, start, len) {\n  let end;\n  \n  if (Buffer.isBuffer(str)) {\n    end = str.length;\n    start = (start < 0) ? start + end : start;\n    end = typeof len === 'undefined' ? end : (len < 0 ? len + end : len + start);\n    \n    return (start >= str.length || start < 0 || start > end) ? false : str.slice(start, end);\n  }\n  \n  return php._substr.apply(php._substr, arguments);\n};\n\n// /**\n//  * @param raw\n//  * @returns {String|null}\n//  */\n// function detectEncoding (raw) {\n//   let buffer, result;\n//   if (Buffer.isBuffer(raw)) {\n//     buffer = raw;\n//   } else {\n//     raw = (_.isString(raw)) ? raw : raw +'';\n//     buffer = Buffer.from(raw, 'binary');\n//   }\n//\n//   result = jschardet.detect(buffer);\n//\n//   return (result.encoding) ? result.encoding : null;\n// }\n\n/**\n * @param any\n * @returns {boolean}\n */\nfunction isStringifyedNumber (any) {\n  let int = _.toInteger(any);\n  \n  if (int === 0 && any !== '0') {\n    return false;\n  }\n  \n  return any == int;\n}\n/**\n * @param something\n * @param [encoding='utf-8']\n * @returns {Buffer|*}\n */\nfunction toBuffer (something, encoding = 'utf-8') {\n  let retVal = something;\n  \n  if (_.isArray(something)) {\n    retVal = _.map(something, item => toBuffer(item, encoding));\n  } else\n  if (Buffer.isBuffer(something)) {\n    retVal = something;\n  } else\n  if (_.isString(something)) {\n    retVal = Buffer.from(something, encoding);\n  } else\n  if (_.isPlainObject(something)) {\n    let obj = _.clone(something);\n    _.forEach(obj, (val, key) => obj[key] = toBuffer(val, encoding));\n    \n    retVal = obj;\n  }\n  \n  return retVal;\n}\n\n/**\n * @param something\n * @param {String} [encoding='utf8']\n * @returns {string|*}\n */\nfunction buffer2str (something, encoding = 'utf8') {\n  return (Buffer.isBuffer(something)) ? something.toString(encoding) : something;\n}\n\n/**\n * @param something\n * @returns {Array}\n */\nfunction str2ascii (something) {\n  let retVal = [];\n  let buffer = (!Buffer.isBuffer(something)) ? Buffer.from(something, 'binary') : something;\n  \n  for (let i = 0, length = buffer.length; i < length; i++) {\n    retVal.push(buffer[i]);\n  }\n  \n  return retVal;\n}\n\n/**\n * @param something\n * @returns {String}\n */\nfunction str2hex (something) {\n  let retVal = (!Buffer.isBuffer(something)) ? Buffer.from(something, 'binary') : something;\n  \n  return retVal.toString('hex');\n}\n\nfunction clone (instance) {\n  return _.merge({}, Object.create(Object.getPrototypeOf(instance)), instance);\n}\n\nexport {\n  onShutdown,\n  castArray,\n  logger,\n  inspect,\n  // detectCharset,\n  // convert,\n  php,\n  // detectEncoding,\n  isStringifyedNumber,\n  toBuffer,\n  buffer2str,\n  str2ascii,\n  str2hex,\n  clone\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/index.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\nimport { Morphy_State } from './fsa_state';\nimport { php } from '../../utils';\n\nclass Morphy_Fsa_Interface {\n\n  /**\n   * Return root transition of fsa\n   * @return {[]}\n   */\n  getRootTrans () {}\n\n  /**\n   * Returns root state object\n   * @return {*}\n   */\n  getRootState () {}\n\n  /**\n   * Returns alphabet i.e. all chars used in automat\n   * @return {[]}\n   */\n  getAlphabet () {}\n\n  /**\n   * Return annotation for given transition(if annotation flag is set for given trans)\n   *\n   * @param {[]} trans\n   * @return {string}\n   */\n  getAnnot (trans) {}\n  \n  /**\n   * Find word in automat\n   *\n   * @param {*} trans starting transition\n   * @param {string} word\n   * @param {boolean} [readAnnot=true] read annot or simple check if word exists in automat\n   * @return {boolean} TRUE if word is found, FALSE otherwise\n   */\n  walk (trans, word, readAnnot = true) {}\n\n  /**\n   * Traverse automat and collect words\n   * For each found words callback function invoked with follow arguments:\n   * call_user_func(callback, word, annot)\n   * when `readAnnot` is FALSE then `annot` arg is always NULL\n   *\n   * @param {*} startNode\n   * @param {*} callback callback function(in php format callback i.e. string or array(obj, method) or array(class,\n   *   method)\n   * @param {boolean} [readAnnot=true] read annot\n   * @param {string} [path=] string to be append to all words\n   */\n  collect (startNode, callback, readAnnot = true, path = '') {}\n\n  /**\n   * Read state at given index\n   *\n   * @param {number} index\n   * @return {[]}\n   */\n  readState (index) {}\n\n  /**\n   * Unpack transition from binary form to array\n   *\n   * @param {*} rawTranses may be array for convert more than one transitions\n   * @return {[]}\n   */\n  unpackTranses (rawTranses) {}\n\n}\n\nclass Morphy_Fsa extends Morphy_Fsa_Interface {\n  \n  static get HEADER_SIZE () {\n    return 128;\n  }\n  \n  /**\n   * @param {Morphy_Storage} storage\n   * @param {boolean} lazy\n   * @returns {*}\n   */\n  static create (storage, lazy) {\n    if (!!lazy) {\n      return new Morphy_Fsa_Proxy(storage);\n    }\n    \n    const { readHeader, validateHeader, HEADER_SIZE } = Morphy_Fsa;\n    const header = readHeader(storage.read(0, HEADER_SIZE, true));\n\n    if (!validateHeader(header)) {\n      throw new Error('Invalid fsa format');\n    }\n\n    let type;\n    if (header['flags']['is_sparse']) {\n      type = 'sparse';\n    } else\n    if (header['flags']['is_tree']) {\n      type = 'tree';\n    } else {\n      throw new Error('Only sparse or tree fsa`s supported');\n    }\n\n    const storage_type = storage.getTypeAsString();\n    const className = `Morphy_Fsa_${ php.ucfirst(type) }_${ php.ucfirst(storage_type) }`;\n    const fsaAccess = require('./access/fsa_'+ type +'_'+ storage_type);\n    \n    return new fsaAccess[className](storage.getResource(), header);\n  }\n  \n  static readHeader (headerRaw) {\n    const { HEADER_SIZE } = Morphy_Fsa;\n\n    if (headerRaw.length != HEADER_SIZE) {\n      throw new Error('Invalid header string given');\n    }\n\n    const header = php.unpack([\n      'a4fourcc',\n      'Vver',\n      'Vflags',\n      'Valphabet_offset',\n      'Vfsa_offset',\n      'Vannot_offset',\n      'Valphabet_size',\n      'Vtranses_count',\n      'Vannot_length_size',\n      'Vannot_chunk_size',\n      'Vannot_chunks_count',\n      'Vchar_size',\n      'Vpadding_size',\n      'Vdest_size',\n      'Vhash_size'\n    ].join('/'), headerRaw);\n\n    if (header === false) {\n      throw new Error('Can`t unpack header');\n    }\n\n    const flags          = {};\n    const raw_flags      = header['flags'];\n    flags['is_tree']   = !!(raw_flags & 0x01);\n    flags['is_hash']   = !!(raw_flags & 0x02);\n    flags['is_sparse'] = !!(raw_flags & 0x04);\n    flags['is_be']     = !!(raw_flags & 0x08);\n\n    header['flags'] = flags;\n\n    header['trans_size'] = header['char_size'] + header['padding_size'] + header['dest_size'] + header['hash_size'];\n\n    return header;\n  }\n\n  static validateHeader (header) {\n    return !(\n      header['fourcc'] != 'meal' ||\n      header['ver'] != 3 ||\n      header['char_size'] != 1 ||\n      header['padding_size'] > 0 ||\n      header['dest_size'] != 3 ||\n      header['hash_size'] != 0 ||\n      header['annot_length_size'] != 1 ||\n      header['annot_chunk_size'] != 1 ||\n      header['flags']['is_be'] ||\n      header['flags']['is_hash'] ||\n      1 == 0\n    );\n  }\n\n  constructor (resource, header) {\n    super(...arguments);\n    this.resource   = resource;\n    this.header     = header;\n    this.fsa_start  = header['fsa_offset'];\n    this.root_trans = this.readRootTrans();\n    this.alphabet   = null;\n  }\n\n  getRootTrans () {\n    return this.root_trans;\n  }\n\n  getRootState () {\n    return this.createState(this.getRootStateIndex());\n  }\n\n  getAlphabet () {\n    if (!php.isset(this.alphabet)) {\n      //this.alphabet = php.str_split(this.readAlphabet());\n\n      const alphabet = this.readAlphabet();\n      const alphabetBuf = Buffer.from(alphabet);\n      const result = [];\n\n      for (let i = 0, length = alphabetBuf.length; i < length; i++) {\n        result.push(alphabetBuf.slice(i, i+1).toString());\n      }\n\n      this.alphabet = result;\n    }\n\n    return this.alphabet;\n  }\n\n  createState (index) {\n    return new Morphy_State(this, index);\n  }\n\n  getRootStateIndex () {}\n\n  readRootTrans () {}\n\n  readAlphabet () {}\n\n}\n\nclass Morphy_Fsa_WordsCollector {\n\n  constructor (collectLimit) {\n    this.limit = collectLimit;\n    this.items = {};\n  }\n\n  collect (word, annot) {\n    if (_.size(this.items) < this.limit) {\n      this.items[word] = annot;\n      return true;\n    }\n\n    return false;\n  }\n\n  getItems () {\n    return this.items;\n  }\n\n  clear () {\n    this.items = {};\n  }\n\n  getCallback () {\n    return [this, 'collect'];\n  }\n\n}\n\nclass Morphy_Fsa_Decorator extends Morphy_Fsa_Interface {\n\n  /**\n   * @param {Morphy_Fsa_Interface} fsa\n   */\n  constructor (fsa) {\n    super(...arguments);\n    this.fsa = fsa;\n  }\n\n  getRootTrans (...args) {\n    return this.fsa.getRootTrans(...args);\n  }\n\n  getRootState (...args) {\n    return this.fsa.getRootState(...args);\n  }\n\n  getAlphabet (...args) {\n    return this.fsa.getAlphabet(...args);\n  }\n\n  getAnnot (...args) {\n    return this.fsa.getAnnot(...args);\n  }\n\n  walk (...args) {\n    return this.fsa.walk(...args);\n  }\n\n  collect (...args) {\n    return this.fsa.collect(...args);\n  }\n\n  readState (...args) {\n    return this.fsa.readState(...args);\n  }\n\n  unpackTranses (...args) {\n    return this.fsa.unpackTranses(...args);\n  }\n\n}\n\nclass Morphy_Fsa_Proxy extends Morphy_Fsa_Decorator {\n\n  /**\n   * @param {Morphy_Storage} storage\n   */\n  constructor (storage) {\n    super(...arguments);\n    this.storage = storage;\n    this._fsa    = null;\n  }\n\n  get fsa () {\n    if (!this._fsa) {\n      this._fsa = Morphy_Fsa.create(this.storage, false);\n      delete this.storage;\n    }\n\n    return this._fsa;\n  }\n  \n  set fsa (value) {\n    this._fsa = (!_.isUndefined(value)) ? value : null;\n  }\n\n}\n\nexport {\n  Morphy_Fsa_Interface,\n  Morphy_Fsa,\n  Morphy_Fsa_WordsCollector,\n  Morphy_Fsa_Decorator,\n  Morphy_Fsa_Proxy\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/fsa/fsa.js","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 3\n// module chunks = 0 1","import _ from 'lodash';\nimport encoding from 'encoding';\nimport { php } from '../../utils';\n\nclass Morphy_GrammemsProvider_Interface {\n  getGrammems (partOfSpeech) {}\n}\n\nclass Morphy_GrammemsProvider_Decorator extends Morphy_GrammemsProvider_Interface {\n\n  /**\n   * @param {Morphy_GrammemsProvider_Interface} inner\n   */\n  constructor (inner) {\n    super(...arguments);\n\n    this.inner = inner;\n  }\n\n  getGrammems (partOfSpeech) {\n    return this.inner.getGrammems(partOfSpeech);\n  }\n\n}\n\nclass Morphy_GrammemsProvider_Base extends Morphy_GrammemsProvider_Interface {\n  \n  static flatizeArray (array) {\n    return _.flatten(_.values(array));\n  }\n\n  constructor () {\n    super(...arguments);\n  \n    this.grammems = {};\n    this.all_grammems = Morphy_GrammemsProvider_Base.flatizeArray(this.getAllGrammemsGrouped());\n  }\n\n  getAllGrammemsGrouped () {}\n\n  includeGroups (partOfSpeech, names) {\n    const grammems = this.getAllGrammemsGrouped();\n    names = (!_.isArray(names)) ? [names] : names;\n    names = php.array_flip(names);\n\n    _.forEach(php.array_keys(grammems), key => {\n      if (!php.isset(names[key])) {\n        delete grammems[key];\n      }\n    });\n\n    this.grammems[partOfSpeech] = Morphy_GrammemsProvider_Base.flatizeArray(grammems);\n\n    return this;\n  }\n\n  excludeGroups (partOfSpeech, names) {\n    const grammems = this.getAllGrammemsGrouped();\n    names = (!_.isArray(names)) ? [names] : names;\n\n    _.forEach(names, key => delete grammems[key]);\n    \n    this.grammems[partOfSpeech] = Morphy_GrammemsProvider_Base.flatizeArray(grammems);\n\n    return this;\n  }\n\n  resetGroups (partOfSpeech) {\n    delete this.grammems[partOfSpeech];\n\n    return this;\n  }\n\n  resetGroupsForAll () {\n    this.grammems = {};\n\n    return this;\n  }\n\n  getGrammems (partOfSpeech) {\n    if (php.isset(this.grammems[partOfSpeech])) {\n      return this.grammems[partOfSpeech];\n    }\n\n    return this.all_grammems;\n  }\n\n}\n\nclass Morphy_GrammemsProvider_Empty extends Morphy_GrammemsProvider_Base {\n\n  constructor () {\n    super(...arguments);\n  }\n\n  getAllGrammemsGrouped () {\n    return {};\n  }\n\n  getGrammems (partOfSpeech) {\n    return false;\n  }\n\n}\n\nclass Morphy_GrammemsProvider_ForFactory extends Morphy_GrammemsProvider_Base {\n\n  constructor (enc) {\n    super(...arguments);\n    this.encoded_grammems = this.encodeGrammems(this.getGrammemsMap(), enc);\n  \n    // а как по-другому?\n    // кроме как копипастой кода родительского конструктора\n    // и чтобы аккуратно - никак\n    this.grammems = {};\n    this.all_grammems = Morphy_GrammemsProvider_Base.flatizeArray(this.getAllGrammemsGrouped());\n  }\n\n  getGrammemsMap () {}\n\n  getAllGrammemsGrouped () {\n    return this.encoded_grammems;\n  }\n\n  encodeGrammems (grammems, enc) {\n    const from_enc = this.getSelfEncoding();\n    const result = {};\n\n    if (from_enc == enc) {\n      return grammems;\n    }\n\n    _.forEach(grammems, (ary, key) => {\n      const keyBuffer = Buffer.from(key);\n      const keyBufferConverted = encoding.convert(keyBuffer, enc, from_enc);\n      const new_key = keyBufferConverted.toString();\n      const new_value = [];\n\n      _.forEach(ary, value => {\n        const valueBuffer = Buffer.from(value);\n        const valueBufferConverted = encoding.convert(valueBuffer, enc, from_enc);\n\n        new_value.push(valueBufferConverted.toString());\n      });\n\n      result[new_key] = new_value;\n    });\n\n    return result;\n  }\n\n}\n\nconst Morphy_GrammemsProvider_Factory_included = new Map;\n\nclass Morphy_GrammemsProvider_Factory {\n  /**\n   * @param {phpMorphy} morphy\n   * @returns {*}\n   */\n  static create (morphy) {\n    const locale = morphy.getLocale().toLowerCase();\n  \n    if (!Morphy_GrammemsProvider_Factory_included.has(morphy)) {\n      Morphy_GrammemsProvider_Factory_included.set(morphy, {});\n    }\n    \n    const included = Morphy_GrammemsProvider_Factory_included.get(morphy);\n    \n    if (_.isUndefined(included[locale])) {\n      const className = `Morphy_GrammemsProvider_${ locale }`;\n      let grammemsProviders = {};\n      \n      try {\n        grammemsProviders = require('./'+ locale);\n      } catch (err) {\n        included[locale] = new Morphy_GrammemsProvider_Empty(morphy);\n        return included[locale];\n      }\n  \n      if (_.isFunction(grammemsProviders[className])) {\n        included[locale] = grammemsProviders[className].instance(morphy);\n      } else {\n        throw new Error(\"Class '\" + className + \"' not found\");\n      }\n    }\n  \n    return included[locale];\n  }\n}\n\nexport {\n  Morphy_GrammemsProvider_Interface,\n  Morphy_GrammemsProvider_Decorator,\n  Morphy_GrammemsProvider_Base,\n  Morphy_GrammemsProvider_Empty,\n  Morphy_GrammemsProvider_ForFactory,\n  Morphy_GrammemsProvider_Factory\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/langs_stuff/common.js","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 5\n// module chunks = 0 1","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\nimport _ from 'lodash';\nimport fs from 'fs';\nimport path from 'path';\nimport { php } from '../../utils';\n\nclass Morphy_GramInfo_Interface {\n\n  /**\n   * Returns language for graminfo file\n   * @returns {string}\n   */\n  getLocale () {}\n\n  /**\n   * Return encoding for graminfo file\n   * @returns {string}\n   */\n  getEncoding () {}\n\n  /**\n   * Return size of character (cp1251 - 1, utf8 - 1, utf16 - 2, utf32 - 4 etc)\n   * @returns {number}\n   */\n  getCharSize () {}\n\n  /**\n   * Return end of string value (usually string with \\0 value of char_size + 1 length)\n   * @returns {string}\n   */\n  getEnds () {}\n\n  /**\n   * Reads graminfo header\n   *\n   * @param {number} offset\n   * @returns {[]}\n   */\n  readGramInfoHeader (offset) {}\n\n  /**\n   * Returns size of header struct\n   */\n  getGramInfoHeaderSize () {}\n\n  /**\n   * Read ancodes section for header retrieved with readGramInfoHeader\n   *\n   * @param {[]} info\n   * @returns {[]}\n   */\n  readAncodes (info) {}\n\n  /**\n   * Read flexias section for header retrieved with readGramInfoHeader\n   *\n   * @param {[]} info\n   * @returns {[]}\n   */\n  readFlexiaData (info) {}\n\n  /**\n   * Read all graminfo headers offsets, which can be used latter for readGramInfoHeader method\n   * @returns {[]}\n   */\n  readAllGramInfoOffsets () {}\n\n  getHeader () {}\n\n  readAllPartOfSpeech () {}\n\n  readAllGrammems () {}\n\n  readAllAncodes () {}\n\n}\n\nclass Morphy_GramInfo extends Morphy_GramInfo_Interface {\n  \n  static get HEADER_SIZE () {\n    return 128;\n  }\n\n  /**\n   * @param {Morphy_Storage} storage\n   * @param {boolean} lazy\n   * @returns {*}\n   */\n  static create (storage, lazy) {\n    if (lazy) {\n      return new Morphy_GramInfo_Proxy(storage);\n    }\n  \n    const { readHeader, validateHeader, HEADER_SIZE } = Morphy_GramInfo;\n    const header = readHeader(storage.read(0, HEADER_SIZE));\n\n    if (!validateHeader(header)) {\n      throw new Error('Invalid graminfo format');\n    }\n\n    const storage_type = storage.getTypeAsString();\n    const className = `Morphy_GramInfo_${ php.ucfirst(storage_type) }`;\n    const graminfoAccess = require('./access/graminfo_'+ storage_type);\n    \n    return new graminfoAccess[className](storage.getResource(), header);\n  }\n\n  static readHeader (headerRaw) {\n    const header = php.unpack([\n      'Vver',\n      'Vis_be',\n      'Vflex_count_old',\n      'Vflex_offset',\n      'Vflex_size',\n      'Vflex_count',\n      'Vflex_index_offset',\n      'Vflex_index_size',\n      'Vposes_offset',\n      'Vposes_size',\n      'Vposes_count',\n      'Vposes_index_offset',\n      'Vposes_index_size',\n      'Vgrammems_offset',\n      'Vgrammems_size',\n      'Vgrammems_count',\n      'Vgrammems_index_offset',\n      'Vgrammems_index_size',\n      'Vancodes_offset',\n      'Vancodes_size',\n      'Vancodes_count',\n      'Vancodes_index_offset',\n      'Vancodes_index_size',\n      'Vchar_size',\n      ''\n    ].join('/'), headerRaw);\n\n    let offset = 24 * 4;\n    let len = php.ord(php.substr(headerRaw, offset++, 1));\n\n    header['lang'] = php.rtrim(php.substr(headerRaw, offset, len));\n    offset += len;\n    len = php.ord(php.substr(headerRaw, offset++, 1));\n    header['encoding'] = php.rtrim(php.substr(headerRaw, offset, len));\n\n    return header;\n  }\n\n  static validateHeader (header) {\n    return (header['ver'] == 3 || header['is_be'] != 1);\n  }\n\n  constructor (resource, header) {\n    super(...arguments);\n    \n    this.resource = resource;\n    this.header = header;\n    //this.ends      = php.str_repeat('\\0', header['char_size'] + 1);\n    //this.ends_size = php.strlen(this.ends);\n    const buf = Buffer.alloc(header['char_size'] + 1);\n    this.ends = buf.fill('\\0');\n    this.ends_size = buf.length;\n  }\n\n  getLocale () {\n    return this.header['lang'];\n  }\n\n  getEncoding () {\n    return this.header['encoding'];\n  }\n\n  getCharSize () {\n    return this.header['char_size'];\n  }\n\n  getEnds () {\n    return this.ends;\n  }\n\n  getHeader () {\n    return this.header;\n  }\n\n  cleanupCString (string) {\n    //var pos = php.strpos(string, this.ends);\n    //if (pos !== false) {\n    //  string = php.substr(string, 0, pos);\n    //}\n\n    let stringBuf = (Buffer.isBuffer(string)) ? string : Buffer.from(string);\n    const pos = this.ends.indexOf(stringBuf);\n    if (pos >= 0) {\n      stringBuf = stringBuf.slice(0, pos);\n    }\n\n    return stringBuf.toString();\n  }\n\n  readSectionIndex (offset, count) {}\n\n  readSectionIndexAsSize (offset, count, total_size) {\n    // todo\n    if (!count) {\n      return [];\n    }\n\n    const index = this.readSectionIndex(offset, count);\n    index[count] = index[0] + total_size;\n\n    for (let i = 0; i < count; i++) {\n      index[i] = index[i + 1] - index[i];\n    }\n\n    delete index[count];\n\n    return index;\n  }\n\n}\n\nclass Morphy_GramInfo_Decorator extends Morphy_GramInfo_Interface {\n\n  /**\n   * @param {Morphy_GramInfo_Interface} info\n   */\n  constructor (info) {\n    super(...arguments);\n    this.info = info;\n  }\n\n  readGramInfoHeader (...args) {\n    return this.info.readGramInfoHeader(...args);\n  }\n\n  getGramInfoHeaderSize (...args) {\n    return this.info.getGramInfoHeaderSize(...args);\n  }\n\n  readAncodes (...args) {\n    return this.info.readAncodes(...args);\n  }\n\n  readFlexiaData (...args) {\n    return this.info.readFlexiaData(...args);\n  }\n\n  readAllGramInfoOffsets (...args) {\n    return this.info.readAllGramInfoOffsets(...args);\n  }\n\n  readAllPartOfSpeech (...args) {\n    return this.info.readAllPartOfSpeech(...args);\n  }\n\n  readAllGrammems (...args) {\n    return this.info.readAllGrammems(...args);\n  }\n\n  readAllAncodes (...args) {\n    return this.info.readAllAncodes(...args);\n  }\n\n  getLocale (...args) {\n    return this.info.getLocale(...args);\n  }\n\n  getEncoding (...args) {\n    return this.info.getEncoding(...args);\n  }\n\n  getCharSize (...args) {\n    return this.info.getCharSize(...args);\n  }\n\n  getEnds (...args) {\n    return this.info.getEnds(...args);\n  }\n  \n  getHeader (...args) {\n    return this.info.getHeader(...args);\n  }\n\n}\n\nclass Morphy_GramInfo_Proxy extends Morphy_GramInfo_Decorator {\n\n  /**\n   * @param {Morphy_Storage} $storage\n   */\n  constructor ($storage) {\n    super(...arguments);\n    \n    this.storage = $storage;\n    this._info   = null;\n  }\n\n  get info () {\n    if (!this._info) {\n      this._info = Morphy_GramInfo.create(this.storage, false);\n      delete this.storage;\n    }\n\n    return this._info;\n  }\n  \n  set info (value) {\n    this._info = (!_.isUndefined(value)) ? value : null;\n  }\n\n}\n\nclass Morphy_GramInfo_Proxy_WithHeader extends Morphy_GramInfo_Decorator {\n\n  /**\n   * @param {Morphy_Storage} $storage\n   * @param $cacheFile\n   */\n  constructor ($storage, $cacheFile) {\n    super(...arguments);\n    \n    this.storage = $storage;\n    this._info = null;\n    this.cache = this.readCache($cacheFile);\n    //this.ends = php.str_repeat('\\0', this.getCharSize() + 1);\n    const buf = Buffer.alloc(this.getCharSize() + 1);\n    this.ends = buf.fill('\\0');\n  }\n\n  readCache (fileName) {\n    let result = fs.readFileSync(fileName);\n\n    result = /\\(([\\s\\S]*)\\)/igm.exec(result.toString())[1];\n    result = result\n      .replace(/\\s/igm, '')\n      .replace(/,$/, '')\n      .replace(/=>/g, ':')\n      .replace(/'/g, '\"')\n    ;\n\n    result = ['{', result, '}'].join('');\n\n    let parsingGood = true;\n    try {\n      result = JSON.parse(result);\n      parsingGood = _.isPlainObject(result);\n    } catch (e) {\n      parsingGood = false;\n    }\n\n    if (!parsingGood) {\n      throw new Error('Can`t get header cache from \"' + fileName +'\" file');\n    }\n\n    return result;\n  }\n\n  getLocale () {\n    return this.cache['lang'];\n  }\n\n  getEncoding () {\n    return this.cache['encoding'];\n  }\n\n  getCharSize () {\n    return this.cache['char_size'];\n  }\n\n  getEnds () {\n    return this.ends;\n  }\n\n  getHeader () {\n    return this.cache;\n  }\n\n  get info () {\n    if (!this._info) {\n      this._info = Morphy_GramInfo.create(this.storage, false);\n      delete this.storage;\n    }\n\n    return this._info;\n  }\n  \n  set info (value) {\n    this._info = (!_.isUndefined(value)) ? value : null;\n  }\n\n}\n\nclass Morphy_GramInfo_RuntimeCaching extends Morphy_GramInfo_Decorator {\n\n  constructor (...args) {\n    super(...args);\n    this.$ancodes = {};\n    this.$flexia_all = {};\n  }\n\n  readFlexiaData (info) {\n    const offset = info['offset'];\n\n    if (!php.isset(this.$flexia_all[offset])) {\n      this.$flexia_all[offset] = this.info.readFlexiaData(info);\n    }\n\n    return this.$flexia_all[offset];\n  }\n\n}\n\nclass Morphy_GramInfo_AncodeCache extends Morphy_GramInfo_Decorator {\n\n  /**\n   * @param {Morphy_GramInfo_Interface} inner\n   * @param resource\n   */\n  constructor (inner, resource) {\n    super(...arguments);\n\n    this.hits  = 0;\n    this.miss  = 0;\n    this.cache = null;\n\n    this.cache = php.unserialize(resource.read(0, resource.getFileSize()).toString());\n    if (this.cache === false) {\n      throw new Error(\"Can`t read ancodes cache\");\n    }\n  }\n\n  readAncodes (info) {\n    const $offset = info['offset'];\n\n    // todo: проверить доступ по индекс\n    if (php.isset(this.cache[$offset])) {\n      this.hits++;\n      return this.cache[$offset];\n    }\n\n    // in theory misses never occur\n    this.miss++;\n\n    return super.readAncodes(info);\n  }\n\n}\n\nexport {\n  Morphy_GramInfo_Interface,\n  Morphy_GramInfo,\n  Morphy_GramInfo_Decorator,\n  Morphy_GramInfo_Proxy,\n  Morphy_GramInfo_Proxy_WithHeader,\n  Morphy_GramInfo_RuntimeCaching,\n  Morphy_GramInfo_AncodeCache\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/graminfo/graminfo.js","export const STORAGE_FILE = 'file';\r\nexport const STORAGE_MEM = 'mem';\r\nexport const SOURCE_FSA = 'fsa';\r\n\r\nexport const RESOLVE_ANCODES_AS_TEXT = 0;\r\nexport const RESOLVE_ANCODES_AS_DIALING = 1;\r\nexport const RESOLVE_ANCODES_AS_INT = 2;\r\nexport const NORMAL = 0;\r\nexport const IGNORE_PREDICT = 2;\r\nexport const ONLY_PREDICT = 3;\r\nexport const PREDICT_BY_NONE = 'none';\r\nexport const PREDICT_BY_SUFFIX = 'by_suffix';\r\nexport const PREDICT_BY_DB = 'by_db';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/constants.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\nimport fs from 'fs';\nimport { php, castArray } from '../../../utils';\nimport { Morphy_Fsa } from '../fsa';\n\nclass Morphy_Fsa_Sparse_File extends Morphy_Fsa {\n\n  constructor (...args) {\n    super(...args);\n\n    this.alphabet_num = null;\n  }\n\n  /**\n   * @param trans\n   * @param word\n   * @param {boolean} [readAnnot=true]\n   */\n  walk (trans, word, readAnnot = true) {\n    const fh = this.resource;\n    const fsa_start = this.fsa_start;\n    const wordBuf = Buffer.from(word);\n\n    let prev_trans;\n    let char;\n    let result;\n    let annot;\n    let buf;\n  \n    let i = 0;\n    let c = wordBuf.length;\n    for (; i < c; i++) {\n      prev_trans = trans;\n      char = php.ord(wordBuf, i);\n\n      /////////////////////////////////\n      // find char in state begin\n      // sparse version\n      result = true;\n      buf = Buffer.alloc(4);\n      fs.readSync(fh, buf, 0, 4, fsa_start + ((((trans >> 10) & 0x3FFFFF) + char + 1) << 2));\n      trans = php.unpack('V', buf)[0];\n\n      if ((trans & 0x0200) || (trans & 0xFF) != char) {\n        result = false;\n      }\n      // find char in state end\n      /////////////////////////////////\n\n      if (!result) {\n        trans = prev_trans;\n        break;\n      }\n    }\n\n    annot = null;\n    result = false;\n    prev_trans = trans;\n\n    if (i >= c) {\n      // Read annotation when we walked all chars in word\n      result = true;\n\n      if (readAnnot) {\n        // read annot trans\n        buf = Buffer.alloc(4);\n        fs.readSync(fh, buf, 0, 4, fsa_start + (((trans >> 10) & 0x3FFFFF) << 2));\n        trans = php.unpack('V', buf)[0];\n\n        if ((trans & 0x0100) == 0) {\n          result = false;\n        } else {\n          annot = this.getAnnot(trans);\n        }\n      }\n    }\n\n    return {\n      result,\n      annot,\n      walked: i,\n      last_trans: trans,\n      word_trans: prev_trans\n    };\n  }\n\n  /**\n   * @param {*} startNode\n   * @param {*} callback\n   * @param {boolean} [readAnnot=true]\n   * @param {string} [path=]\n   * @returns {number}\n   */\n  collect (startNode, callback, readAnnot = true, path = '') {\n    const stack     = [];\n    const stack_idx = [];\n\n\n    let total = 0;\n    let start_idx = 0;\n    let state;\n    let trans;\n    let annot;\n\n    stack.push(null);\n    stack_idx.push(null);\n\n    state = this.readState(((startNode) >> 10) & 0x3FFFFF);\n\n    do {\n      let i = start_idx;\n      let c = _.size(state);\n      for (; i < c; i++) {\n        trans = state[i];\n\n        if ((trans & 0x0100)) {\n          total++;\n\n          if (readAnnot) {\n            annot = this.getAnnot(trans);\n          } else {\n            annot = trans;\n          }\n\n          //if (!php.call_user_func(callback, path, annot)) {\n          if (!php.call_user_func(callback, null, annot)) {\n            return total;\n          }\n        } else {\n          //path += php.chr((trans & 0xFF));\n          stack.push(state);\n          stack_idx.push(i + 1);\n          state = this.readState(((trans) >> 10) & 0x3FFFFF);\n          start_idx = 0;\n\n          break;\n        }\n      }\n\n      if (i >= c) {\n        state = stack.pop();\n        start_idx = stack_idx.pop();\n        //path = php.substr(Buffer.from(path), 0, -1).toString();\n      }\n    } while (!!stack.length);\n\n    return total;\n  }\n\n  readState (index) {\n    const fh = this.resource;\n    const fsa_start = this.fsa_start;\n    const result = [];\n    \n    let buf;\n    let trans;\n    let start_offset = fsa_start + ((index) << 2);\n\n    // first try read annot transition\n    buf = Buffer.alloc(4);\n    fs.readSync(fh, buf, 0, 4, start_offset);\n    trans = php.unpack('V', buf)[0];\n\n    if ((trans & 0x0100)) {\n      result.push(trans);\n    }\n\n    // read rest\n    start_offset += 4;\n    _.forEach(this.getAlphabetNum(), char => {\n      buf = Buffer.alloc(4);\n      fs.readSync(fh, buf, 0, 4, start_offset + ((char) << 2));\n      trans = php.unpack('V', buf)[0];\n\n      //if(!(trans & 0x0200) && (trans & 0xFF) == char) {\n      // TODO: check term and empty flags at once i.e. trans & 0x0300\n      if (!((trans & 0x0200) || (trans & 0x0100)) && (trans & 0xFF) == char) {\n        result.push(trans);\n      }\n    });\n\n    return result;\n  }\n\n  unpackTranses (rawTranses) {\n    rawTranses = castArray(rawTranses);\n    const result = [];\n\n    _.forEach(rawTranses, rawTrans => {\n      result.push({\n        term:  !!(rawTrans & 0x0100),\n        empty: !!(rawTrans & 0x0200),\n        attr:  (rawTrans & 0xFF),\n        dest:  ((rawTrans) >> 10) & 0x3FFFFF\n      });\n    });\n\n    return result;\n  }\n\n  readRootTrans () {\n    const fh = this.resource;\n    const fsa_start = this.fsa_start;\n    let trans;\n    let buf;\n\n    buf = Buffer.alloc(4);\n    fs.readSync(fh, buf, 0, 4, fsa_start + 4);\n    trans = php.unpack('V', buf)[0];\n\n    return trans;\n  }\n\n  readAlphabet () {\n    const fh = this.resource;\n    let buf;\n\n    buf = Buffer.alloc(this.header['alphabet_size']);\n    fs.readSync(fh, buf, 0, this.header['alphabet_size'], this.header['alphabet_offset']);\n\n    return buf.toString();\n  }\n\n  getAnnot (trans) {\n    if (!(trans & 0x0100)) {\n      return null;\n    }\n\n    const fh = this.resource;\n    const offset = this.header['annot_offset'] + (((trans & 0xFF) << 22) | ((trans >> 10) & 0x3FFFFF));\n    let len;\n    let annot;\n    let buf;\n\n    buf = Buffer.alloc(1);\n    fs.readSync(fh, buf, 0, 1, offset);\n    len = php.ord(buf);\n\n    if (len) {\n      buf = Buffer.alloc(len);\n      fs.readSync(fh, buf, 0, len, offset + 1);\n      annot = buf;\n    } else {\n      annot = null;\n    }\n\n    return annot;\n  }\n\n  getAlphabetNum () {\n    if (!php.isset(this.alphabet_num)) {\n      this.alphabet_num = php.array_map(php.ord, this.getAlphabet());\n    }\n\n    return this.alphabet_num;\n  }\n\n}\n\nexport { Morphy_Fsa_Sparse_File };\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/fsa/access/fsa_sparse_file.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\nimport { php, castArray } from '../../../utils';\nimport { Morphy_Fsa } from '../fsa';\n\nclass Morphy_Fsa_Sparse_Mem extends Morphy_Fsa {\n\n  constructor (...args) {\n    super(...args);\n\n    this.alphabet_num = null;\n  }\n\n  /**\n   * @param trans\n   * @param word\n   * @param {boolean} [readAnnot=true]\n   */\n  walk (trans, word, readAnnot = true) {\n    const mem = this.resource;\n    const fsa_start = this.fsa_start;\n    const wordBuf = Buffer.from(word);\n    let prev_trans;\n    let char;\n    let result;\n    let annot;\n    let buf;\n  \n    let i = 0;\n    let c = wordBuf.length;\n    for (; i < c; i++) {\n      prev_trans = trans;\n      char = php.ord(wordBuf, i);\n\n      /////////////////////////////////\n      // find char in state begin\n      // sparse version\n      result = true;\n      buf = php.substr(mem, fsa_start + ((((trans >> 10) & 0x3FFFFF) + char + 1) << 2), 4);\n      trans  = php.unpack('V', buf)[0];\n\n      if ((trans & 0x0200) || (trans & 0xFF) != char) {\n        result = false;\n      }\n      // find char in state end\n      /////////////////////////////////\n\n      if (!result) {\n        trans = prev_trans;\n        break;\n      }\n    }\n\n    annot = null;\n    result = false;\n    prev_trans = trans;\n\n    if (i >= c) {\n      // Read annotation when we walked all chars in word\n      result = true;\n\n      if (readAnnot) {\n        // read annot trans\n        buf = php.substr(mem, fsa_start + (((trans >> 10) & 0x3FFFFF) << 2), 4);\n        trans = php.unpack('V', buf)[0];\n\n        if ((trans & 0x0100) == 0) {\n          result = false;\n        } else {\n          annot = this.getAnnot(trans);\n        }\n      }\n    }\n\n    return {\n      result,\n      annot,\n      walked: i,\n      last_trans: trans,\n      word_trans: prev_trans\n    };\n  }\n\n  /**\n   * @param {*} startNode\n   * @param {*} callback\n   * @param {boolean} [readAnnot=true]\n   * @param {string} [path=]\n   * @returns {number}\n   */\n  collect (startNode, callback, readAnnot = true, path = '') {\n    const stack = [];\n    const stack_idx = [];\n\n    let total = 0;\n    let start_idx = 0;\n    let state;\n    let trans;\n    let annot;\n\n    stack.push(null);\n    stack_idx.push(null);\n\n    state = this.readState(((startNode) >> 10) & 0x3FFFFF);\n\n    do {\n      let i = start_idx;\n      let c = _.size(state);\n      for (; i < c; i++) {\n        trans = state[i];\n\n        if ((trans & 0x0100)) {\n          total++;\n\n          if (readAnnot) {\n            annot = this.getAnnot(trans);\n          } else {\n            annot = trans;\n          }\n\n          //if (!php.call_user_func(callback, path, annot)) {\n          if (!php.call_user_func(callback, null, annot)) {\n            return total;\n          }\n        } else {\n          //path += php.chr((trans & 0xFF));\n          stack.push(state);\n          stack_idx.push(i + 1);\n          state = this.readState(((trans) >> 10) & 0x3FFFFF);\n          start_idx = 0;\n\n          break;\n        }\n      }\n\n      if (i >= c) {\n        state     = stack.pop();\n        start_idx = stack_idx.pop();\n        //path      = php.substr(Buffer.from(path), 0, -1).toString();\n      }\n    } while (!!stack.length);\n\n    return total;\n  }\n\n  readState ($index) {\n    const mem = this.resource;\n    const fsa_start = this.fsa_start;\n    const result = [];\n  \n    let buf;\n    let trans;\n    let start_offset = fsa_start + (($index) << 2);\n\n    // first try read annot transition\n    buf = php.substr(mem, start_offset, 4);\n    trans = php.unpack('V', buf)[0];\n\n    if ((trans & 0x0100)) {\n      result.push(trans);\n    }\n\n    // read rest\n    start_offset += 4;\n    _.forEach(this.getAlphabetNum(), char => {\n      buf = php.substr(mem, start_offset + ((char) << 2), 4);\n      trans = php.unpack('V', buf)[0];\n\n      //if(!(trans & 0x0200) && (trans & 0xFF) == char) {\n      // TODO: check term and empty flags at once i.e. trans & 0x0300\n      if (!((trans & 0x0200) || (trans & 0x0100)) && (trans & 0xFF) == char) {\n        result.push(trans);\n      }\n    });\n\n    return result;\n  }\n\n  unpackTranses (rawTranses) {\n    rawTranses = castArray(rawTranses);\n    const result = [];\n\n    _.forEach(rawTranses, rawTrans => {\n      result.push({\n        term:  !!(rawTrans & 0x0100),\n        empty: !!(rawTrans & 0x0200),\n        attr:  (rawTrans & 0xFF),\n        dest:  ((rawTrans) >> 10) & 0x3FFFFF\n      });\n    });\n\n    return result;\n  }\n\n  readRootTrans () {\n    const mem = this.resource;\n    const fsa_start = this.fsa_start;\n\n    let buf;\n    let trans;\n\n    buf = php.substr(mem, fsa_start + 4, 4);\n    trans = php.unpack('V', buf)[0];\n\n    return trans;\n  }\n\n  readAlphabet () {\n    const mem = this.resource;\n    const buf = php.substr(mem, this.header['alphabet_offset'], this.header['alphabet_size']);\n\n    return buf.toString();\n  }\n\n  getAnnot (trans) {\n    if (!(trans & 0x0100)) {\n      return null;\n    }\n\n    const mem = this.resource;\n    const offset = this.header['annot_offset'] + (((trans & 0xFF) << 22) | ((trans >> 10) & 0x3FFFFF));\n\n    let annot;\n    let buf = php.substr(mem, offset, 1);\n    let len = php.ord(buf);\n\n    if (len) {\n      buf = php.substr(mem, offset + 1, len);\n      annot = buf;\n    } else {\n      annot = null;\n    }\n\n    return annot;\n  }\n\n  getAlphabetNum () {\n    if (!php.isset(this.alphabet_num)) {\n      this.alphabet_num = php.array_map(php.ord, this.getAlphabet());\n    }\n\n    return this.alphabet_num;\n  }\n\n}\n\nexport { Morphy_Fsa_Sparse_Mem };\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/fsa/access/fsa_sparse_mem.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\nimport fs from 'fs';\nimport { php, castArray } from '../../../utils';\nimport { Morphy_Fsa } from '../fsa';\n\nclass Morphy_Fsa_Tree_File extends Morphy_Fsa {\n\n  constructor (...args) {\n    super(...args);\n  }\n\n  /**\n   * @param trans\n   * @param word\n   * @param {boolean} [readAnnot=true]\n   * @returns {*}\n   */\n  walk (trans, word, readAnnot = true) {\n    const fh = this.resource;\n    const fsa_start = this.fsa_start;\n    const wordBuf = Buffer.from(word);\n\n    let prev_trans;\n    let char;\n    let result;\n    let start_offset;\n    let buf;\n    let attr;\n    let annot;\n  \n    let i = 0;\n    let c = wordBuf.length;\n    for (; i < c; i++) {\n      prev_trans = trans;\n      char = php.ord(wordBuf, i);\n\n      /////////////////////////////////\n      // find char in state begin\n      // tree version\n      result = true;\n      start_offset = fsa_start + (((trans >> 11) & 0x1FFFFF) << 2);\n\n      // read first trans in state\n      buf = Buffer.alloc(4);\n      fs.readSync(fh, buf, 0, 4, start_offset);\n      trans = php.unpack('V', buf)[0];\n\n      // If first trans is term(i.e. pointing to annot) then skip it\n      if ((trans & 0x0100)) {\n        // When this is single transition in state then break\n        if ((trans & 0x0200) && (trans & 0x0400)) {\n          result = false;\n        } else {\n          start_offset += 4;\n          buf = Buffer.alloc(4);\n          fs.readSync(fh, buf, 0, 4, start_offset);\n          trans = php.unpack('V', buf)[0];\n        }\n      }\n\n      // if all ok process rest transitions in state\n      if (result) {\n        // walk through state\n        let idx = 1;\n        let j = 0;\n        for (;; j++) {\n          attr = (trans & 0xFF);\n\n          if (attr == char) {\n            result = true;\n            break;\n          } else\n          if (attr > char) {\n            if ((trans & 0x0200)) {\n              result = false;\n              break;\n            }\n\n            idx = idx << 1;\n          } else {\n            if ((trans & 0x0400)) {\n              result = false;\n              break;\n            }\n\n            idx = (idx << 1) + 1;\n          }\n\n          if (j > 255) {\n            throw new Error('Infinite recursion possible');\n          }\n\n          // read next trans\n          buf = Buffer.alloc(4);\n          fs.readSync(fh, buf, 0, 4, start_offset + ((idx - 1) << 2));\n          trans = php.unpack('V', buf)[0];\n        }\n      }\n      // find char in state end\n      /////////////////////////////////\n\n      if (!result) {\n        trans = prev_trans;\n        break;\n      }\n    }\n\n    annot      = null;\n    result     = false;\n    prev_trans = trans;\n\n    if (i >= c) {\n      // Read annotation when we walked all chars in word\n      result = true;\n\n      if (readAnnot) {\n        // read annot trans\n        buf = Buffer.alloc(4);\n        fs.readSync(fh, buf, 0, 4, fsa_start + (((trans >> 11) & 0x1FFFFF) << 2));\n        trans = php.unpack('V', buf)[0];\n\n        if ((trans & 0x0100) == 0) {\n          result = false;\n        } else {\n          annot = this.getAnnot(trans);\n        }\n      }\n    }\n\n    return {\n      result,\n      annot,\n      walked: i,\n      last_trans: trans,\n      word_trans: prev_trans\n    };\n  }\n\n  /**\n   * @param startNode\n   * @param callback\n   * @param {boolean} [readAnnot=true]\n   * @param {string} [path=]\n   * @returns {number}\n   */\n  collect (startNode, callback, readAnnot = true, path = '') {\n    // `path` нигде не используется, даже в `Morphy_Morphier_PredictCollector.collect`,\n    // куда попадает этот `path` через вызов коллбека ниже\n    const stack = [];\n    const stack_idx = [];\n    \n    let total = 0;\n    let start_idx = 0;\n    let state;\n    let trans;\n    let annot;\n\n    stack.push(null);\n    stack_idx.push(null);\n    state = this.readState(((startNode) >> 11) & 0x1FFFFF);\n\n    do {\n      let i = start_idx;\n      let c = _.size(state);\n      for (; i < c; i++) {\n        trans = state[i];\n\n        if ((trans & 0x0100)) {\n          total++;\n\n          if (readAnnot) {\n            annot = this.getAnnot(trans);\n          } else {\n            annot = trans;\n          }\n\n          if (!php.call_user_func(callback, null, annot)) {\n            return total;\n          }\n        } else {\n          //path += php.chr((trans & 0xFF));\n          stack.push(state);\n          stack_idx.push(i + 1);\n          state = this.readState(((trans) >> 11) & 0x1FFFFF);\n          start_idx = 0;\n\n          break;\n        }\n      }\n\n      if (i >= c) {\n        state = stack.pop();\n        start_idx = stack_idx.pop();\n        //path = php.substr(path, 0, -1);\n      }\n    } while (!!stack.length);\n\n    return total;\n  }\n\n  readState (index) {\n    const fh = this.resource;\n    const fsa_start = this.fsa_start;\n    const result = [];\n  \n    let buf;\n    let trans;\n    let offset = fsa_start + ((index) << 2);\n\n    // read first trans\n    buf = Buffer.alloc(4);\n    fs.readSync(fh, buf, 0, 4, offset);\n    trans = php.unpack('V', buf)[0];\n\n    // check if first trans is pointer to annot, and not single in state\n    if ((trans & 0x0100) && !((trans & 0x0200) || (trans & 0x0400))) {\n      result.push(trans);\n\n      buf = Buffer.alloc(4);\n      fs.readSync(fh, buf, 0, 4, null);\n      trans = php.unpack('V', buf)[0];\n      offset += 4;\n    }\n\n    // read rest\n    for (let expect = 1; expect; expect--) {\n      if (!(trans & 0x0200)) {\n        expect++;\n      }\n      if (!(trans & 0x0400)) {\n        expect++;\n      }\n\n      result.push(trans);\n\n      if (expect > 1) {\n        buf = Buffer.alloc(4);\n        fs.readSync(fh, buf, 0, 4, null);\n        trans = php.unpack('V', buf)[0];\n        offset += 4;\n      }\n    }\n\n    return result;\n  }\n\n  unpackTranses (rawTranses) {\n    rawTranses = castArray(rawTranses);\n    const result = [];\n\n    _.forEach(rawTranses, rawTrans => {\n      result.push({\n        term:  !!(rawTrans & 0x0100),\n        llast: !!(rawTrans & 0x0200),\n        rlast: !!(rawTrans & 0x0400),\n        attr:  (rawTrans & 0xFF),\n        dest:  ((rawTrans) >> 11) & 0x1FFFFF\n      });\n    });\n\n    return result;\n  }\n\n  readRootTrans () {\n    const fh = this.resource;\n    const fsa_start = this.fsa_start;\n\n    let buf = Buffer.alloc(4);\n    fs.readSync(fh, buf, 0, 4, fsa_start + 0);\n    return php.unpack('V', buf)[0];\n  }\n\n  readAlphabet () {\n    const fh = this.resource;\n    let buf = Buffer.alloc(this.header['alphabet_size']);\n    fs.readSync(fh, buf, 0, this.header['alphabet_size'], this.header['alphabet_offset']);\n\n    return buf.toString();\n  }\n\n  getAnnot (trans) {\n    if (!(trans & 0x0100)) {\n      return null;\n    }\n\n    const fh = this.resource;\n    const offset = this.header['annot_offset'] + (((trans & 0xFF) << 21) | ((trans >> 11) & 0x1FFFFF));\n\n    let annot;\n    let buf = Buffer.alloc(1);\n    fs.readSync(fh, buf, 0, 1, offset);\n    \n    let len = php.ord(buf);\n    if (len) {\n      buf = Buffer.alloc(len);\n      fs.readSync(fh, buf, 0, len, null);\n      annot = buf;\n    } else {\n      annot = null;\n    }\n\n    return annot;\n  }\n\n}\n\nexport { Morphy_Fsa_Tree_File };\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/fsa/access/fsa_tree_file.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\nimport { php, castArray } from '../../../utils';\nimport { Morphy_Fsa } from '../fsa';\n\nclass Morphy_Fsa_Tree_Mem extends Morphy_Fsa {\n\n  constructor (...args) {\n    super(...args);\n  }\n  \n  /**\n   * @param trans\n   * @param word\n   * @param {boolean} [readAnnot=true]\n   * @returns {*}\n   */\n  walk (trans, word, readAnnot = true) {\n    const mem = this.resource;\n    const fsa_start = this.fsa_start;\n    const wordBuf = Buffer.from(word);\n\n    let prev_trans;\n    let char;\n    let result;\n    let start_offset;\n    let buf;\n    let attr;\n    let annot;\n  \n    let i = 0;\n    let c = wordBuf.length;\n    for (; i < c; i++) {\n      prev_trans = trans;\n      char = php.ord(wordBuf, i);\n\n      /////////////////////////////////\n      // find char in state begin\n      // tree version\n      result = true;\n      start_offset = fsa_start + (((trans >> 11) & 0x1FFFFF) << 2);\n\n      // read first trans in state\n      buf = php.substr(mem, start_offset, 4);\n      trans = php.unpack('V', buf)[0];\n\n      // If first trans is term(i.e. pointing to annot) then skip it\n      if ((trans & 0x0100)) {\n        // When this is single transition in state then break\n        if ((trans & 0x0200) && (trans & 0x0400)) {\n          result = false;\n        } else {\n          start_offset += 4;\n          buf = php.substr(mem, start_offset, 4);\n          trans = php.unpack('V', buf)[0];\n        }\n      }\n\n      // if all ok process rest transitions in state\n      if (result) {\n        // walk through state\n        for (let idx = 1, j = 0; ; j++) {\n          attr = (trans & 0xFF);\n\n          if (attr == char) {\n            result = true;\n            break;\n          } else\n          if (attr > char) {\n            if ((trans & 0x0200)) {\n              result = false;\n              break;\n            }\n\n            idx = idx << 1;\n          } else {\n            if ((trans & 0x0400)) {\n              result = false;\n              break;\n            }\n\n            idx = (idx << 1) + 1;\n          }\n\n          if (j > 255) {\n            throw new Error('Infinite recursion possible');\n          }\n\n          // read next trans\n          buf = php.substr(mem, start_offset + ((idx - 1) << 2), 4);\n          trans = php.unpack('V', buf)[0];\n        }\n      }\n\n      // find char in state end\n      /////////////////////////////////\n\n      if (!result) {\n        trans = prev_trans;\n        break;\n      }\n    }\n\n    annot = null;\n    result = false;\n    prev_trans = trans;\n\n    if (i >= c) {\n      // Read annotation when we walked all chars in word\n      result = true;\n\n      if (readAnnot) {\n        // read annot trans\n        buf = php.substr(mem, fsa_start + (((trans >> 11) & 0x1FFFFF) << 2), 4);\n        trans = php.unpack('V', buf)[0];\n\n        if ((trans & 0x0100) == 0) {\n          result = false;\n        } else {\n          annot = this.getAnnot(trans);\n        }\n      }\n    }\n\n    return {\n      result,\n      annot,\n      walked: i,\n      last_trans: trans,\n      word_trans: prev_trans\n    };\n  }\n\n  /**\n   * @param startNode\n   * @param callback\n   * @param {boolean} [readAnnot=true]\n   * @param {string} [path=]\n   * @returns {number}\n   */\n  collect (startNode, callback, readAnnot = true, path = '') {\n    // `path` нигде не используется, даже в `Morphy_Morphier_PredictCollector.collect`,\n    // куда попадает этот `path` через вызов коллбека ниже\n  \n    const stack = [];\n    const stack_idx = [];\n    \n    let total = 0;\n    let start_idx = 0;\n    let trans;\n    let annot;\n\n    stack.push(null);\n    stack_idx.push(null);\n\n    let state = this.readState(((startNode) >> 11) & 0x1FFFFF);\n\n    do {\n      let i = start_idx;\n      let c = _.size(state);\n      for (; i < c; i++) {\n        trans = state[i];\n\n        if ((trans & 0x0100)) {\n          total++;\n\n          if (readAnnot) {\n            annot = this.getAnnot(trans);\n          } else {\n            annot = trans;\n          }\n\n          //if (!php.call_user_func(callback, path, annot)) {\n          if (!php.call_user_func(callback, null, annot)) {\n            return total;\n          }\n        } else {\n          //path += php.chr((trans & 0xFF));\n          stack.push(state);\n          stack_idx.push(i + 1);\n          state = this.readState(((trans) >> 11) & 0x1FFFFF);\n          start_idx = 0;\n\n          break;\n        }\n      }\n\n      if (i >= c) {\n        state = stack.pop();\n        start_idx = stack_idx.pop();\n        //path = php.substr(path, 0, -1);\n      }\n    } while (!!stack.length);\n\n    return total;\n  }\n\n  readState (index) {\n    const mem = this.resource;\n    const fsa_start = this.fsa_start;\n    const result = [];\n\n    let offset = fsa_start + ((index) << 2);\n    // read first trans\n    let buf = php.substr(mem, offset, 4);\n    let trans = php.unpack('V', buf)[0];\n\n    // check if first trans is pointer to annot, and not single in state\n    if ((trans & 0x0100) && !((trans & 0x0200) || (trans & 0x0400))) {\n      result.push(trans);\n      buf = php.substr(mem, offset, 4);\n      trans = php.unpack('V', buf)[0];\n      offset += 4;\n    }\n\n    // read rest\n    for (let expect = 1; expect; expect--) {\n      if (!(trans & 0x0200)) {\n        expect++;\n      }\n      if (!(trans & 0x0400)) {\n        expect++;\n      }\n\n      result.push(trans);\n\n      if (expect > 1) {\n        buf = php.substr(mem, offset, 4);\n        trans = php.unpack('V', buf)[0];\n        offset += 4;\n      }\n    }\n\n    return result;\n  }\n\n  unpackTranses (rawTranses) {\n    rawTranses = castArray(rawTranses);\n    const result = [];\n\n    _.forEach(rawTranses, rawTrans => {\n      result.push({\n        term:  !!(rawTrans & 0x0100),\n        llast: !!(rawTrans & 0x0200),\n        rlast: !!(rawTrans & 0x0400),\n        attr:  (rawTrans & 0xFF),\n        dest:  ((rawTrans) >> 11) & 0x1FFFFF\n      });\n    });\n\n    return result;\n  }\n\n  readRootTrans () {\n    const fh = this.resource;\n    const fsa_start = this.fsa_start;\n\n    let buf = php.substr(fh, fsa_start + 0, 4);\n    return php.unpack('V', buf)[0];\n  }\n\n  readAlphabet () {\n    const fh = this.resource;\n    let buf = php.substr(fh, this.header['alphabet_offset'], this.header['alphabet_size']);\n\n    return buf.toString();\n  }\n\n  getAnnot (trans) {\n    if (!(trans & 0x0100)) {\n      return null;\n    }\n  \n    const fh = this.resource;\n    const offset = this.header['annot_offset'] + (((trans & 0xFF) << 21) | ((trans >> 11) & 0x1FFFFF));\n  \n    let annot;\n    let buf = php.substr(fh, offset, 1);\n    let len = php.ord(buf);\n    if (len) {\n      buf = php.substr(fh, offset + 1, len);\n      annot = buf;\n    } else {\n      annot = null;\n    }\n\n    return annot;\n  }\n\n}\n\nexport { Morphy_Fsa_Tree_Mem };\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/fsa/access/fsa_tree_mem.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\nimport fs from 'fs';\nimport { php } from '../../../utils';\nimport { Morphy_GramInfo } from '../graminfo';\n\nclass Morphy_GramInfo_File extends Morphy_GramInfo {\n\n  constructor (...args) {\n    super(...args);\n\n    // todo: вместо магической константы, хаотично распиханной по методам, подставить эту переменную\n    this.header_size = 20;\n  }\n\n  getGramInfoHeaderSize () {\n    return 20;\n  }\n\n  readGramInfoHeader (offset) {\n    const fh = this.resource;\n    let buf = Buffer.alloc(20);\n    \n    fs.readSync(fh, buf, 0, 20, offset);\n\n    const result = php.unpack([\n      'vid',\n      'vfreq',\n      'vforms_count',\n      'vpacked_forms_count',\n      'vancodes_count',\n      'vancodes_offset',\n      'vancodes_map_offset',\n      'vaffixes_offset',\n      'vaffixes_size',\n      'vbase_size'\n    ].join('/'), buf);\n\n    result['offset'] = offset;\n\n    return result;\n  }\n\n  readAncodesMap (info) {\n    const fh = this.resource;\n    // TODO: this can be wrong due to aligning ancodes map section\n    const offset = info['offset'] + 20 + info['forms_count'] * 2;\n    const forms_count = info['packed_forms_count'];\n    const buf = Buffer.alloc(forms_count * 2);\n    fs.readSync(fh, buf, 0, forms_count * 2, offset);\n\n    return php.unpack('v'+ forms_count, buf);\n  }\n\n  splitAncodes (ancodes, map) {\n    const result = [];\n  \n    let k;\n    let kc;\n    let j = 0;\n    _.forEach(map, function (mapItem) {\n      const res = [];\n\n      for (k = 0, kc = mapItem; k < kc; k++, j++) {\n        res.push(ancodes[j]);\n      }\n\n      result.push(res);\n    });\n\n    return result;\n  }\n\n  readAncodes (info) {\n    const fh = this.resource;\n    // TODO: this can be wrong due to aligning ancodes section\n    const offset = info['offset'] + 20;\n    const forms_count = info['forms_count'];\n    const buf = Buffer.alloc(forms_count * 2);\n    fs.readSync(fh, buf, 0, forms_count * 2, offset);\n    const ancodes = php.unpack('v' + forms_count, buf);\n\n    // if (!expand) { return ancodes; }\n\n    const map = this.readAncodesMap(info);\n\n    return this.splitAncodes(ancodes, map);\n  }\n\n  readFlexiaData (info) {\n    const fh = this.resource;\n    let offset = info['offset'] + 20;\n\n    if (php.isset(info['affixes_offset'])) {\n      offset += info['affixes_offset'];\n    } else {\n      offset += info['forms_count'] * 2 + info['packed_forms_count'] * 2;\n    }\n\n    const buf = Buffer.alloc(info['affixes_size'] - this.ends_size);\n    fs.readSync(fh, buf, 0, info['affixes_size'] - this.ends_size, offset);\n\n    return buf.toString().split(this.ends.toString());\n  }\n\n  readAllGramInfoOffsets () {\n    return this.readSectionIndex(this.header['flex_index_offset'], this.header['flex_count']);\n  }\n\n  readSectionIndex (offset, count) {\n    const buf = Buffer.alloc(count * 4);\n    fs.readSync(this.resource, buf, 0, count * 4, offset);\n\n    return _.values(php.unpack('V'+ count, buf));\n  }\n\n  readAllFlexia () {\n    const result = {};\n    let offset = this.header['flex_offset'];\n\n    _.forEach(\n      this.readSectionIndexAsSize(\n        this.header['flex_index_offset'],\n        this.header['flex_count'],\n        this.header['flex_size']\n      ),\n      size => {\n        const header = this.readGramInfoHeader(offset);\n        const affixes = this.readFlexiaData(header);\n        const ancodes = this.readAncodes(header, true);\n\n        // todo: проверить полученные переменные\n        result[header['id']] = {\n          'header': header,\n          'affixes': affixes,\n          'ancodes': ancodes\n        };\n  \n        offset += size;\n      }\n    );\n\n    return result;\n  }\n\n  readAllPartOfSpeech () {\n    const fh = this.resource;\n    const result = {};\n    let offset = this.header['poses_offset'];\n    let buf;\n    let res;\n\n    _.forEach(\n      this.readSectionIndexAsSize(\n        this.header['poses_index_offset'],\n        this.header['poses_count'],\n        this.header['poses_size']\n      ),\n      size => {\n        buf = Buffer.alloc(3);\n        fs.readSync(fh, buf, 0, 3, offset);\n        res = php.unpack('vid/Cis_predict', buf);\n  \n        buf = Buffer.alloc(size - 3);\n        fs.readSync(fh, buf, 0, size - 3, offset);\n  \n        result[res['id']] = {\n          name: this.cleanupCString(buf),\n          is_predict: !!res['is_predict']\n        };\n  \n        offset += size;\n      }\n    );\n\n    // todo: сверить result\n    return result;\n  }\n\n  readAllGrammems () {\n    const fh = this.resource;\n    const result = {};\n    let offset = this.header['grammems_offset'];\n    let buf;\n    let res;\n\n    _.forEach(\n      this.readSectionIndexAsSize(\n        this.header['grammems_index_offset'],\n        this.header['grammems_count'],\n        this.header['grammems_size']\n      ),\n      size => {\n        buf = Buffer.alloc(3);\n        fs.readSync(fh, buf, 0, 3, offset);\n        res = php.unpack('vid/Cshift', buf);\n  \n        buf = Buffer.alloc(size - 3);\n        fs.readSync(fh, buf, 0, size - 3, offset);\n  \n        result[res['id']] = {\n          name: this.cleanupCString(buf),\n          shift: res['shift']\n        };\n  \n        offset += size;\n      }\n    );\n\n    return result;\n  }\n\n  readAllAncodes () {\n    const fh = this.resource;\n    const result = {};\n    let offset = this.header['ancodes_offset'];\n    let res;\n    let grammems_count;\n    let grammem_ids;\n    let buf;\n\n    for (let i = 0; i < this.header['ancodes_count']; i++) {\n      buf = Buffer.alloc(4);\n      fs.readSync(fh, buf, 0, 4, offset);\n      res = php.unpack('vid/vpos_id', buf);\n\n      offset += 4;\n\n      buf = Buffer.alloc(2);\n      fs.readSync(fh, buf, 0, 2, offset);\n      grammems_count = php.unpack('v', buf)[1];\n\n      offset += 2;\n\n      if (grammems_count) {\n        buf = Buffer.alloc(grammems_count * 2);\n        fs.readSync(fh, buf, 0, grammems_count * 2, offset);\n        grammem_ids = _.values(php.unpack('v' + grammems_count, buf));\n      } else {\n        grammem_ids = [];\n      }\n\n      result[res['id']] = {\n        pos_id: res['pos_id'],\n        offset: offset,\n        grammem_ids: grammem_ids\n      };\n\n      offset += grammems_count * 2;\n    }\n\n    return result;\n  }\n\n}\n\nexport { Morphy_GramInfo_File };\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/graminfo/access/graminfo_file.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\nimport { php } from '../../../utils';\nimport { Morphy_GramInfo } from '../graminfo';\n\nclass Morphy_GramInfo_Mem extends Morphy_GramInfo {\n\n  constructor (...args) {\n    super(...args);\n  }\n\n  getGramInfoHeaderSize () {\n    return 20;\n  }\n\n  readGramInfoHeader (offset) {\n    const mem = this.resource;\n    const result = php.unpack([\n      'vid',\n      'vfreq',\n      'vforms_count',\n      'vpacked_forms_count',\n      'vancodes_count',\n      'vancodes_offset',\n      'vancodes_map_offset',\n      'vaffixes_offset',\n      'vaffixes_size',\n      'vbase_size'\n    ].join('/'), php.substr(mem, offset, 20));\n\n    result['offset'] = offset;\n\n    return result;\n  }\n\n  readAncodesMap (info) {\n    const mem = this.resource;\n    const forms_count = info['packed_forms_count'];\n    // TODO: this can be wrong due to aligning ancodes map section\n    const offset = info['offset'] + 20 + info['forms_count'] * 2;\n\n    return php.unpack('v' + forms_count, php.substr(mem, offset, forms_count * 2));\n  }\n\n  splitAncodes (ancodes, map) {\n    const result = [];\n\n    let k;\n    let kc;\n    let j = 0;\n    _.forEach(map, mapItem => {\n      const res = [];\n\n      for (k = 0, kc = mapItem; k < kc; k++, j++) {\n        res.push(ancodes[j]);\n      }\n\n      result.push(res);\n    });\n\n    return result;\n  }\n\n  readAncodes (info) {\n    const mem = this.resource;\n    const forms_count = info['forms_count'];\n    // TODO: this can be wrong due to aligning ancodes section\n    const offset = info['offset'] + 20;\n    const ancodes = php.unpack('v' + forms_count, php.substr(mem, offset, forms_count * 2));\n    const map = this.readAncodesMap(info);\n\n    return this.splitAncodes(ancodes, map);\n  }\n\n  readFlexiaData (info) {\n    const mem  = this.resource;\n    let offset = info['offset'] + 20;\n\n    if (php.isset(info['affixes_offset'])) {\n      offset += info['affixes_offset'];\n    } else {\n      offset += info['forms_count'] * 2 + info['packed_forms_count'] * 2;\n    }\n\n    return php.substr(\n      mem,\n      offset,\n      info['affixes_size'] - this.ends_size\n    ).toString().split(this.ends.toString());\n  }\n\n  readAllGramInfoOffsets () {\n    return this.readSectionIndex(this.header['flex_index_offset'], this.header['flex_count']);\n  }\n\n  readSectionIndex (offset, count) {\n    const mem = this.resource;\n\n    return php.array_values(php.unpack('V' + count, php.substr(mem, offset, count * 4)));\n  }\n\n  readAllFlexia () {\n    const result = {};\n    let offset = this.header['flex_offset'];\n\n    _.forEach(\n      this.readSectionIndexAsSize(\n        this.header['flex_index_offset'],\n        this.header['flex_count'],\n        this.header['flex_size']\n      ),\n      size => {\n        const header = this.readGramInfoHeader(offset);\n        const affixes = this.readFlexiaData(header);\n        const ancodes = this.readAncodes(header, true);\n\n        result[header['id']] = {\n          header: header,\n          affixes: affixes,\n          ancodes: ancodes\n        };\n  \n        offset += size;\n      }\n    );\n\n    return result;\n  }\n\n  readAllPartOfSpeech () {\n    const mem = this.resource;\n    const result = {};\n    let offset = this.header['poses_offset'];\n    let res;\n\n    _.forEach(\n      this.readSectionIndexAsSize(\n        this.header['poses_index_offset'],\n        this.header['poses_count'],\n        this.header['poses_size']\n      ),\n      $size => {\n        res = php.unpack('vid/Cis_predict', php.substr(mem, offset, 3));\n  \n        result[res['id']] = {\n          name: this.cleanupCString(php.substr(mem, offset + 3, $size - 3)),\n          is_predict: !!res['is_predict']\n        };\n  \n        offset += $size;\n      }\n    );\n\n    return result;\n  }\n\n  readAllGrammems () {\n    const mem = this.resource;\n    const result = {};\n    let offset = this.header['grammems_offset'];\n    let res;\n\n    _.forEach(\n      this.readSectionIndexAsSize(\n        this.header['grammems_index_offset'],\n        this.header['grammems_count'],\n        this.header['grammems_size']\n      ),\n      size => {\n        res = php.unpack('vid/Cshift', php.substr(mem, offset, 3));\n  \n        result[res['id']] = {\n          'shift': res['shift'],\n          'name':  this.cleanupCString(php.substr(mem, offset + 3, size - 3))\n        };\n  \n        offset += size;\n      }\n    );\n\n    return result;\n  }\n\n  readAllAncodes () {\n    const mem = this.resource;\n    const result = {};\n    let offset = this.header['ancodes_offset'];\n    let res;\n    let grammems_count;\n    let grammem_ids;\n\n    for (let $i = 0; $i < this.header['ancodes_count']; $i++) {\n      res = php.unpack('vid/vpos_id', php.substr(mem, offset, 4));\n      offset += 4;\n\n      grammems_count = php.unpack('v', php.substr(mem, offset, 2))[1];\n      offset += 2;\n\n      grammem_ids = (grammems_count)\n        ? php.array_values(php.unpack('v' + grammems_count, php.substr(mem, offset, grammems_count * 2)))\n        : [];\n\n      result[res['id']] = {\n        offset,\n        grammem_ids,\n        pos_id: res['pos_id']\n      };\n\n      offset += grammems_count * 2;\n    }\n\n    return result;\n  }\n\n}\n\nexport { Morphy_GramInfo_Mem };\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/graminfo/access/graminfo_mem.js","import _ from 'lodash';\nimport { php } from '../../utils';\nimport { Morphy_GrammemsProvider_ForFactory } from './common';\n\nconst Morphy_GrammemsProvider_ru_ru_instances = new WeakMap;\n\nclass Morphy_GrammemsProvider_ru_ru extends Morphy_GrammemsProvider_ForFactory {\n  \n  static get self_encoding () {\n    return 'utf-8';\n  }\n  \n  static get grammems_map () {\n    return {\n      'род': [\n        'МР',\n        'ЖР',\n        'СР'\n      ],\n      'одушевленность': [\n        'ОД',\n        'НО'\n      ],\n      'число': [\n        'ЕД',\n        'МН'\n      ],\n      'падеж': [\n        'ИМ',\n        'РД',\n        'ДТ',\n        'ВН',\n        'ТВ',\n        'ПР',\n        'ЗВ',\n        '2'\n      ],\n      'залог': [\n        'ДСТ',\n        'СТР'\n      ],\n      'время': [\n        'НСТ',\n        'ПРШ',\n        'БУД'\n      ],\n      'повелительная форма': ['ПВЛ'],\n      'лицо': [\n        '1Л',\n        '2Л',\n        '3Л'\n      ],\n      'краткость': ['КР'],\n      'сравнительная форма': ['СРАВН'],\n      'превосходная степень': ['ПРЕВ'],\n      'вид': [\n        'СВ',\n        'НС'\n      ],\n      'переходность': [\n        'ПЕ',\n        'НП'\n      ],\n      'безличный глагол': ['БЕЗЛ']\n    };\n  }\n  \n  /**\n   * @param {phpMorphy} morphy\n   * @returns {*}\n   */\n  static instance (morphy) {\n    const key = morphy.getEncoding();\n    if (!Morphy_GrammemsProvider_ru_ru_instances.has(morphy)) {\n      Morphy_GrammemsProvider_ru_ru_instances.set(morphy, {});\n    }\n    \n    const instances = Morphy_GrammemsProvider_ru_ru_instances.get(morphy);\n\n    if (_.isUndefined(instances[key])) {\n      instances[key] = new Morphy_GrammemsProvider_ru_ru(key);\n    }\n\n    return instances[key];\n  }\n\n  constructor () {\n    super(...arguments);\n  }\n\n  getSelfEncoding () {\n    return 'utf-8';\n  }\n\n  getGrammemsMap () {\n    return Morphy_GrammemsProvider_ru_ru.grammems_map;\n  }\n\n}\n\nexport { Morphy_GrammemsProvider_ru_ru };\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/langs_stuff/ru_ru.js","/**\r\n * This file is part of phpMorphy library\r\n *\r\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\r\n *\r\n * This library is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 2 of the License, or (at your option) any later version.\r\n *\r\n * This library is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public\r\n * License along with this library; if not, write to the\r\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\r\n * Boston, MA 02111-1307, USA.\r\n */\r\n\r\nimport _ from 'lodash';\r\nimport { php, toBuffer, castArray, inspect, isStringifyedNumber } from '../utils';\r\nimport { Morphy_UnicodeHelper } from './unicode';\r\nimport { Morphy_Fsa_WordsCollector } from './fsa/fsa';\r\n\r\n// ----------------------------\r\n// Morphier interface\r\n// ----------------------------\r\nclass Morphy_Morphier_Interface {\r\n\r\n  getAnnot (word) {}\r\n\r\n  getBaseForm (word) {}\r\n\r\n  getAllForms (word) {}\r\n\r\n  getPseudoRoot (word) {}\r\n\r\n  getPartOfSpeech (word) {}\r\n\r\n  getWordDescriptor (word) {}\r\n\r\n  getAllFormsWithAncodes (word) {}\r\n  \r\n  getAncode (word) {}\r\n\r\n  getGrammarInfoMergeForms (word) {}\r\n\r\n  getGrammarInfo (word) {}\r\n\r\n}\r\n\r\nclass Morphy_Morphier_Empty extends Morphy_Morphier_Interface {\r\n\r\n  getAnnot (word) {\r\n    return false;\r\n  }\r\n\r\n  getBaseForm (word) {\r\n    return false;\r\n  }\r\n\r\n  getAllForms (word) {\r\n    return false;\r\n  }\r\n\r\n  getAllFormsWithGramInfo (word) {\r\n    return false;\r\n  }\r\n\r\n  getPseudoRoot (word) {\r\n    return false;\r\n  }\r\n\r\n  getPartOfSpeech (word) {\r\n    return false;\r\n  }\r\n\r\n  getWordDescriptor (word) {\r\n    return false;\r\n  }\r\n\r\n  getAllFormsWithAncodes (word) {\r\n    return false;\r\n  }\r\n\r\n  getAncode (word) {\r\n    return false;\r\n  }\r\n\r\n  getGrammarInfoMergeForms (word) {\r\n    return false;\r\n  }\r\n\r\n  getGrammarInfo (word) {\r\n    return false;\r\n  }\r\n  \r\n  /**\r\n   * @param word\r\n   * @param partOfSpeech\r\n   * @param grammems\r\n   * @param {boolean} [returnWords=false]\r\n   * @param {*} [callback=null]\r\n   * @returns {boolean}\r\n   */\r\n  castFormByGramInfo (word, partOfSpeech, grammems, returnWords, callback) {\r\n    return false;\r\n  }\r\n\r\n}\r\n\r\n// ----------------------------\r\n// Annot decoder\r\n// ----------------------------\r\nclass Morphy_AnnotDecoder_Interface {\r\n\r\n  decode (annotsRaw, withBase) {}\r\n\r\n}\r\n\r\nclass Morphy_AnnotDecoder_Base extends Morphy_AnnotDecoder_Interface {\r\n  static get INVALID_ANCODE_ID () {\r\n    return 0xFFFF;\r\n  }\r\n\r\n  constructor (ends) {\r\n    super();\r\n    this.ends = ends;\r\n\r\n    this.unpack_str = this.getUnpackString();\r\n    this.block_size = this.getUnpackBlockSize();\r\n  }\r\n\r\n  getUnpackString () {}\r\n\r\n  getUnpackBlockSize () {}\r\n\r\n  decode (annotRawBuf, withBase) {\r\n    if (php.empty(annotRawBuf)) {\r\n      throw new Error(\"Empty annot given\");\r\n    }\r\n  \r\n    const annotRaw = annotRawBuf.toString();\r\n    const unpack_size = this.block_size;\r\n    const unpack_str = this.unpack_str;\r\n    let result = php.unpack('Vcount/' + unpack_str, annotRawBuf);\r\n    let res;\r\n    let count;\r\n    let items;\r\n    let start;\r\n\r\n    if (result === false) {\r\n      throw new Error(`Invalid annot string '${ annotRaw }'`);\r\n    }\r\n\r\n    if (result['common_ancode'] == Morphy_AnnotDecoder_Base.INVALID_ANCODE_ID) {\r\n      result['common_ancode'] = null;\r\n    }\r\n\r\n    count = result['count'];\r\n    result = [result];\r\n\r\n    if (count > 1) {\r\n      for (let i = 0; i < count - 1; i++) {\r\n        start = 4 + (i + 1) * unpack_size;\r\n        res = php.unpack(unpack_str, annotRawBuf.slice(start, start + unpack_size));\r\n\r\n        if (res['common_ancode'] == Morphy_AnnotDecoder_Base.INVALID_ANCODE_ID) {\r\n          res['common_ancode'] = null;\r\n        }\r\n\r\n        result.push(res);\r\n      }\r\n    }\r\n\r\n    if (withBase) {\r\n      start = 4 + count * unpack_size;\r\n      items = annotRawBuf.slice(start).toString().split(this.ends.toString());\r\n      for (let i = 0; i < count; i++) {\r\n        result[i]['base_prefix'] = items[i * 2];\r\n        result[i]['base_suffix'] = items[i * 2 + 1];\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\nclass Morphy_AnnotDecoder_Common extends Morphy_AnnotDecoder_Base {\r\n\r\n  constructor () {\r\n    super(...arguments);\r\n  }\r\n\r\n  getUnpackString () {\r\n    return [\r\n      'Voffset',\r\n      'vcplen',\r\n      'vplen',\r\n      'vflen',\r\n      'vcommon_ancode',\r\n      'vforms_count',\r\n      'vpacked_forms_count',\r\n      'vaffixes_size',\r\n      'vform_no',\r\n      'vpos_id'\r\n    ].join('/');\r\n  }\r\n\r\n  getUnpackBlockSize () {\r\n    return 22;\r\n  }\r\n\r\n}\r\n\r\nclass Morphy_AnnotDecoder_Predict extends Morphy_AnnotDecoder_Common {\r\n\r\n  constructor () {\r\n    super(...arguments);\r\n  }\r\n\r\n  getUnpackString () {\r\n    return [super.getUnpackString(), 'vfreq'].join('/');\r\n  }\r\n\r\n  getUnpackBlockSize () {\r\n    return super.getUnpackBlockSize() + 2;\r\n  }\r\n\r\n}\r\n\r\nconst Morphy_AnnotDecoder_Factory_instances = {};\r\nclass Morphy_AnnotDecoder_Factory {\r\n  \r\n  static get instances () {\r\n    return Morphy_AnnotDecoder_Factory_instances;\r\n  }\r\n  \r\n  static get AnnotDecoders () {\r\n    return {\r\n      Morphy_AnnotDecoder_Common,\r\n      Morphy_AnnotDecoder_Predict\r\n    };\r\n  }\r\n\r\n  static create (eos) {\r\n    const { instances } = Morphy_AnnotDecoder_Factory;\r\n    if (!php.isset(instances[eos])) {\r\n      instances[eos] = new Morphy_AnnotDecoder_Factory(eos);\r\n    }\r\n\r\n    return instances[eos];\r\n  }\r\n\r\n  constructor (eos) {\r\n    this.eos = eos;\r\n  }\r\n\r\n  getCommonDecoder () {\r\n    if (!php.isset(this.cache_common)) {\r\n      this.cache_common = this.instantinate('common');\r\n    }\r\n\r\n    return this.cache_common;\r\n  }\r\n\r\n  getPredictDecoder () {\r\n    if (!php.isset(this.cache_predict)) {\r\n      this.cache_predict = this.instantinate('predict');\r\n    }\r\n\r\n    return this.cache_predict;\r\n  }\r\n\r\n  instantinate (type) {\r\n    const className = 'Morphy_AnnotDecoder_'+ php.ucfirst(type.toLowerCase());\r\n\r\n    return new Morphy_AnnotDecoder_Factory.AnnotDecoders[className](this.eos);\r\n  }\r\n\r\n}\r\n\r\nclass Morphy_AncodesResolver_Interface {\r\n\r\n  resolve (ancodeId) {}\r\n\r\n  unresolve (ancode) {}\r\n\r\n}\r\n\r\nclass Morphy_AncodesResolver_ToText extends Morphy_AncodesResolver_Interface {\r\n\r\n  /**\r\n   * @param {Morphy_GramTab_Interface} gramtab\r\n   * @private\r\n   */\r\n  constructor (gramtab) {\r\n    super();\r\n    this.gramtab = gramtab;\r\n  }\r\n\r\n  resolve (ancodeId) {\r\n    if (!php.isset(ancodeId)) {\r\n      return null;\r\n    }\r\n\r\n    return this.gramtab.ancodeToString(ancodeId);\r\n  }\r\n\r\n  unresolve (ancode) {\r\n    return this.gramtab.stringToAncode(ancode);\r\n  }\r\n\r\n}\r\n\r\nclass Morphy_AncodesResolver_ToDialingAncodes extends Morphy_AncodesResolver_Interface {\r\n\r\n  /**\r\n   * @param {Morphy_Storage} ancodesMap\r\n   */\r\n  constructor (ancodesMap) {\r\n    super();\r\n    this.ancodes_map = php.unserialize(ancodesMap.read(0, ancodesMap.getFileSize()).toString());\r\n    if (this.ancodes_map === false) {\r\n      throw new Error(\"Can`t open phpMorphy => Dialing ancodes map\");\r\n    }\r\n\r\n    this.reverse_map = php.array_flip(this.ancodes_map);\r\n  }\r\n\r\n  unresolve (ancode) {\r\n    if (!php.isset(ancode)) {\r\n      return null;\r\n    }\r\n\r\n    if (!php.isset(this.reverse_map[ancode])) {\r\n      throw new Error(`Unknown ancode found '${ ancode }'`);\r\n    }\r\n\r\n    return this.reverse_map[ancode];\r\n  }\r\n\r\n  resolve (ancodeId) {\r\n    if (!php.isset(ancodeId)) {\r\n      return null;\r\n    }\r\n\r\n    if (!php.isset(this.ancodes_map[ancodeId])) {\r\n      throw new Error(`Unknown ancode id found '${ ancodeId }'`);\r\n    }\r\n\r\n    return this.ancodes_map[ancodeId];\r\n  }\r\n\r\n}\r\n\r\nclass Morphy_AncodesResolver_AsIs extends Morphy_AncodesResolver_Interface {\r\n\r\n  constructor () {\r\n    super();\r\n  }\r\n  \r\n  resolve (ancodeId) {\r\n    return ancodeId;\r\n  }\r\n\r\n  unresolve (ancode) {\r\n    return ancode;\r\n  }\r\n\r\n}\r\n\r\nclass Morphy_AncodesResolver_Proxy extends Morphy_AncodesResolver_Interface {\r\n  static get AncodesResolvers () {\r\n    return {\r\n      Morphy_AncodesResolver_ToText,\r\n      Morphy_AncodesResolver_ToDialingAncodes,\r\n      Morphy_AncodesResolver_AsIs\r\n    }\r\n  }\r\n  \r\n  static instantinate (className, args) {\r\n    const { AncodesResolvers } = Morphy_AncodesResolver_Proxy;\r\n\r\n    return new AncodesResolvers[className](...args);\r\n    // return new (Function.prototype.bind.apply(AncodesResolvers[className], args));\r\n  }\r\n\r\n  constructor (className, ctorArgs) {\r\n    super();\r\n    this.className = className;\r\n    this.args      = ctorArgs;\r\n    this.___obj    = null;\r\n  }\r\n\r\n  unresolve (ancode) {\r\n    return this.__obj.unresolve(ancode);\r\n  }\r\n\r\n  resolve (ancodeId) {\r\n    return this.__obj.resolve(ancodeId);\r\n  }\r\n\r\n  get __obj () {\r\n    if (!this.___obj) {\r\n      this.___obj = Morphy_AncodesResolver_Proxy.instantinate(this.className, this.args);\r\n\r\n      delete this.args;\r\n      delete this.className;\r\n    }\r\n\r\n    return this.___obj;\r\n  }\r\n  \r\n  set __obj (value) {\r\n    this.___obj = (!_.isUndefined(value)) ? value : null;\r\n  }\r\n\r\n}\r\n\r\n// ----------------------------\r\n// WordDescriptor\r\n// ----------------------------\r\n\r\n/**\r\n * @class\r\n * @augments Array\r\n */\r\nclass Morphy_WordDescriptor_Collection extends Array {\r\n\r\n  // https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Classes#Species\r\n  static get [Symbol.species]() { return Array; }\r\n  \r\n  /**\r\n   * @param {*} word\r\n   * @param {*} annots\r\n   * @param {Morphy_Morphier_Helper} helper\r\n   */\r\n  constructor (word, annots, helper) {\r\n    super();\r\n\r\n    this.word = (word || '') + '';\r\n    this.annots = false === annots ? false : helper.decodeAnnot(annots, true);\r\n    this.helper = helper;\r\n\r\n    if (this.annots !== false) {\r\n      _.forEach(this.annots, annot => this.push(this.createDescriptor(word, annot, helper)));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {*} word\r\n   * @param {*} annot\r\n   * @param {Morphy_Morphier_Helper} helper\r\n   */\r\n  createDescriptor (word, annot, helper) {\r\n    return new Morphy_WordDescriptor(word, annot, helper);\r\n  }\r\n\r\n  getByPartOfSpeech (poses) {\r\n    poses = castArray(poses);\r\n    const result = [];\r\n\r\n    _.forEach(this, desc => {\r\n      if (desc.hasPartOfSpeech(poses)) {\r\n        result.push(desc);\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\n// ----------------------------\r\n// Helper\r\n// ----------------------------\r\nclass Morphy_Morphier_Helper {\r\n\r\n  /**\r\n   * @param {Morphy_GramInfo_Interface} graminfo\r\n   * @param {Morphy_GramTab_Interface} gramtab\r\n   * @param {Morphy_AncodesResolver_Interface} ancodesResolver\r\n   * @param {*} resolvePartOfSpeech\r\n   */\r\n  constructor (graminfo, gramtab, ancodesResolver, resolvePartOfSpeech) {\r\n    this.graminfo = graminfo;\r\n    this.gramtab = gramtab;\r\n    this.resolve_pos = !!resolvePartOfSpeech;\r\n    this.ancodes_resolver = ancodesResolver;\r\n    this.char_size = graminfo.getCharSize();\r\n    this.ends = graminfo.getEnds();\r\n    this.annot_decoder = null;\r\n    this.gramtab_consts_included = false;\r\n  }\r\n\r\n  /**\r\n   * @param {Morphy_AnnotDecoder_Interface} annotDecoder\r\n   */\r\n  setAnnotDecoder (annotDecoder) {\r\n    this.annot_decoder = annotDecoder;\r\n  }\r\n\r\n  // getters\r\n  getEndOfString () {\r\n    return this.ends;\r\n  }\r\n\r\n  getCharSize () {\r\n    return this.char_size;\r\n  }\r\n\r\n  hasAnnotDecoder () {\r\n    return php.isset(this.annot_decoder);\r\n  }\r\n\r\n  getAnnotDecoder () {\r\n    return this.annot_decoder;\r\n  }\r\n\r\n  getAncodesResolver () {\r\n    return this.ancodes_resolver;\r\n  }\r\n\r\n  getGramInfo () {\r\n    return this.graminfo;\r\n  }\r\n\r\n  getGramTab () {\r\n    return this.gramtab;\r\n  }\r\n\r\n  isResolvePartOfSpeech () {\r\n    return this.resolve_pos;\r\n  }\r\n\r\n  // other\r\n  resolvePartOfSpeech (posId) {\r\n    return this.gramtab.resolvePartOfSpeechId(posId);\r\n  }\r\n\r\n  getGrammems (ancodeId) {\r\n    return this.gramtab.getGrammems(ancodeId);\r\n  }\r\n\r\n  getGrammemsAndPartOfSpeech (ancodeId) {\r\n    return [\r\n      this.gramtab.getPartOfSpeech(ancodeId),\r\n      this.gramtab.getGrammems(ancodeId)\r\n    ];\r\n  }\r\n\r\n  extractPartOfSpeech (annot) {\r\n    if (this.resolve_pos) {\r\n      return this.resolvePartOfSpeech(annot['pos_id']);\r\n    }\r\n\r\n    return annot['pos_id'];\r\n  }\r\n\r\n  includeGramTabConsts () {\r\n    if (this.isResolvePartOfSpeech()) {\r\n      this.gramtab.includeConsts();\r\n    }\r\n\r\n    this.gramtab_consts_included = true;\r\n  }\r\n\r\n  // getters\r\n  getWordDescriptor (word, annots) {\r\n    if (!this.gramtab_consts_included) {\r\n      this.includeGramTabConsts();\r\n    }\r\n\r\n    return new Morphy_WordDescriptor_Collection(word, annots, this);\r\n  }\r\n\r\n  getBaseAndPrefix (word, cplen, plen, flen) {\r\n    const wordBuf = Buffer.from(word);\r\n    let base;\r\n    let prefix;\r\n\r\n    if (flen) {\r\n      base = php.substr(wordBuf, cplen + plen, -flen);\r\n    } else {\r\n      if (cplen || plen) {\r\n        base = php.substr(wordBuf, cplen + plen);\r\n      } else {\r\n        base = wordBuf;\r\n      }\r\n    }\r\n\r\n    prefix = cplen ? php.substr(wordBuf, 0, cplen) : '';\r\n    base = base.toString();\r\n    prefix = prefix.toString();\r\n\r\n    return [base, prefix];\r\n  }\r\n\r\n  getPartOfSpeech (word, annots) {\r\n    if (annots === false) {\r\n      return false;\r\n    }\r\n\r\n    let result = {};\r\n    _.forEach(this.decodeAnnot(annots, false), annot => result[this.extractPartOfSpeech(annot)] = 1);\r\n    result = _.keys(result);\r\n    result = this.resolve_pos ? result : result.map(_.toInteger);\r\n  \r\n    return result;\r\n  }\r\n\r\n  getBaseForm (word, annots) {\r\n    if (annots === false) {\r\n      return false;\r\n    }\r\n\r\n    annots = this.decodeAnnot(annots, true);\r\n\r\n    return this.composeBaseForms(word, annots);\r\n  }\r\n\r\n  getPseudoRoot (word, annots) {\r\n    if (annots == false) {\r\n      return false;\r\n    }\r\n  \r\n    const result = {};\r\n    annots = this.decodeAnnot(annots, false);\r\n    _.forEach(annots, annot => {\r\n      const base = this.getBaseAndPrefix(word, annot['cplen'], annot['plen'], annot['flen'])[0];\r\n\r\n      result[base] = 1;\r\n    });\r\n\r\n    return php.array_keys(result);\r\n  }\r\n\r\n  getAllForms (word, annots) {\r\n    if (annots === false) {\r\n      return false;\r\n    }\r\n\r\n    annots = this.decodeAnnot(annots, false);\r\n\r\n    return this.composeForms(word, annots);\r\n  }\r\n\r\n  /**\r\n   * @param word\r\n   * @param annots\r\n   * @param partOfSpeech\r\n   * @param grammems\r\n   * @param {boolean} [returnWords=false]\r\n   * @param {*} [callback=null]\r\n   * @returns {*}\r\n   */\r\n  castFormByGramInfo (word, annots, partOfSpeech, grammems, returnWords = false, callback = null) {\r\n    if (annots === false) {\r\n      return false;\r\n    }\r\n    \r\n    /**\r\n     * @todo: вот сюда данные приходят правильные (как в php),\r\n     * а выходят не правильные (не как в php)\r\n     */\r\n    \r\n    grammems = _.toArray(grammems);\r\n    partOfSpeech = php.isset(partOfSpeech) ? partOfSpeech + '' : null;\r\n  \r\n    /**\r\n     * Проверено:\r\n     * grammems\r\n     * partOfSpeech\r\n     * this.decodeAnnot(annots, false)\r\n     */\r\n    const result = (!!returnWords) ? {} : [];\r\n    _.forEach(this.decodeAnnot(annots, false), annot => {\r\n      const all_ancodes = this.graminfo.readAncodes(annot);\r\n      const flexias = this.graminfo.readFlexiaData(annot);\r\n      const common_ancode = annot['common_ancode'];\r\n      const common_grammems = php.isset(common_ancode) ? this.gramtab.getGrammems(common_ancode) : [];\r\n      const [ base, prefix ] = this.getBaseAndPrefix(word, annot['cplen'], annot['plen'], annot['flen']);\r\n      let form_no = 0;\r\n      let i = 0;\r\n\r\n      /**\r\n       * Проверено:\r\n       * all_ancodes\r\n       * flexias\r\n       * common_ancode\r\n       * common_grammems\r\n       * base\r\n       * prefix\r\n       */\r\n  \r\n      _.forEach(all_ancodes, form_ancodes => {\r\n        _.forEach(form_ancodes, ancode => {\r\n          const form_pos = this.gramtab.getPartOfSpeech(ancode);\r\n          const form_grammems = php.array_merge(this.gramtab.getGrammems(ancode), common_grammems);\r\n          const form = [\r\n            prefix,\r\n            flexias[i],\r\n            base,\r\n            flexias[i + 1]\r\n          ].join('');\r\n\r\n          if (_.isFunction(callback)) {\r\n            if (!callback(form, form_pos, form_grammems, form_no)) {\r\n              form_no++;\r\n              return;\r\n            }\r\n          } else {\r\n            if (php.isset(partOfSpeech) && form_pos !== partOfSpeech) {\r\n              form_no++;\r\n              return;\r\n            }\r\n\r\n            if (_.size(php.array_diff(grammems, form_grammems)) > 0) {\r\n              form_no++;\r\n              return;\r\n            }\r\n          }\r\n\r\n          if (returnWords) {\r\n            result[form] = 1;\r\n          } else {\r\n            result.push({\r\n              form,\r\n              form_no,\r\n              pos: form_pos,\r\n              grammems: form_grammems\r\n            });\r\n          }\r\n\r\n          form_no++;\r\n        });\r\n\r\n        i += 2;\r\n      });\r\n    });\r\n\r\n    return returnWords ? php.array_keys(result) : result;\r\n  }\r\n\r\n  getAncode (annots) {\r\n    if (annots === false) {\r\n      return false;\r\n    }\r\n\r\n    const result = [];\r\n    _.forEach(this.decodeAnnot(annots, false), annot => {\r\n      const all_ancodes = this.graminfo.readAncodes(annot);\r\n\r\n      result.push({\r\n        common: this.ancodes_resolver.resolve(annot['common_ancode']),\r\n        all: php.array_map([this.ancodes_resolver, 'resolve'], all_ancodes[annot['form_no']])\r\n      });\r\n    });\r\n    \r\n    return _.uniqWith(result, _.isEqual);\r\n  }\r\n\r\n  getGrammarInfoMergeForms (annots) {\r\n    if (annots === false) {\r\n      return false;\r\n    }\r\n\r\n    const result = [];\r\n    _.forEach(this.decodeAnnot(annots, false), annot => {\r\n      const all_ancodes = this.graminfo.readAncodes(annot);\r\n      const common_ancode = annot['common_ancode'];\r\n      const form_no = annot['form_no'];\r\n      let grammems = php.isset(common_ancode) ? this.gramtab.getGrammems(common_ancode) : [];\r\n      let forms_count = 0;\r\n\r\n      let ancodeId;\r\n      _.forEach(all_ancodes[form_no], ancode => {\r\n        ancodeId = ancode;\r\n        \r\n        grammems = php.array_merge(grammems, this.gramtab.getGrammems(ancode));\r\n        forms_count++;\r\n      });\r\n\r\n      grammems = _.sortedUniq(_.sortBy(grammems, this.resolve_pos ? JSON.stringify : _.toInteger));\r\n\r\n      result.push({\r\n        // todo: незарезолвенный ancodeId\r\n        // part of speech identical across all joined forms\r\n        pos: this.gramtab.getPartOfSpeech(ancodeId),\r\n        grammems,\r\n        forms_count,\r\n        form_no_low: form_no,\r\n        form_no_high: form_no + forms_count,\r\n      });\r\n    });\r\n\r\n    return _.uniqWith(result, _.isEqual);\r\n  }\r\n\r\n  getGrammarInfo (annots) {\r\n    if (annots == false) {\r\n      return false;\r\n    }\r\n    \r\n    const result = [];\r\n    _.forEach(this.decodeAnnot(annots, false), annot => {\r\n      const all_ancodes = this.graminfo.readAncodes(annot);\r\n      const common_ancode = annot['common_ancode'];\r\n      const common_grammems = php.isset(common_ancode) ? this.gramtab.getGrammems(common_ancode) : [];\r\n      const info = [];\r\n      const form_no = annot['form_no'];\r\n      \r\n      _.forEach(all_ancodes[form_no], ancode => {\r\n        let grammems = php.array_merge(common_grammems, this.gramtab.getGrammems(ancode));\r\n        grammems = _.sortBy(grammems, this.resolve_pos ? JSON.stringify : _.toInteger);\r\n  \r\n        let info_item = {\r\n          pos: this.gramtab.getPartOfSpeech(ancode),\r\n          grammems,\r\n          form_no\r\n        };\r\n\r\n        info.push(info_item);\r\n      });\r\n  \r\n      let unique_info = _.sortedUniq(_.sortBy(info, JSON.stringify));\r\n  \r\n      result.push(unique_info);\r\n    });\r\n\r\n    return _.uniqWith(result, _.isEqual);\r\n  }\r\n\r\n  /**\r\n   * @param word\r\n   * @param annots\r\n   * @param {string} [resolveType='no_resolve']\r\n   * @returns {boolean}\r\n   */\r\n  getAllFormsWithResolvedAncodes (word, annots, resolveType = 'no_resolve') {\r\n    if (annots == false) {\r\n      return false;\r\n    }\r\n  \r\n    annots = this.decodeAnnot(annots, false);\r\n\r\n    return this.composeFormsWithResolvedAncodes(word, annots);\r\n  }\r\n\r\n  getAllFormsWithAncodes (word, annots, foundFormNo) {\r\n    if (annots === false) {\r\n      return false;\r\n    }\r\n\r\n    annots = this.decodeAnnot(annots, false);\r\n\r\n    return this.composeFormsWithAncodes(word, annots);\r\n  }\r\n\r\n  getAllAncodes (word, annots) {\r\n    if (annots === false) {\r\n      return false;\r\n    }\r\n\r\n    const result = [];\r\n\r\n    _.forEach(annots, annot => result.push(this.graminfo.readAncodes(annot)));\r\n\r\n    return result;\r\n  }\r\n\r\n  composeBaseForms (word, annots) {\r\n    const result = {};\r\n\r\n    _.forEach(annots, annot => {\r\n      if (annot['form_no'] > 0) {\r\n        const baseAndPrefix = this.getBaseAndPrefix(word, annot['cplen'], annot['plen'], annot['flen']);\r\n        const base = baseAndPrefix[0];\r\n        const prefix = baseAndPrefix[1];\r\n        const form = [\r\n          prefix,\r\n          annot['base_prefix'],\r\n          base,\r\n          annot['base_suffix']\r\n        ].join('');\r\n\r\n        result[form] = 1;\r\n      } else {\r\n        result[word] = 1;\r\n      }\r\n    });\r\n    \r\n    return php.array_keys(result);\r\n  }\r\n\r\n  composeForms (word, annots) {\r\n    const result = {};\r\n\r\n    _.forEach(annots, annot => {\r\n      const baseAndPrefix = this.getBaseAndPrefix(word, annot['cplen'], annot['plen'], annot['flen']);\r\n      const base = baseAndPrefix[0];\r\n      const prefix = baseAndPrefix[1];\r\n      // read flexia\r\n      const flexias = this.graminfo.readFlexiaData(annot);\r\n      \r\n      let form;\r\n      for (let i = 0, c = _.size(flexias); i < c; i += 2) {\r\n        form = [prefix, flexias[i], base, flexias[i + 1]].join('');\r\n        result[form] = 1;\r\n      }\r\n    });\r\n\r\n    return php.array_keys(result);\r\n  }\r\n\r\n  composeFormsWithResolvedAncodes (word, annots) {\r\n    const result = [];\r\n    \r\n    _.forEach(annots, (annot, annotIdx) => {\r\n      const words = [];\r\n      const ancodes = [];\r\n      const common_ancode = annot['common_ancode'];\r\n      // read flexia\r\n      const flexias = this.graminfo.readFlexiaData(annot);\r\n      const all_ancodes = this.graminfo.readAncodes(annot);\r\n      const baseAndPrefix = this.getBaseAndPrefix(\r\n        word,\r\n        annot['cplen'],\r\n        annot['plen'],\r\n        annot['flen']\r\n      );\r\n      const base = baseAndPrefix[0];\r\n      const prefix = baseAndPrefix[1];\r\n  \r\n      let form;\r\n      let current_ancodes;\r\n  \r\n      for (let i = 0, c = _.size(flexias); i < c; i += 2) {\r\n        form = [prefix, flexias[i], base, flexias[i + 1]].join('');\r\n        current_ancodes = all_ancodes[i / 2];\r\n\r\n        _.forEach(current_ancodes, ancode => {\r\n          words.push(form);\r\n          ancodes.push(this.ancodes_resolver.resolve(ancode));\r\n        });\r\n      }\r\n\r\n      result.push({\r\n        all: ancodes,\r\n        forms: words,\r\n        common: this.ancodes_resolver.resolve(common_ancode)\r\n      });\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  composeFormsWithAncodes (word, annots, foundFormNo) {\r\n    const result = [];\r\n\r\n    _.forEach(annots, (annot, annotIdx) => {\r\n      const baseAndPrefix = this.getBaseAndPrefix(word, annot['cplen'], annot['plen'], annot['flen']);\r\n      const base = baseAndPrefix[0];\r\n      const prefix = baseAndPrefix[1];\r\n      // read flexia\r\n      const flexias = this.graminfo.readFlexiaData(annot);\r\n      const ancodes = this.graminfo.readAncodes(annot);\r\n      const found_form_no = annot['form_no'];\r\n  \r\n      let count;\r\n      let form_no;\r\n\r\n      foundFormNo = (!_.isArray(foundFormNo)) ? [] : foundFormNo;\r\n\r\n      for (let i = 0, c = _.size(flexias); i < c; i += 2) {\r\n        form_no = i / 2;\r\n        word = [prefix, flexias[i], base, flexias[i + 1]].join('');\r\n\r\n        if (found_form_no == form_no) {\r\n          foundFormNo[annotIdx] = _.isPlainObject(foundFormNo[annotIdx]) ? foundFormNo[annotIdx] : {};\r\n          count = _.size(result);\r\n          foundFormNo[annotIdx]['low'] = count;\r\n          foundFormNo[annotIdx]['high'] = count + _.size(ancodes[form_no]) - 1;\r\n        }\r\n\r\n        _.forEach(ancodes[form_no], ancode => result.push([word, ancode]));\r\n      }\r\n    });\r\n\r\n    return {\r\n      foundFormNo,\r\n      forms: result\r\n    };\r\n  }\r\n\r\n  decodeAnnot (annotsRaw, withBase) {\r\n    if (php.is_array(annotsRaw)) {\r\n      return annotsRaw;\r\n    }\r\n\r\n    return this.annot_decoder.decode(annotsRaw, withBase);\r\n  }\r\n\r\n}\r\n\r\nclass Morphy_WordForm {\r\n\r\n  static compareGrammems (a, b) {\r\n    return _.size(a) == _.size(b) && _.size(php.array_diff(a, b)) == 0;\r\n  }\r\n\r\n  constructor (word, form_no, pos_id, grammems) {\r\n    grammems = _.values(grammems);\r\n\r\n    this.word = word + '';\r\n    this.form_no = parseInt(form_no, 10);\r\n    this.pos_id = pos_id;\r\n    this.grammems = grammems.length\r\n      ? _.sortBy(grammems, _.isNumber(grammems[0]) ? _.toInteger : JSON.stringify)\r\n      : grammems\r\n    ;\r\n  }\r\n\r\n  getPartOfSpeech () {\r\n    return this.pos_id;\r\n  }\r\n\r\n  getGrammems () {\r\n    return this.grammems;\r\n  }\r\n\r\n  hasGrammems (grammems) {\r\n    grammems = (!_.isArray(grammems)) ? [grammems] : grammems;\r\n    const grammes_count = _.size(grammems);\r\n\r\n    return grammes_count && _.size(php.array_intersect(grammems, this.grammems)) == grammes_count;\r\n  }\r\n\r\n  getWord () {\r\n    return this.word;\r\n  }\r\n\r\n  getFormNo () {\r\n    return this.form_no;\r\n  }\r\n\r\n}\r\n\r\nclass Morphy_WordDescriptor extends Array {\r\n\r\n  // https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Classes#Species\r\n  static get [Symbol.species]() { return Array; }\r\n\r\n  /**\r\n   * @param word\r\n   * @param annot\r\n   * @param {Morphy_Morphier_Helper} helper\r\n   */\r\n  constructor (word, annot, helper) {\r\n    super();\r\n    \r\n    this.word = word;\r\n    this.annot = [annot];\r\n    this.helper = helper;\r\n    this.cached_base = null;\r\n    this.cached_forms = null;\r\n    this.found_form_no = null;\r\n    this.all_forms_readed = false;\r\n    this.cached_pseudo_root = null;\r\n    this.common_ancode_grammems = null;\r\n\r\n    this.readAllForms();\r\n  }\r\n\r\n  getPseudoRoot () {\r\n    if (!php.isset(this.cached_pseudo_root)) {\r\n      this.cached_pseudo_root = this.helper.getPseudoRoot(this.word, this.annot)[0];\r\n    }\r\n\r\n    return this.cached_pseudo_root;\r\n  }\r\n\r\n  getBaseForm () {\r\n    if (!php.isset(this.cached_base)) {\r\n      this.cached_base = this.helper.getBaseForm(this.word, this.annot)[0];\r\n    }\r\n\r\n    return this.cached_base;\r\n  }\r\n\r\n  getAllForms () {\r\n    if (!php.isset(this.cached_forms)) {\r\n      this.cached_forms = this.helper.getAllForms(this.word, this.annot);\r\n    }\r\n\r\n    return this.cached_forms;\r\n  }\r\n\r\n  getWordForm (index) {\r\n    this.readAllForms();\r\n\r\n    return this.slice(index, index + 1)[0];\r\n  }\r\n\r\n  createWordForm (word, form_no, ancode) {\r\n    let common_ancode;\r\n    let grammemsAndPartOfSpeech;\r\n    let pos_id;\r\n    let all_grammems;\r\n\r\n    if (!php.isset(this.common_ancode_grammems)) {\r\n      common_ancode = this.annot[0]['common_ancode'];\r\n\r\n      this.common_ancode_grammems = php.isset(common_ancode)\r\n        ? this.helper.getGrammems(common_ancode)\r\n        : {};\r\n    }\r\n\r\n    grammemsAndPartOfSpeech = this.helper.getGrammemsAndPartOfSpeech(ancode);\r\n    pos_id = grammemsAndPartOfSpeech[0];\r\n    all_grammems = grammemsAndPartOfSpeech[1];\r\n\r\n    return new Morphy_WordForm(word, form_no, pos_id, php.array_merge(this.common_ancode_grammems, all_grammems));\r\n  }\r\n\r\n  readAllForms () {\r\n    const forms = [];\r\n    let form_no = 0;\r\n    let formsWithAncodes;\r\n\r\n    if (!this.all_forms_readed) {\r\n      formsWithAncodes = this.helper.getAllFormsWithAncodes(this.word, this.annot);\r\n\r\n      _.forEach(formsWithAncodes.forms, form => {\r\n        forms.push(this.createWordForm(form[0], form_no, form[1]));\r\n        form_no++;\r\n      });\r\n\r\n      this.found_form_no = formsWithAncodes.foundFormNo[0];\r\n\r\n      this.splice(0, this.length);\r\n      _.forEach(forms, form => this.push(form));\r\n\r\n      this.all_forms_readed = true;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  getFoundFormNoLow () {\r\n    this.readAllForms();\r\n\r\n    return this.found_form_no['low'];\r\n  }\r\n\r\n  getFoundFormNoHigh () {\r\n    this.readAllForms();\r\n\r\n    return this.found_form_no['high'];\r\n  }\r\n\r\n  getFoundWordForm () {\r\n    const result = [];\r\n    for (let i = this.getFoundFormNoLow(), c = this.getFoundFormNoHigh() + 1; i < c; i++) {\r\n      result.push(this.getWordForm(i));\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  hasGrammems (grammems) {\r\n    grammems = castArray(grammems);\r\n\r\n    return _.some(this, wf => wf.hasGrammems(grammems));\r\n  }\r\n\r\n  getWordFormsByGrammems (grammems) {\r\n    grammems = castArray(grammems);\r\n    const result = [];\r\n\r\n    _.forEach(this, wf => {\r\n      if (wf.hasGrammems(grammems)) {\r\n        result.push(wf);\r\n      }\r\n    });\r\n\r\n    return result;\r\n    //return count(result) ? result : false;\r\n  }\r\n\r\n  hasPartOfSpeech (poses) {\r\n    poses = castArray(poses);\r\n\r\n    return _.some(this, wf => {\r\n      return poses.indexOf(wf.getPartOfSpeech()) >= 0;\r\n      // return poses.includes(wf.getPartOfSpeech());\r\n    });\r\n  }\r\n\r\n  getWordFormsByPartOfSpeech (poses) {\r\n    poses = castArray(poses);\r\n    const result = [];\r\n\r\n    _.forEach(this, wf => {\r\n      if (poses.indexOf(wf.getPartOfSpeech()) >= 0) {\r\n      // if (poses.includes(wf.getPartOfSpeech())) {\r\n        result.push(wf);\r\n      }\r\n    });\r\n\r\n    return result;\r\n    //return count(result) ? result : false;\r\n  }\r\n\r\n}\r\n\r\n// ----------------------------\r\n// Finders\r\n// ----------------------------\r\nclass Morphy_Morphier_Finder_Interface {\r\n\r\n  findWord (word) {}\r\n\r\n  decodeAnnot (raw, withBase) {}\r\n\r\n  getAnnotDecoder () {}\r\n\r\n}\r\n\r\nclass Morphy_Morphier_Finder_Base extends Morphy_Morphier_Finder_Interface {\r\n\r\n  /**\r\n   * @param {Morphy_AnnotDecoder_Interface} annotDecoder\r\n   */\r\n  constructor (annotDecoder) {\r\n    super();\r\n    this.annot_decoder = annotDecoder;\r\n    this.prev_word = null;\r\n    this.prev_result = false;\r\n  }\r\n\r\n  findWord (word) {\r\n    if (this.prev_word === word) {\r\n      return this.prev_result;\r\n    }\r\n\r\n    const result = this.doFindWord(word);\r\n\r\n    this.prev_word = word;\r\n    this.prev_result = result;\r\n\r\n    return result;\r\n  }\r\n\r\n  getAnnotDecoder () {\r\n    return this.annot_decoder;\r\n  }\r\n\r\n  decodeAnnot (raw, withBase) {\r\n    return this.annot_decoder.decode(raw, withBase);\r\n  }\r\n\r\n  doFindWord (word) {}\r\n\r\n}\r\n\r\nclass Morphy_Morphier_Finder_Common extends Morphy_Morphier_Finder_Base {\r\n  \r\n  /**\r\n   * @param {Morphy_Fsa_Interface} fsa\r\n   * @param {Morphy_AnnotDecoder_Interface} annotDecoder\r\n   */\r\n  constructor (fsa, annotDecoder) {\r\n    super(annotDecoder);\r\n\r\n    this.fsa = fsa;\r\n    this.root = this.fsa.getRootTrans();\r\n  }\r\n\r\n  getFsa () {\r\n    return this.fsa;\r\n  }\r\n\r\n  doFindWord (word) {\r\n    const result = this.fsa.walk(this.root, word);\r\n\r\n    if (!result['result'] || result['annot'] === null) {\r\n      return false;\r\n    }\r\n\r\n    return result['annot'];\r\n  }\r\n\r\n}\r\n\r\nclass Morphy_Morphier_Finder_Predict_Suffix extends Morphy_Morphier_Finder_Common {\r\n\r\n  /**\r\n   * @param {Morphy_Fsa_Interface} fsa\r\n   * @param {Morphy_AnnotDecoder_Interface} annotDecoder\r\n   * @param {string} encoding\r\n   * @param {number} [minimalSuffixLength=4]\r\n   */\r\n  constructor (fsa, annotDecoder, encoding, minimalSuffixLength = 4) {\r\n    super(fsa, annotDecoder);\r\n\r\n    this.min_suf_len = minimalSuffixLength;\r\n    this.unicode = Morphy_UnicodeHelper.create(encoding);\r\n  }\r\n\r\n  doFindWord (word) {\r\n    const word_len = this.unicode.strlen(word);\r\n    let result;\r\n\r\n    if (!word_len) {\r\n      return false;\r\n    }\r\n  \r\n    let i = 1;\r\n    let c = word_len - this.min_suf_len;\r\n    for (; i < c; i++) {\r\n      word = php.substr(word, this.unicode.firstCharSize(word));\r\n      result = super.doFindWord(word);\r\n\r\n      if (result !== false) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (i < c) {\r\n      return result;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  fixAnnots (annots, len) {\r\n    _.forEach(annots, annot => annot['cplen'] = len);\r\n\r\n    return annots;\r\n  }\r\n\r\n}\r\n\r\nclass Morphy_Morphier_PredictCollector extends Morphy_Fsa_WordsCollector {\r\n\r\n  /**\r\n   * @param {*} limit\r\n   * @param {Morphy_AnnotDecoder_Interface} annotDecoder\r\n   */\r\n  constructor (limit, annotDecoder) {\r\n    super(limit);\r\n  \r\n    this.collected = 0;\r\n    this.used_poses = {};\r\n    this.annot_decoder = annotDecoder;\r\n  }\r\n\r\n  collect (path, annotRaw) {\r\n    if (this.collected > this.limit) {\r\n      return false;\r\n    }\r\n\r\n    const annots = this.decodeAnnot(annotRaw);\r\n    let pos_id;\r\n    let result_idx;\r\n    let nextItemsIndex;\r\n    let itemsSize;\r\n\r\n    _.forEach(annots, annot => {\r\n      annot['cplen'] = annot['plen'] = 0;\r\n      pos_id = annot['pos_id'];\r\n\r\n      if (php.isset(this.used_poses[pos_id])) {\r\n        result_idx = this.used_poses[pos_id];\r\n\r\n        if (annot['freq'] > this.items[result_idx]['freq']) {\r\n          this.items[result_idx] = annot;\r\n        }\r\n      } else {\r\n        itemsSize = _.size(this.items);\r\n        this.used_poses[pos_id] = itemsSize;\r\n        // оригинал:\r\n        // $this->items[] = annot;\r\n        nextItemsIndex = (itemsSize) ? _.max(_.keys(this.items)) : -1;\r\n\r\n        this.items[parseInt(nextItemsIndex, 10) + 1] = annot;\r\n      }\r\n    });\r\n\r\n    this.collected++;\r\n\r\n    return true;\r\n  }\r\n\r\n  clear () {\r\n    super.clear();\r\n    this.collected = 0;\r\n    this.used_poses = {};\r\n  }\r\n\r\n  decodeAnnot (annotRaw) {\r\n    return this.annot_decoder.decode(annotRaw, true);\r\n  }\r\n\r\n}\r\n\r\nclass Morphy_Morphier_Finder_Predict_Database extends Morphy_Morphier_Finder_Common {\r\n\r\n  /**\r\n   * @param {Morphy_Fsa_Interface} fsa\r\n   * @param {Morphy_AnnotDecoder_Interface} annotDecoder\r\n   * @param {string} encoding\r\n   * @param {Morphy_GramInfo_Interface} graminfo\r\n   * @param {number} [minPostfixMatch=2]\r\n   * @param {number} [collectLimit=32]\r\n   */\r\n  constructor (fsa, annotDecoder, encoding, graminfo, minPostfixMatch = 2, collectLimit = 32) {\r\n    super(fsa, annotDecoder);\r\n\r\n    this.graminfo = graminfo;\r\n    this.min_postfix_match = minPostfixMatch;\r\n    this.collector = this.createCollector(collectLimit, this.getAnnotDecoder());\r\n    this.unicode = Morphy_UnicodeHelper.create(encoding);\r\n  }\r\n\r\n  createAnnotDecoder () {\r\n    // todo: какая-то херня\r\n    //return phpmorphy_annot_decoder_new('predict');\r\n    return Morphy_AnnotDecoder_Factory.create('predict');\r\n  }\r\n\r\n  doFindWord (word) {\r\n    word = toBuffer(word);\r\n\r\n    const rev_word = this.unicode.strrev(word);\r\n    const result = this.fsa.walk(this.root, rev_word);\r\n    let annots;\r\n    let match_len;\r\n\r\n    if (result['result'] && null !== result['annot']) {\r\n      annots = result['annot'];\r\n    } else {\r\n      match_len = this.unicode.strlen(this.unicode.fixTrailing(rev_word.slice(0, result['walked'])));\r\n      annots = this.determineAnnots(result['last_trans'], match_len);\r\n\r\n      if (annots === null) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (!php.is_array(annots)) {\r\n      annots = this.collector.decodeAnnot(annots);\r\n    }\r\n\r\n    return this.fixAnnots(word, annots);\r\n  }\r\n\r\n  determineAnnots (trans, matchLen) {\r\n    let annots = this.fsa.getAnnot(trans);\r\n    if (annots == null && matchLen >= this.min_postfix_match) {\r\n      this.collector.clear();\r\n      this.fsa.collect(trans, this.collector.getCallback());\r\n      annots = this.collector.getItems();\r\n    }\r\n\r\n    return annots;\r\n  }\r\n\r\n  fixAnnots (word, annots) {\r\n    word = toBuffer(word);\r\n\r\n    const result = [];\r\n    let flexias;\r\n    let prefix;\r\n    let suffix;\r\n    let plen;\r\n    let slen;\r\n\r\n    // remove all prefixes?\r\n    _.forEach(annots, annot => {\r\n      annot['cplen'] = annot['plen'] = 0;\r\n      flexias = this.graminfo.readFlexiaData(annot, false);\r\n      prefix = Buffer.from(flexias[annot['form_no'] * 2]);\r\n      suffix = Buffer.from(flexias[annot['form_no'] * 2 + 1]);\r\n\r\n      plen = prefix.length;\r\n      slen = suffix.length;\r\n      \r\n      const partOfWordInPlaceOfPrefix = php.substr(word, 0, plen);\r\n      const partOfWordInPlaceOfSuffix = php.substr(word,   -slen);\r\n      \r\n      if (\r\n        (!plen || (partOfWordInPlaceOfPrefix && partOfWordInPlaceOfPrefix.equals(prefix))) &&\r\n        (!slen || (partOfWordInPlaceOfSuffix && partOfWordInPlaceOfSuffix.equals(suffix)))\r\n      ) {\r\n        result.push(annot);\r\n      }\r\n    });\r\n\r\n    return _.size(result) ? result : false;\r\n  }\r\n\r\n  createCollector (limit) {\r\n    return new Morphy_Morphier_PredictCollector(limit, this.getAnnotDecoder());\r\n  }\r\n\r\n}\r\n\r\n// ----------------------------\r\n// Morphiers\r\n// ----------------------------\r\nclass Morphy_Morphier_Base extends Morphy_Morphier_Interface {\r\n\r\n  /**\r\n   * @param {Morphy_Morphier_Finder_Interface} finder\r\n   * @param {Morphy_Morphier_Helper} helper\r\n   */\r\n  constructor (finder, helper) {\r\n    super();\r\n    this.finder = finder;\r\n    this.helper = _.cloneDeep(helper);\r\n    this.helper.setAnnotDecoder(finder.getAnnotDecoder());\r\n  }\r\n\r\n  /**\r\n   * @return Morphy_Morphier_Finder_Interface\r\n   */\r\n  getFinder () {\r\n    return this.finder;\r\n  }\r\n\r\n  /**\r\n   * @return Morphy_Morphier_Helper\r\n   */\r\n  getHelper () {\r\n    return this.helper;\r\n  }\r\n\r\n  getAnnot (word) {\r\n    const annots = this.finder.findWord(word);\r\n    if (annots === false) {\r\n      return false;\r\n    }\r\n\r\n    return this.helper.decodeAnnot(annots, true);\r\n  }\r\n\r\n  getWordDescriptor (word) {\r\n    const annots = this.finder.findWord(word);\r\n    if (annots === false) {\r\n      return false;\r\n    }\r\n\r\n    return this.helper.getWordDescriptor(word, annots);\r\n  }\r\n\r\n  getAllFormsWithAncodes (word) {\r\n    const annots = this.finder.findWord(word);\r\n    if (annots === false) {\r\n      return false;\r\n    }\r\n    \r\n    return this.helper.getAllFormsWithResolvedAncodes(word, annots);\r\n  }\r\n\r\n  getPartOfSpeech (word) {\r\n    const annots = this.finder.findWord(word);\r\n    if (annots == false) {\r\n      return false;\r\n    }\r\n\r\n    return this.helper.getPartOfSpeech(word, annots);\r\n  }\r\n\r\n  getBaseForm (word) {\r\n    const annots = this.finder.findWord(word);\r\n    if (annots === false) {\r\n      return false;\r\n    }\r\n\r\n    return this.helper.getBaseForm(word, annots);\r\n  }\r\n\r\n  getPseudoRoot (word) {\r\n    const annots = this.finder.findWord(word);\r\n    if (annots === false) {\r\n      return false;\r\n    }\r\n\r\n    return this.helper.getPseudoRoot(word, annots);\r\n  }\r\n\r\n  getAllForms (word) {\r\n    const annots = this.finder.findWord(word);\r\n    if (annots === false) {\r\n      return false;\r\n    }\r\n\r\n    return this.helper.getAllForms(word, annots);\r\n  }\r\n\r\n  getAncode (word) {\r\n    const annots = this.finder.findWord(word);\r\n    if (annots === false) {\r\n      return false;\r\n    }\r\n\r\n    return this.helper.getAncode(annots);\r\n  }\r\n\r\n  getGrammarInfo (word) {\r\n    const annots = this.finder.findWord(word);\r\n    if (annots === false) {\r\n      return false;\r\n    }\r\n\r\n    return this.helper.getGrammarInfo(annots);\r\n  }\r\n\r\n  getGrammarInfoMergeForms (word) {\r\n    const annots = this.finder.findWord(word);\r\n    if (annots === false) {\r\n      return false;\r\n    }\r\n\r\n    return this.helper.getGrammarInfoMergeForms(annots);\r\n  }\r\n\r\n  /**\r\n   * @param word\r\n   * @param partOfSpeech\r\n   * @param grammems\r\n   * @param {boolean} [returnOnlyWord=false]\r\n   * @param {*} [callback=null]\r\n   * @returns {boolean}\r\n   */\r\n  castFormByGramInfo (word, partOfSpeech, grammems, returnOnlyWord = false, callback = null) {\r\n    const annots = this.finder.findWord(word);\r\n    if (annots === false) {\r\n      return false;\r\n    }\r\n\r\n    return this.helper.castFormByGramInfo(word, annots);\r\n  }\r\n\r\n  /**\r\n   * @param word\r\n   * @param patternWord\r\n   * @param {boolean} [returnOnlyWord=false]\r\n   * @param {*} [callback=null]\r\n   * @returns {boolean}\r\n   */\r\n  castFormByPattern (word, patternWord, returnOnlyWord = false, callback = null) {\r\n    const orig_annots = this.finder.findWord(word);\r\n    if (orig_annots === false) {\r\n      return false;\r\n    }\r\n\r\n    const pattern_annots = this.finder.findWord(patternWord);\r\n    if (pattern_annots === false) {\r\n      return false;\r\n    }\r\n\r\n    return this.helper.castFormByPattern(word, orig_annots, patternWord, pattern_annots, returnOnlyWord, callback);\r\n  }\r\n\r\n}\r\n\r\nclass Morphy_Morphier_Common extends Morphy_Morphier_Base {\r\n  \r\n  /**\r\n   * @param {Morphy_Morphier_Helper} helper\r\n   * @returns {Morphy_AnnotDecoder_Interface}\r\n   */\r\n  static createAnnotDecoder (helper) {\r\n    return Morphy_AnnotDecoder_Factory.create(helper.getGramInfo().getEnds()).getCommonDecoder();\r\n  }\r\n  \r\n  /**\r\n   * @param {Morphy_Fsa_Interface} fsa\r\n   * @param {Morphy_Morphier_Helper} helper\r\n   */\r\n  constructor (fsa, helper) {\r\n    super(new Morphy_Morphier_Finder_Common(fsa, Morphy_Morphier_Common.createAnnotDecoder(helper)), helper);\r\n  }\r\n\r\n}\r\n\r\nclass Morphy_Morphier_Predict_Suffix extends Morphy_Morphier_Base {\r\n  \r\n  /**\r\n   * @param {Morphy_Morphier_Helper} helper\r\n   * @returns {Morphy_AnnotDecoder_Interface}\r\n   */\r\n  static createAnnotDecoder (helper) {\r\n    return Morphy_AnnotDecoder_Factory.create(helper.getGramInfo().getEnds()).getCommonDecoder();\r\n  }\r\n  \r\n  /**\r\n   * @param {Morphy_Fsa_Interface} fsa\r\n   * @param {Morphy_Morphier_Helper} helper\r\n   */\r\n  constructor (fsa, helper) {\r\n    super(\r\n      new Morphy_Morphier_Finder_Predict_Suffix(\r\n        fsa,\r\n        Morphy_Morphier_Predict_Suffix.createAnnotDecoder(helper),\r\n        helper.getGramInfo().getEncoding(),\r\n        4\r\n      ),\r\n      helper\r\n    );\r\n  }\r\n\r\n}\r\n\r\nclass Morphy_Morphier_Predict_Database extends Morphy_Morphier_Base {\r\n  \r\n  /**\r\n   * @param {Morphy_Morphier_Helper} helper\r\n   * @returns {Morphy_AnnotDecoder_Interface}\r\n   */\r\n  static createAnnotDecoder (helper) {\r\n    return Morphy_AnnotDecoder_Factory.create(helper.getGramInfo().getEnds()).getPredictDecoder();\r\n  }\r\n  \r\n  /**\r\n   * @param {Morphy_Fsa_Interface} fsa\r\n   * @param {Morphy_Morphier_Helper} helper\r\n   */\r\n  constructor (fsa, helper) {\r\n    super(\r\n      new Morphy_Morphier_Finder_Predict_Database(\r\n        fsa,\r\n        Morphy_Morphier_Predict_Database.createAnnotDecoder(helper),\r\n        helper.getGramInfo().getEncoding(),\r\n        helper.getGramInfo(),\r\n        2,\r\n        32\r\n      ),\r\n      helper\r\n    );\r\n  }\r\n\r\n}\r\n\r\nclass Morphy_Morphier_Bulk extends Morphy_Morphier_Interface {\r\n\r\n  /**\r\n   * @param {Morphy_Fsa_Interface} fsa\r\n   * @param {Morphy_Morphier_Helper} helper\r\n   */\r\n  constructor (fsa, helper) {\r\n    super();\r\n    \r\n    this.fsa = fsa;\r\n    this.root_trans = fsa.getRootTrans();\r\n    this.helper = _.cloneDeep(helper);\r\n    this.helper.setAnnotDecoder(this.createAnnotDecoder(helper));\r\n    this.graminfo = helper.getGramInfo();\r\n    this.notfound = [];\r\n  }\r\n\r\n  getFsa () {\r\n    return this.fsa;\r\n  }\r\n\r\n  getHelper () {\r\n    return this.helper;\r\n  }\r\n\r\n  getGraminfo () {\r\n    return this.graminfo;\r\n  }\r\n\r\n  getNotFoundWords () {\r\n    return this.notfound;\r\n  }\r\n\r\n  /**\r\n   * @param {Morphy_Morphier_Helper} helper\r\n   * @returns {*}\r\n   */\r\n  createAnnotDecoder (helper) {\r\n    return new Morphy_AnnotDecoder_Common(helper.getGramInfo().getEnds());\r\n  }\r\n\r\n  getAnnot (word) {\r\n    const result = {};\r\n\r\n    _.forEach(this.findWord(word), item => {\r\n      const words = item.data;\r\n      let annot = item.annots;\r\n      annot = this.helper.decodeAnnot(annot, true);\r\n      \r\n      _.forEach(words, word => {\r\n        result[word] = result[word] || [];\r\n        result[word].push(annot);\r\n      });\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  getBaseForm (words) {\r\n    const annots = this.findWord(words);\r\n\r\n    return this.composeForms(annots, true, false, false);\r\n  }\r\n\r\n  getAllForms (words) {\r\n    const annots = this.findWord(words);\r\n\r\n    return this.composeForms(annots, false, false, false);\r\n  }\r\n\r\n  getPseudoRoot (words) {\r\n    const annots = this.findWord(words);\r\n\r\n    return this.composeForms(annots, false, true, false);\r\n  }\r\n\r\n  getPartOfSpeech (words) {\r\n    const annots = this.findWord(words);\r\n\r\n    return this.composeForms(annots, false, false, true);\r\n  }\r\n\r\n  /**\r\n   * @param words\r\n   * @param method\r\n   * @param {boolean} [callWithWord=false]\r\n   * @returns {*}\r\n   */\r\n  processAnnotsWithHelper (words, method, callWithWord = false) {\r\n    const result = {};\r\n    let annot_raw;\r\n    let result_for_annot;\r\n\r\n    _.forEach(this.findWord(words), item => {\r\n      words = item.data;\r\n      annot_raw = item.annots;\r\n\r\n      if (annot_raw.length == 0) {\r\n        return;\r\n      }\r\n\r\n      if (callWithWord) {\r\n        _.forEach(words, word => result[word] = this.helper[method](word, annot_raw));\r\n      } else {\r\n        result_for_annot = this.helper[method](annot_raw);\r\n        _.forEach(words, word => result[word] = result_for_annot);\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  getAncode (words) {\r\n    return this.processAnnotsWithHelper(words, 'getAncode');\r\n  }\r\n\r\n  getGrammarInfoMergeForms (words) {\r\n    return this.processAnnotsWithHelper(words, 'getGrammarInfoMergeForms');\r\n  }\r\n\r\n  getGrammarInfo (words) {\r\n    return this.processAnnotsWithHelper(words, 'getGrammarInfo');\r\n  }\r\n\r\n  getAllFormsWithAncodes (words) {\r\n    return this.processAnnotsWithHelper(words, 'getAllFormsWithResolvedAncodes', true);\r\n  }\r\n\r\n  getWordDescriptor (words) {\r\n    return this.processAnnotsWithHelper(words, 'getWordDescriptor', true);\r\n  }\r\n\r\n  findWord (words) {\r\n    this.notfound = [];\r\n\r\n    const patriciaTrie = this.buildPatriciaTrie(words);\r\n    const labels = patriciaTrie[0];\r\n    const finals = patriciaTrie[1];\r\n    const dests = patriciaTrie[2];\r\n    const annots = {};\r\n    const stack = [0, Buffer.from(''), this.root_trans];\r\n    const fsa = this.fsa;\r\n    \r\n    let n;\r\n    let path;\r\n    let trans;\r\n    let label;\r\n    let result;\r\n    let is_final;\r\n    let stack_idx = 0;\r\n\r\n    // TODO: Improve this\r\n    while (stack_idx >= 0) {\r\n      n = stack[stack_idx];\r\n      path = Buffer.concat([Buffer.from(stack[stack_idx + 1]), labels[n]]);\r\n      trans = stack[stack_idx + 2];\r\n      stack_idx -= 3; // TODO: Remove items from stack? (performance!!!)\r\n\r\n      is_final = finals[n] > 0;\r\n      //is_final = dests[n] === false;\r\n\r\n      result = false;\r\n      if (trans !== false && n > 0) {\r\n        label = labels[n];\r\n        result = fsa.walk(trans, label, is_final);\r\n\r\n        if (label.length == result['walked']) {\r\n          trans = result['word_trans'];\r\n        } else {\r\n          trans = false;\r\n        }\r\n      }\r\n\r\n      if (is_final) {\r\n        if (trans !== false && php.isset(result['annot'])) {\r\n          annots[result['annot']] = annots[result['annot']] || {\r\n            annots: result['annot'],\r\n            data: []\r\n          };\r\n          annots[result['annot']].data.push(path);\r\n        } else {\r\n          this.notfound.push(path);\r\n        }\r\n      }\r\n\r\n      if (dests[n] !== false) {\r\n        _.forEach(dests[n], dest => {\r\n          stack_idx += 3;\r\n          stack[stack_idx] = dest;\r\n          stack[stack_idx + 1] = path;\r\n          stack[stack_idx + 2] = trans;\r\n        });\r\n      }\r\n    }\r\n\r\n    return annots;\r\n  }\r\n\r\n  composeForms (annotsRaw, onlyBase, pseudoRoot, partOfSpeech) {\r\n    const result = {};\r\n    let key;\r\n    let annot_raw;\r\n    let words;\r\n\r\n    // process found annotations\r\n    _.forEach(annotsRaw, item => {\r\n      words = item.data;\r\n      annot_raw = item.annots;\r\n\r\n      if (annot_raw.length == 0) {\r\n        return;\r\n      }\r\n\r\n      _.forEach(this.helper.decodeAnnot(annot_raw, onlyBase), annot => {\r\n        let flexias;\r\n        let cplen;\r\n        let plen;\r\n        let flen;\r\n        let pos_id;\r\n\r\n        if (!(onlyBase || pseudoRoot)) {\r\n          flexias = this.graminfo.readFlexiaData(annot);\r\n        }\r\n\r\n        cplen = annot['cplen'];\r\n        plen = annot['plen'];\r\n        flen = annot['flen'];\r\n\r\n        if (partOfSpeech) {\r\n          pos_id = this.helper.extractPartOfSpeech(annot);\r\n        }\r\n\r\n        _.forEach(words, word => {\r\n          let base;\r\n          let prefix;\r\n          let form;\r\n\r\n          if (flen) {\r\n            base = php.substr(word, cplen + plen, -flen);\r\n          } else {\r\n            if (cplen || plen) {\r\n              base = php.substr(word, cplen + plen);\r\n            } else {\r\n              base = word;\r\n            }\r\n          }\r\n\r\n          prefix = cplen ? php.substr(word, 0, cplen) : '';\r\n          result[word] = result[word] || {};\r\n\r\n          if (pseudoRoot) {\r\n            result[word][base] = 1;\r\n          } else\r\n          if (onlyBase) {\r\n            form = [\r\n              prefix,\r\n              annot['base_prefix'],\r\n              base,\r\n              annot['base_suffix']\r\n            ].join('');\r\n\r\n            result[word][form] = 1;\r\n          } else\r\n          if (partOfSpeech) {\r\n            result[word][pos_id] = 1;\r\n          } else {\r\n            for (let i = 0, c = _.size(flexias); i < c; i += 2) {\r\n              form = [\r\n                prefix,\r\n                flexias[i],\r\n                base,\r\n                flexias[i + 1]\r\n              ].join('');\r\n\r\n              result[word][form] = 1;\r\n            }\r\n          }\r\n        });\r\n      });\r\n    });\r\n  \r\n    _.keys(result).forEach(key => {\r\n      result[key] = _.keys(result[key]);\r\n      \r\n      if (result[key].length && isStringifyedNumber(result[key][0])) {\r\n        result[key] = result[key].map(_.toInteger);\r\n      }\r\n    });\r\n    \r\n    return result;\r\n  }\r\n\r\n  buildPatriciaTrie (words) {\r\n    if (!php.is_array(words)) {\r\n      throw new Error('Words must be array');\r\n    }\r\n\r\n    //words = php.sort(words);\r\n    words = (words.length && Buffer.isBuffer(words[0])) ? words.sort(Buffer.compare) : words.sort();\r\n\r\n    let stack = [];\r\n    let prev_word = '';\r\n    let prev_wordBuf = Buffer.alloc(0);\r\n    let prev_word_len = 0;\r\n    let prev_lcp = 0;\r\n    let node = 0;\r\n\r\n    const state_labels = [];\r\n    const state_dests = [];\r\n    const state_finals = [0];\r\n\r\n    state_labels.push(Buffer.from(''));\r\n    state_dests.push([]);\r\n\r\n    _.forEach(words, word => {\r\n      const wordBuf = Buffer.from(word, 'utf8');\r\n\r\n      if (wordBuf.equals(prev_wordBuf)) {\r\n        return;\r\n      }\r\n\r\n      const word_len = wordBuf.length;\r\n      let new_state_id;\r\n      let need_split;\r\n      let trim_size;\r\n      let node_key;\r\n      let new_node_id_1;\r\n      let new_node_id_2;\r\n      let new_node_id;\r\n\r\n      // find longest common prefix\r\n      let lcp = 0;\r\n      let c = Math.min(prev_word_len, word_len);\r\n      for (; lcp < c && wordBuf[lcp] == prev_wordBuf[lcp]; lcp++) {}\r\n\r\n      if (lcp == 0) {\r\n        stack = [];\r\n        new_state_id = _.size(state_labels);\r\n        state_labels.push(wordBuf);\r\n        state_finals.push(1);\r\n        state_dests.push(false);\r\n        state_dests[0].push(new_state_id);\r\n        node = new_state_id;\r\n      } else {\r\n        need_split = true;\r\n        trim_size = 0; // for split\r\n\r\n        if (lcp == prev_lcp) {\r\n          need_split = false;\r\n          node = stack[_.size(stack) - 1];\r\n        } else\r\n        if (lcp > prev_lcp) {\r\n          if (lcp == prev_word_len) {\r\n            need_split = false;\r\n          } else {\r\n            need_split = true;\r\n            trim_size = lcp - prev_lcp;\r\n          }\r\n\r\n          stack.push(node);\r\n        } else {\r\n          trim_size = prev_wordBuf.length - lcp;\r\n  \r\n          let stack_size = _.size(stack) - 1;\r\n          for (;; --stack_size) {\r\n            trim_size -= state_labels[node].length;\r\n\r\n            if (trim_size <= 0) {\r\n              break;\r\n            }\r\n\r\n            if (_.size(stack) < 1) {\r\n              throw new Error('Infinite loop possible');\r\n            }\r\n\r\n            node = stack.pop();\r\n          }\r\n\r\n          need_split = trim_size < 0;\r\n          trim_size = Math.abs(trim_size);\r\n\r\n          if (need_split) {\r\n            stack.push(node);\r\n          } else {\r\n            node = stack[stack_size];\r\n          }\r\n        }\r\n\r\n        let node_key_buf;\r\n\r\n        if (need_split) {\r\n          node_key = state_labels[node];\r\n          node_key_buf = Buffer.from(node_key);\r\n\r\n          // split\r\n          new_node_id_1 = _.size(state_labels);\r\n          new_node_id_2 = new_node_id_1 + 1;\r\n\r\n          // new_node_1\r\n          state_labels.push(php.substr(node_key_buf, trim_size));\r\n          state_finals.push(state_finals[node]);\r\n          state_dests.push(state_dests[node]);\r\n\r\n          // adjust old node\r\n          state_labels[node] = php.substr(node_key_buf, 0, trim_size);\r\n          state_finals[node] = 0;\r\n          state_dests[node] = [new_node_id_1];\r\n\r\n          // append new node, new_node_2\r\n          state_labels.push(php.substr(wordBuf, lcp));\r\n          state_finals.push(1);\r\n          state_dests.push(false);\r\n\r\n          state_dests[node].push(new_node_id_2);\r\n\r\n          node = new_node_id_2;\r\n        } else {\r\n          new_node_id = _.size(state_labels);\r\n\r\n          state_labels.push(php.substr(wordBuf, lcp));\r\n          state_finals.push(1);\r\n          state_dests.push(false);\r\n\r\n          if (state_dests[node] !== false) {\r\n            state_dests[node].push(new_node_id);\r\n          } else {\r\n            state_dests[node] = [new_node_id];\r\n          }\r\n\r\n          node = new_node_id;\r\n        }\r\n      }\r\n\r\n      prev_word = word;\r\n      prev_word_len = word_len;\r\n      prev_wordBuf = wordBuf;\r\n      prev_lcp = lcp;\r\n    });\r\n\r\n    return [state_labels, state_finals.join(''), state_dests];\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Morphy_Morphier_Interface,\r\n  Morphy_Morphier_Empty,\r\n  Morphy_AnnotDecoder_Interface,\r\n  Morphy_AnnotDecoder_Base,\r\n  Morphy_AnnotDecoder_Common,\r\n  Morphy_AnnotDecoder_Predict,\r\n  Morphy_AnnotDecoder_Factory,\r\n  Morphy_AncodesResolver_Interface,\r\n  Morphy_AncodesResolver_ToText,\r\n  Morphy_AncodesResolver_ToDialingAncodes,\r\n  Morphy_AncodesResolver_AsIs,\r\n  Morphy_AncodesResolver_Proxy,\r\n  Morphy_WordDescriptor_Collection,\r\n  Morphy_Morphier_Helper,\r\n  Morphy_WordForm,\r\n  Morphy_WordDescriptor,\r\n  Morphy_Morphier_Finder_Interface,\r\n  Morphy_Morphier_Finder_Base,\r\n  Morphy_Morphier_Finder_Common,\r\n  Morphy_Morphier_Finder_Predict_Suffix,\r\n  Morphy_Morphier_PredictCollector,\r\n  Morphy_Morphier_Finder_Predict_Database,\r\n  Morphy_Morphier_Base,\r\n  Morphy_Morphier_Common,\r\n  Morphy_Morphier_Predict_Suffix,\r\n  Morphy_Morphier_Predict_Database,\r\n  Morphy_Morphier_Bulk,\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/morphiers.js","module.exports = require(\"encoding\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"encoding\"\n// module id = 16\n// module chunks = 0 1","import 'babel-polyfill';\r\nimport _ from 'lodash';\r\nimport path from 'path';\r\nimport phpMorphy, {\r\n  STORAGE_FILE,\r\n  STORAGE_MEM,\r\n  SOURCE_FSA,\r\n  RESOLVE_ANCODES_AS_TEXT,\r\n  RESOLVE_ANCODES_AS_DIALING,\r\n  RESOLVE_ANCODES_AS_INT,\r\n  NORMAL,\r\n  IGNORE_PREDICT,\r\n  ONLY_PREDICT,\r\n  PREDICT_BY_NONE,\r\n  PREDICT_BY_SUFFIX,\r\n  PREDICT_BY_DB\r\n} from './lib/common';\r\n\r\nconst defaults = {\r\n  dir:                 path.join(__dirname, '..', 'dicts'),\r\n  storage:             STORAGE_MEM,\r\n  predict_by_suffix:   true,\r\n  predict_by_db:       true,\r\n  graminfo_as_text:    true,\r\n  use_ancodes_cache:   false,\r\n  resolve_ancodes:     RESOLVE_ANCODES_AS_TEXT\r\n};\r\n\r\nclass Morphy {\r\n  \r\n  static get STORAGE_FILE () { return STORAGE_FILE; }\r\n  static get STORAGE_MEM () { return STORAGE_MEM; }\r\n  static get SOURCE_FSA () { return SOURCE_FSA; }\r\n  static get RESOLVE_ANCODES_AS_TEXT () { return RESOLVE_ANCODES_AS_TEXT; }\r\n  static get RESOLVE_ANCODES_AS_DIALING () { return RESOLVE_ANCODES_AS_DIALING; }\r\n  static get RESOLVE_ANCODES_AS_INT () { return RESOLVE_ANCODES_AS_INT; }\r\n  static get NORMAL () { return NORMAL; }\r\n  static get IGNORE_PREDICT () { return IGNORE_PREDICT; }\r\n  static get ONLY_PREDICT () { return ONLY_PREDICT; }\r\n  static get PREDICT_BY_NONE () { return PREDICT_BY_NONE; }\r\n  static get PREDICT_BY_SUFFIX () { return PREDICT_BY_SUFFIX; }\r\n  static get PREDICT_BY_DB () { return PREDICT_BY_DB; }\r\n\r\n  /**\r\n   * @param {string|{}} lang\r\n   * @param {{}} [opts]\r\n   */\r\n  constructor (lang, opts = {}) {\r\n    if (_.isPlainObject(lang)) {\r\n      opts = lang;\r\n    } else {\r\n      opts.lang = lang;\r\n    }\r\n  \r\n    opts = Object.assign({}, defaults, opts);\r\n  \r\n    switch (opts.lang.toLowerCase()) {\r\n      case 'de':\r\n      case 'de_de':\r\n        opts.lang = 'de_DE';\r\n        break;\r\n      case 'en':\r\n      case 'en_en':\r\n        opts.lang = 'en_EN';\r\n        break;\r\n      case 'et':\r\n      case 'ee':\r\n      case 'et_ee':\r\n        opts.lang = 'et_EE';\r\n        break;\r\n      case 'ua':\r\n      case 'uk':\r\n      case 'uk_ua':\r\n        opts.lang = 'uk_UA';\r\n        break;\r\n      case 'ru':\r\n      case 'ru_ru':\r\n      default:\r\n        opts.lang = 'ru_RU';\r\n        break;\r\n    }\r\n    \r\n    this.lang = opts.lang;\r\n    this.dir = opts.dir;\r\n    this.options = opts;\r\n    \r\n    if (this.options.lang != 'ru_RU') {\r\n      this.options.use_ancodes_cache = false;\r\n    }\r\n    \r\n    this.morpher = new phpMorphy(this.dir, this.lang, this.options);\r\n  }\r\n\r\n  // wordConvertor (word) {\r\n  //   let encoding = null;\r\n  //\r\n  //   word = word.toUpperCase();\r\n  //   if (this.options.detectEncoding && !this.options.encoding) {\r\n  //     encoding = detectEncoding(word);\r\n  //   } else\r\n  //   if (this.options.encoding) {\r\n  //     encoding = this.options.encoding;\r\n  //   }\r\n  //\r\n  //   if (encoding) {\r\n  //     word = encoding.convert(toBuffer(word, encoding), this.morpher.getEncoding(), encoding);\r\n  //   }\r\n  //\r\n  //   return word;\r\n  // }\r\n\r\n  /**\r\n   * @param {string|Buffer} word\r\n   * @param {boolean} [asBuffer=false]\r\n   * @returns {*}\r\n   */\r\n  prepareWord (word, asBuffer = false) {\r\n    if (_.isArray(word)) {\r\n      return _.map(word, word => this.prepareWord(word));\r\n    }\r\n  \r\n    if (Buffer.isBuffer(word)) {\r\n      word = word.toString(this.morpher.getEncoding());\r\n    }\r\n  \r\n    word = word.toUpperCase();\r\n  \r\n    return (asBuffer) ? Buffer.from(word, this.morpher.getEncoding()) : word;\r\n  }\r\n\r\n  /**\r\n   * @returns {Morphy_Morphier_Interface}\r\n   */\r\n  getCommonMorphier () {\r\n    return this.morpher.getCommonMorphier();\r\n  }\r\n\r\n  /**\r\n   * @returns {Morphy_Morphier_Interface}\r\n   */\r\n  getPredictBySuffixMorphier () {\r\n    return this.morpher.getPredictBySuffixMorphier();\r\n  }\r\n\r\n  /**\r\n   * @returns {Morphy_Morphier_Interface}\r\n   */\r\n  getPredictByDatabaseMorphier () {\r\n    return this.morpher.getPredictByDatabaseMorphier();\r\n  }\r\n\r\n  /**\r\n   * @returns {Morphy_Morphier_Bulk}\r\n   */\r\n  getBulkMorphier () {\r\n    return this.morpher.getBulkMorphier();\r\n  }\r\n\r\n  /**\r\n   * @returns {string}\r\n   */\r\n  getEncoding () {\r\n    return this.morpher.getEncoding();\r\n  }\r\n\r\n  /**\r\n   * @returns {string}\r\n   */\r\n  getLocale () {\r\n    return this.morpher.getLocale();\r\n  }\r\n\r\n  /**\r\n   * @returns {Morphy_GrammemsProvider_Base}\r\n   */\r\n  getGrammemsProvider () {\r\n    return this.morpher.getGrammemsProvider();\r\n  }\r\n\r\n  /**\r\n   * @returns {Morphy_GrammemsProvider_Base}\r\n   */\r\n  getDefaultGrammemsProvider () {\r\n    return this.morpher.getDefaultGrammemsProvider();\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean}\r\n   */\r\n  isLastPredicted () {\r\n    return this.morpher.isLastPredicted();\r\n  }\r\n\r\n  /**\r\n   * @returns {string}\r\n   */\r\n  getLastPredictionType () {\r\n    return this.morpher.getLastPredictionType();\r\n  }\r\n\r\n  /**\r\n   * @param {*} word - string or array of strings\r\n   * @param {*} [type=Morphy.NORMAL] - prediction managment\r\n   * @returns {Morphy_WordDescriptor_Collection}\r\n   */\r\n  findWord (word, type = Morphy.NORMAL) {\r\n    return this.morpher.findWord(this.prepareWord(word), type);\r\n  }\r\n\r\n  /**\r\n   * Alias for getBaseForm\r\n   *\r\n   * @param {*} word - string or array of strings\r\n   * @param {*} [type=Morphy.NORMAL] - prediction managment\r\n   * @returns {[]}\r\n   */\r\n  lemmatize (word, type = Morphy.NORMAL) {\r\n    return this.morpher.lemmatize(this.prepareWord(word), type);\r\n  }\r\n\r\n  /**\r\n   * @param {*} word - string or array of strings\r\n   * @param {*} [type=Morphy.NORMAL] - prediction managment\r\n   * @returns {[]}\r\n   */\r\n  getBaseForm (word, type = Morphy.NORMAL) {\r\n    return this.morpher.getBaseForm(this.prepareWord(word), type);\r\n  }\r\n\r\n  /**\r\n   * @param {*} word - string or array of strings\r\n   * @param {*} [type=Morphy.NORMAL] - prediction managment\r\n   * @returns {[]}\r\n   */\r\n  getAllForms (word, type = Morphy.NORMAL) {\r\n    return this.morpher.getAllForms(this.prepareWord(word), type);\r\n  }\r\n\r\n  /**\r\n   * @param {*} word - string or array of strings\r\n   * @param {*} [type=Morphy.NORMAL] - prediction managment\r\n   * @returns {[]}\r\n   */\r\n  getPseudoRoot (word, type = Morphy.NORMAL) {\r\n    return this.morpher.getPseudoRoot(this.prepareWord(word), type);\r\n  }\r\n\r\n  /**\r\n   * @param {*} word - string or array of strings\r\n   * @param {*} [type=Morphy.NORMAL] - prediction managment\r\n   * @returns {[]}\r\n   */\r\n  getPartOfSpeech (word, type = Morphy.NORMAL) {\r\n    return this.morpher.getPartOfSpeech(this.prepareWord(word), type);\r\n  }\r\n\r\n  /**\r\n   * @param {*} word - string or array of strings\r\n   * @param {*} [type=Morphy.NORMAL] - prediction managment\r\n   * @returns {[]}\r\n   */\r\n  getAllFormsWithAncodes (word, type = Morphy.NORMAL) {\r\n    return this.morpher.getAllFormsWithAncodes(this.prepareWord(word), type);\r\n  }\r\n\r\n  /**\r\n   * @param {*} word - string or array of strings\r\n   * @param {boolean} [asText=true] - represent graminfo as text or ancodes\r\n   * @param {*} [type=Morphy.NORMAL] - prediction managment\r\n   * @returns {*}\r\n   */\r\n  getAllFormsWithGramInfo (word, asText = true, type = Morphy.NORMAL) {\r\n    return this.morpher.getAllFormsWithGramInfo(this.prepareWord(word), asText, type);\r\n  }\r\n\r\n  /**\r\n   * @param {*} word - string or array of strings\r\n   * @param {*} [type=Morphy.NORMAL] - prediction managment\r\n   * @returns {[]}\r\n   */\r\n  getAncode (word, type) {\r\n    return this.morpher.getAncode(this.prepareWord(word), type);\r\n  }\r\n\r\n  /**\r\n   * @param {*} word - string or array of strings\r\n   * @param {*} [type=Morphy.NORMAL] - prediction managment\r\n   * @returns {[]}\r\n   */\r\n  getGramInfo (word, type = Morphy.NORMAL) {\r\n    return this.morpher.getGramInfo(this.prepareWord(word), type);\r\n  }\r\n\r\n  /**\r\n   * @param {*} word - string or array of strings\r\n   * @param {*} [type=Morphy.NORMAL] - prediction managment\r\n   * @returns {[]}\r\n   */\r\n  getGramInfoMergeForms (word, type) {\r\n    return this.morpher.getGramInfoMergeForms(this.prepareWord(word), type);\r\n  }\r\n\r\n  /**\r\n   * @param {*} word - string or array of strings\r\n   * @param [type=Morphy.NORMAL] - prediction managment\r\n   * @returns {[]}\r\n   */\r\n  getAnnotForWord (word, type = Morphy.NORMAL) {\r\n    return this.morpher.getAnnotForWord(this.prepareWord(word), type);\r\n  }\r\n\r\n  /**\r\n   * @param {string} word\r\n   * @param {*} ancode\r\n   * @param {*} [commonAncode=null]\r\n   * @param {boolean} [returnOnlyWord]\r\n   * @param {*} [callback=null]\r\n   * @param {*} [type=Morphy]\r\n   * @returns {[]}\r\n   */\r\n  castFormByAncode (word, ancode, commonAncode = null, returnOnlyWord = false, callback = null, type = Morphy.NORMAL) {\r\n    return this.morpher.castFormByAncode(\r\n      this.prepareWord(word),\r\n      ancode,\r\n      commonAncode,\r\n      returnOnlyWord,\r\n      callback,\r\n      type\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {string|Buffer} word\r\n   * @param {*} partOfSpeech\r\n   * @param {[]} grammems\r\n   * @param {boolean} [returnOnlyWord=false]\r\n   * @param {*} [callback=null]\r\n   * @param {*} [type=Morphy.NORMAL]\r\n   * @returns {[]|boolean}\r\n   */\r\n  castFormByGramInfo (word, partOfSpeech, grammems, returnOnlyWord = false, callback = null, type = Morphy.NORMAL) {\r\n    return this.morpher.castFormByGramInfo(\r\n      this.prepareWord(word),\r\n      partOfSpeech,\r\n      grammems,\r\n      returnOnlyWord,\r\n      callback,\r\n      type\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {string} word\r\n   * @param {string} patternWord\r\n   * @param {Morphy_GrammemsProvider_Interface} [grammemsProvider=null]\r\n   * @param {boolean} [returnOnlyWord=false]\r\n   * @param {*} [callback=false]\r\n   * @param {*} [type=Morphy.NORMAL]\r\n   * @returns {[]|boolean}\r\n   */\r\n  castFormByPattern (word, patternWord, grammemsProvider = null, returnOnlyWord = false, callback = null, type = Morphy.NORMAL) {\r\n    return this.morpher.castFormByPattern(\r\n      this.prepareWord(word),\r\n      this.prepareWord(patternWord),\r\n      grammemsProvider,\r\n      returnOnlyWord,\r\n      callback,\r\n      type\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Morphy;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/**\r\n * This file is part of phpMorphy library\r\n *\r\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\r\n *\r\n * This library is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 2 of the License, or (at your option) any later version.\r\n *\r\n * This library is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public\r\n * License along with this library; if not, write to the\r\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\r\n * Boston, MA 02111-1307, USA.\r\n */\r\n\r\nimport _ from 'lodash';\r\nimport path from 'path';\r\nimport { php, toBuffer } from '../utils';\r\nimport { Morphy_Fsa } from './fsa/fsa';\r\nimport { Morphy_Source_Fsa } from './source';\r\nimport { Morphy_GramTab_Proxy } from './gramtab';\r\nimport { Morphy_Storage_Factory } from './storage';\r\nimport {\r\n  Morphy_GrammemsProvider_Factory,\r\n  Morphy_GrammemsProvider_Interface\r\n} from './langs_stuff/common';\r\nimport {\r\n  Morphy_GramInfo_RuntimeCaching,\r\n  Morphy_GramInfo_Proxy_WithHeader,\r\n  Morphy_GramInfo_AncodeCache\r\n} from './graminfo/graminfo';\r\nimport {\r\n  Morphy_AncodesResolver_Proxy,\r\n  Morphy_Morphier_Helper,\r\n  Morphy_Morphier_Common,\r\n  Morphy_Morphier_Bulk,\r\n  Morphy_Morphier_Predict_Database,\r\n  Morphy_Morphier_Empty,\r\n  Morphy_Morphier_Predict_Suffix\r\n} from './morphiers';\r\nimport {\r\n  STORAGE_FILE,\r\n  STORAGE_MEM,\r\n  SOURCE_FSA,\r\n  RESOLVE_ANCODES_AS_TEXT,\r\n  RESOLVE_ANCODES_AS_DIALING,\r\n  RESOLVE_ANCODES_AS_INT,\r\n  NORMAL,\r\n  IGNORE_PREDICT,\r\n  ONLY_PREDICT,\r\n  PREDICT_BY_NONE,\r\n  PREDICT_BY_SUFFIX,\r\n  PREDICT_BY_DB\r\n} from './constants';\r\n\r\nclass Morphy_FilesBundle {\r\n\r\n  constructor (dirName, lang) {\r\n    this.dir = dirName;\r\n    this.setLang(lang);\r\n  }\r\n\r\n  getLang () {\r\n    return this.lang;\r\n  }\r\n\r\n  setLang (lang) {\r\n    this.lang = lang.toLowerCase();\r\n  }\r\n\r\n  getCommonAutomatFile () {\r\n    return this.genFileName('common_aut');\r\n  }\r\n\r\n  getPredictAutomatFile () {\r\n    return this.genFileName('predict_aut');\r\n  }\r\n\r\n  getGramInfoFile () {\r\n    return this.genFileName('morph_data');\r\n  }\r\n\r\n  getGramInfoAncodesCacheFile () {\r\n    return this.genFileName('morph_data_ancodes_cache');\r\n  }\r\n\r\n  getAncodesMapFile () {\r\n    return this.genFileName('morph_data_ancodes_map');\r\n  }\r\n\r\n  getGramTabFile () {\r\n    return this.genFileName('gramtab');\r\n  }\r\n\r\n  getGramTabFileWithTextIds () {\r\n    return this.genFileName('gramtab_txt');\r\n  }\r\n\r\n  getGramInfoHeaderCacheFile () {\r\n    return this.genFileName('morph_data_header_cache');\r\n  }\r\n\r\n  genFileName (token, extraExt) {\r\n    extraExt = (!_.isUndefined(extraExt)) ? extraExt : null;\r\n    \r\n    return path.join(this.dir, [\r\n      token,\r\n      '.',\r\n      this.lang,\r\n      (php.isset(extraExt) ? '.' + extraExt : ''),\r\n      '.bin'\r\n    ].join(''));\r\n  }\r\n\r\n}\r\n\r\nclass Morphy_WordDescriptor_Collection_Serializer {\r\n\r\n  /**\r\n   * @param {Morphy_WordDescriptor_Collection} collection\r\n   * @param {boolean} [asText=false]\r\n   * @returns {*}\r\n   */\r\n  serialize (collection, asText = false) {\r\n    const result = [];\r\n    _.forEach(collection, descriptor => result.push(this.processWordDescriptor(descriptor, asText)));\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @param {Morphy_WordDescriptor} descriptor\r\n   * @param {boolean} [asText=false]\r\n   * @returns {{forms: *, all: *, common: string}}\r\n   */\r\n  processWordDescriptor (descriptor, asText = false) {\r\n    const all = [];\r\n    const forms = [];\r\n\r\n    _.forEach(descriptor, word_form => {\r\n      forms.push(word_form.getWord());\r\n      all.push(this.serializeGramInfo(word_form, asText));\r\n    });\r\n\r\n    return {\r\n      all,\r\n      forms,\r\n      common: ''\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @param {Morphy_WordForm} wordForm\r\n   * @param {boolean} [asText=false]\r\n   * @returns {*}\r\n   */\r\n  serializeGramInfo (wordForm, asText = false) {\r\n    if (asText) {\r\n      return wordForm.getPartOfSpeech() + ' ' + php.implode(',', wordForm.getGrammems());\r\n    }\r\n\r\n    return {\r\n      pos: wordForm.getPartOfSpeech(),\r\n      grammems: wordForm.getGrammems()\r\n    };\r\n  }\r\n\r\n}\r\n\r\nclass phpMorphy {\r\n  \r\n  constructor (dir, lang = null, options = {}) {\r\n    this.options = this.repairOptions(options);\r\n    this.init(this.createFilesBundle(dir, lang), this.options);\r\n    this.last_prediction_type = PREDICT_BY_NONE;\r\n  }\r\n\r\n  /**\r\n   * @param {Morphy_FilesBundle} bundle\r\n   * @param options\r\n   */\r\n  init (bundle, options) {\r\n    this.options = this.repairOptions(options);\r\n    this.storage_factory = this.createStorageFactory();\r\n    this.common_fsa = this.createFsa(\r\n      this.storage_factory.open(this.options['storage'], bundle.getCommonAutomatFile(), false),\r\n      false\r\n    );\r\n    this.predict_fsa = this.createFsa(\r\n      this.storage_factory.open(this.options['storage'], bundle.getPredictAutomatFile(), true),\r\n      true\r\n    );\r\n\r\n    const graminfo = this.createGramInfo(this.storage_factory.open(this.options['storage'], bundle.getGramInfoFile(), true), bundle);\r\n    const gramtab = this.createGramTab(this.storage_factory.open(\r\n      this.options['storage'],\r\n      (this.options['graminfo_as_text'] ? bundle.getGramTabFileWithTextIds() : bundle.getGramTabFile()),\r\n      true\r\n    ));\r\n    this.helper = this.createMorphierHelper(graminfo, gramtab, this.options['graminfo_as_text'], bundle);\r\n  }\r\n\r\n  /**\r\n   * @return {Morphy_Morphier_Interface}\r\n   */\r\n  getCommonMorphier () {\r\n    return this.__common_morphier;\r\n  }\r\n\r\n  /**\r\n   * @return {Morphy_Morphier_Interface}\r\n   */\r\n  getPredictBySuffixMorphier () {\r\n    return this.__predict_by_suf_morphier;\r\n  }\r\n\r\n  /**\r\n   * @return {Morphy_Morphier_Interface}\r\n   */\r\n  getPredictByDatabaseMorphier () {\r\n    return this.__predict_by_db_morphier;\r\n  }\r\n\r\n  /**\r\n   * @return {Morphy_Morphier_Bulk}\r\n   */\r\n  getBulkMorphier () {\r\n    return this.__bulk_morphier;\r\n  }\r\n\r\n  /**\r\n   * @return {string}\r\n   */\r\n  getEncoding () {\r\n    return this.helper.getGramInfo().getEncoding();\r\n  }\r\n\r\n  /**\r\n   * @return {string}\r\n   */\r\n  getLocale () {\r\n    return this.helper.getGramInfo().getLocale();\r\n  }\r\n\r\n  /**\r\n   * @return {Morphy_GrammemsProvider_Base}\r\n   */\r\n  getGrammemsProvider () {\r\n    return _.cloneDeep(this.__grammems_provider);\r\n  }\r\n\r\n  /**\r\n   * @return {Morphy_GrammemsProvider_Base}\r\n   */\r\n  getDefaultGrammemsProvider () {\r\n    return this.__grammems_provider;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean}\r\n   */\r\n  isLastPredicted () {\r\n    return this.last_prediction_type !== PREDICT_BY_NONE;\r\n  }\r\n\r\n  /**\r\n   * @returns {string}\r\n   */\r\n  getLastPredictionType () {\r\n    return this.last_prediction_type;\r\n  }\r\n\r\n  /**\r\n   * @param {*} word - string or array of strings\r\n   * @param {*} [type=NORMAL] - prediction managment\r\n   * @return {Morphy_WordDescriptor_Collection|{}}\r\n   */\r\n  findWord (word, type = NORMAL) {\r\n    const result = {};\r\n\r\n    if (php.is_array(word)) {\r\n      word.forEach(w => result[w] = this.invoke('getWordDescriptor', toBuffer(w), type));\r\n      return result;\r\n    }\r\n\r\n    return this.invoke('getWordDescriptor', word, type);\r\n  }\r\n\r\n  /**\r\n   * Alias for getBaseForm\r\n   *\r\n   * @param {*} word - string or array of strings\r\n   * @param {*} [type=NORMAL] - prediction managment\r\n   * @return {[]}\r\n   */\r\n  lemmatize (word, type = NORMAL) {\r\n    word = toBuffer(word);\r\n\r\n    return this.getBaseForm(word, type);\r\n  }\r\n\r\n  /**\r\n   * @param {*} word - string or array of strings\r\n   * @param {*} [type=NORMAL] - prediction managment\r\n   * @return {[]}\r\n   */\r\n  getBaseForm (word, type = NORMAL) {\r\n    word = toBuffer(word);\r\n\r\n    return this.invoke('getBaseForm', word, type);\r\n  }\r\n\r\n  /**\r\n   * @param {*} word - string or array of strings\r\n   * @param {*} [type=NORMAL] - prediction managment\r\n   * @return {[]}\r\n   */\r\n  getAllForms (word, type = NORMAL) {\r\n    word = toBuffer(word);\r\n\r\n    return this.invoke('getAllForms', word, type);\r\n  }\r\n\r\n  /**\r\n   * @param {*} word - string or array of strings\r\n   * @param {*} [type=NORMAL] - prediction managment\r\n   * @return {[]}\r\n   */\r\n  getPseudoRoot (word, type = NORMAL) {\r\n    word = toBuffer(word);\r\n    \r\n    return this.invoke('getPseudoRoot', word, type);\r\n  }\r\n\r\n  /**\r\n   * @param {*} word - string or array of strings\r\n   * @param {*} [type=NORMAL] - prediction managment\r\n   * @return {[]}\r\n   */\r\n  getPartOfSpeech (word, type = NORMAL) {\r\n    word = toBuffer(word);\r\n\r\n    return this.invoke('getPartOfSpeech', word, type);\r\n  }\r\n\r\n  /**\r\n   * @param {*} word - string or array of strings\r\n   * @param {*} [type=NORMAL] - prediction managment\r\n   * @return {[]}\r\n   */\r\n  getAllFormsWithAncodes (word, type = NORMAL) {\r\n    word = toBuffer(word);\r\n\r\n    return this.invoke('getAllFormsWithAncodes', word, type);\r\n  }\r\n\r\n  /**\r\n   * @param {*} word - string or array of strings\r\n   * @param {boolean} [asText=true] - represent graminfo as text or ancodes\r\n   * @param {*} [type=NORMAL] - prediction managment\r\n   * @return {*}\r\n   */\r\n  getAllFormsWithGramInfo (word, asText = true, type = NORMAL) {\r\n    word = toBuffer(word);\r\n\r\n    const result = this.findWord(word, type);\r\n\r\n    if (!result) {\r\n      return false;\r\n    }\r\n\r\n    if (php.is_array(word)) {\r\n      const out = {};\r\n      _.forEach(result, (r, w) => {\r\n        if (false !== r) {\r\n          out[w] = this.processWordsCollection(r, asText);\r\n        } else {\r\n          out[w] = false;\r\n        }\r\n      });\r\n\r\n      return out;\r\n    }\r\n  \r\n    return this.processWordsCollection(result, asText);\r\n  }\r\n\r\n  /**\r\n   * @param {*} word - string or array of strings\r\n   * @param {*} [type=NORMAL] - prediction managment\r\n   * @return {[]}\r\n   */\r\n  getAncode (word, type = NORMAL) {\r\n    word = toBuffer(word);\r\n\r\n    return this.invoke('getAncode', word, type);\r\n  }\r\n\r\n  /**\r\n   * @param {*} word - string or array of strings\r\n   * @param {*} [type=NORMAL] - prediction managment\r\n   * @return {[]}\r\n   */\r\n  getGramInfo (word, type = NORMAL) {\r\n    word = toBuffer(word);\r\n\r\n    return this.invoke('getGrammarInfo', word, type);\r\n  }\r\n\r\n  /**\r\n   * @param {*} word - string or array of strings\r\n   * @param {*} [type=NORMAL] - prediction managment\r\n   * @return {[]}\r\n   */\r\n  getGramInfoMergeForms (word, type = NORMAL) {\r\n    word = toBuffer(word);\r\n\r\n    return this.invoke('getGrammarInfoMergeForms', word, type);\r\n  }\r\n\r\n  /**\r\n   * @param {*} word - string or array of strings\r\n   * @param [type=NORMAL] - prediction managment\r\n   * @returns {[]}\r\n   */\r\n  getAnnotForWord (word, type = NORMAL) {\r\n    word = toBuffer(word);\r\n\r\n    return this.invoke('getAnnot', word, type);\r\n  }\r\n\r\n  /**\r\n   * @param {string} word\r\n   * @param {*} ancode\r\n   * @param {*} [commonAncode=null]\r\n   * @param {boolean} [returnOnlyWord=false]\r\n   * @param {*} [callback=null]\r\n   * @param {*} [type=NORMAL]\r\n   * @return {[]}\r\n   */\r\n  castFormByAncode (word, ancode, commonAncode = null, returnOnlyWord = false, callback = null, type = NORMAL) {\r\n    word = toBuffer(word);\r\n\r\n    const resolver = this.helper.getAncodesResolver();\r\n    const common_ancode_id = resolver.unresolve(commonAncode);\r\n    const ancode_id = resolver.unresolve(ancode);\r\n    const data = this.helper.getGrammemsAndPartOfSpeech(ancode_id);\r\n\r\n    if (php.isset(common_ancode_id)) {\r\n      data[1] = php.array_merge(data[1], this.helper.getGrammems(common_ancode_id));\r\n    }\r\n\r\n    return this.castFormByGramInfo(\r\n      word,\r\n      data[0],\r\n      data[1],\r\n      returnOnlyWord,\r\n      callback,\r\n      type\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {string} word\r\n   * @param {*} partOfSpeech\r\n   * @param {[]} grammems\r\n   * @param {boolean} [returnOnlyWord=false]\r\n   * @param {*} [callback=null]\r\n   * @param {*} [type=NORMAL]\r\n   * @return {[]|boolean}\r\n   */\r\n  castFormByGramInfo (word, partOfSpeech, grammems, returnOnlyWord = false, callback = null, type = NORMAL) {\r\n    word = toBuffer(word);\r\n\r\n    const annot = this.getAnnotForWord(word, type);\r\n    if (!annot) {\r\n      return false;\r\n    }\r\n\r\n    return this.helper.castFormByGramInfo(word, annot, partOfSpeech, grammems, returnOnlyWord, callback);\r\n  }\r\n\r\n  /**\r\n   * @param {string} word\r\n   * @param {string} patternWord\r\n   * @param {Morphy_GrammemsProvider_Interface} [grammemsProvider=null]\r\n   * @param {boolean} [returnOnlyWord=false]\r\n   * @param {*} [callback=false]\r\n   * @param {*} [type=NORMAL]\r\n   * @return {[]|boolean}\r\n   */\r\n  castFormByPattern (word, patternWord, grammemsProvider = null, returnOnlyWord = false, callback = null, type = NORMAL) {\r\n    word = toBuffer(word);\r\n    patternWord = toBuffer(patternWord);\r\n\r\n    const word_annot = this.getAnnotForWord(word, type);\r\n    if (!word_annot) {\r\n      return false;\r\n    }\r\n    \r\n    if (!(grammemsProvider instanceof Morphy_GrammemsProvider_Interface)) {\r\n      grammemsProvider = this.__grammems_provider;\r\n    }\r\n    \r\n    let result = [];\r\n    _.forEach(this.getGramInfo(patternWord, type), paradigm => {\r\n      _.forEach(paradigm, grammar => {\r\n        const pos = grammar['pos'];\r\n        const essential_grammems = grammemsProvider.getGrammems(pos);\r\n  \r\n        const grammems = (essential_grammems !== false)\r\n          ? php.array_intersect(grammar['grammems'], essential_grammems)\r\n          : grammar['grammems']\r\n        ;\r\n        \r\n        const res = this.helper.castFormByGramInfo(\r\n          word,\r\n          word_annot,\r\n          pos,\r\n          grammems,\r\n          returnOnlyWord,\r\n          callback,\r\n          type\r\n        );\r\n\r\n        if (res.length) {\r\n          result = php.array_merge(result, res);\r\n        }\r\n      });\r\n    });\r\n\r\n    return returnOnlyWord ? _.uniq(result) : result;\r\n  }\r\n\r\n  /**\r\n   * @param {Morphy_WordDescriptor_Collection} collection\r\n   * @param {boolean} asText\r\n   * @returns {*}\r\n   */\r\n  processWordsCollection (collection, asText) {\r\n    return this.__word_descriptor_serializer.serialize(collection, asText);\r\n  }\r\n\r\n  invoke (method, word, type) {\r\n    this.last_prediction_type = PREDICT_BY_NONE;\r\n    word = toBuffer(word);\r\n    \r\n    let result;\r\n    let not_found;\r\n\r\n    if (type === ONLY_PREDICT) {\r\n      if (php.is_array(word)) {\r\n        result = {};\r\n        _.forEach(word, w => result[w] = this.predictWord(method, w));\r\n\r\n        return result;\r\n      } else {\r\n        return this.predictWord(method, word);\r\n      }\r\n    }\r\n\r\n    if (php.is_array(word)) {\r\n      result = this.__bulk_morphier[method](word);\r\n      not_found = this.__bulk_morphier.getNotFoundWords();\r\n\r\n      _.forEach(not_found, word => {\r\n        result[word] = (type !== IGNORE_PREDICT)\r\n          ? this.predictWord(method, word)\r\n          : false\r\n        ;\r\n      });\r\n    } else {\r\n      result = this.__common_morphier[method](word);\r\n  \r\n      if (!result && type !== IGNORE_PREDICT) {\r\n        result = this.predictWord(method, word);\r\n      }\r\n    }\r\n    \r\n    return result;\r\n  }\r\n\r\n  predictWord (method, word) {\r\n    word = toBuffer(word);\r\n\r\n    let result = this.__predict_by_suf_morphier[method](word);\r\n    if (result !== false) {\r\n      this.last_prediction_type = PREDICT_BY_SUFFIX;\r\n      return result;\r\n    }\r\n\r\n    result = this.__predict_by_db_morphier[method](word);\r\n    if (result !== false) {\r\n      this.last_prediction_type = PREDICT_BY_DB;\r\n      return result;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @param {Morphy_FilesBundle} bundle\r\n   * @param {{}} opts\r\n   * @returns {*}\r\n   */\r\n  createCommonSource (bundle, opts) {\r\n    const type = opts['type'];\r\n\r\n    switch (type) {\r\n      case SOURCE_FSA:\r\n        return new Morphy_Source_Fsa(this.common_fsa);\r\n      default:\r\n        throw new Error(`Unknown source type given '${ type }'`);\r\n    }\r\n  }\r\n\r\n  repairOldOptions (options = {}) {\r\n    const defaults = {\r\n      predict_by_suffix: false,\r\n      predict_by_db:     false\r\n    };\r\n\r\n    return Object.assign(defaults, options);\r\n  }\r\n\r\n  repairSourceOptions (options = {}) {\r\n    const defaults = {\r\n      type: SOURCE_FSA,\r\n      opts: null\r\n    };\r\n\r\n    return Object.assign(defaults, options);\r\n  }\r\n\r\n  repairOptions (options = {}) {\r\n    const defaults = {\r\n      graminfo_as_text:  true,\r\n      storage:           STORAGE_MEM,\r\n      common_source:     this.repairSourceOptions(options.common_source || null),\r\n      predict_by_suffix: true,\r\n      predict_by_db:     true,\r\n      use_ancodes_cache: false,\r\n      resolve_ancodes:   RESOLVE_ANCODES_AS_TEXT\r\n    };\r\n\r\n    return Object.assign(defaults, options);\r\n  }\r\n\r\n  get __predict_by_db_morphier () {\r\n    if (!this.___predict_by_db_morphier) {\r\n      this.___predict_by_db_morphier = this.createPredictByDbMorphier(this.predict_fsa, this.helper);\r\n    }\r\n\r\n    return this.___predict_by_db_morphier;\r\n  }\r\n  set __predict_by_db_morphier (value) {\r\n    this.___predict_by_db_morphier = (!_.isUndefined(value)) ? value : null;\r\n  }\r\n\r\n  get __predict_by_suf_morphier () {\r\n    if (!this.___predict_by_suf_morphier) {\r\n      this.___predict_by_suf_morphier = this.createPredictBySuffixMorphier(this.common_fsa, this.helper);\r\n    }\r\n\r\n    return this.___predict_by_suf_morphier;\r\n  }\r\n  set __predict_by_suf_morphier (value) {\r\n    this.___predict_by_suf_morphier = (!_.isUndefined(value)) ? value : null;\r\n  }\r\n\r\n  get __bulk_morphier () {\r\n    if (!this.___bulk_morphier) {\r\n      this.___bulk_morphier = this.createBulkMorphier(this.common_fsa, this.helper);\r\n    }\r\n\r\n    return this.___bulk_morphier;\r\n  }\r\n  set __bulk_morphier (value) {\r\n    this.___bulk_morphier = (!_.isUndefined(value)) ? value : null;\r\n  }\r\n\r\n  get __common_morphier () {\r\n    if (!this.___common_morphier) {\r\n      this.___common_morphier = this.createCommonMorphier(this.common_fsa, this.helper);\r\n    }\r\n\r\n    return this.___common_morphier;\r\n  }\r\n  set __common_morphier (value) {\r\n    this.___common_morphier = (!_.isUndefined(value)) ? value : null;\r\n  }\r\n\r\n  get __word_descriptor_serializer () {\r\n    if (!this.___word_descriptor_serializer) {\r\n      this.___word_descriptor_serializer = this.createWordDescriptorSerializer();\r\n    }\r\n\r\n    return this.___word_descriptor_serializer;\r\n  }\r\n  set __word_descriptor_serializer (value) {\r\n    this.___word_descriptor_serializer = (!_.isUndefined(value)) ? value : null;\r\n  }\r\n\r\n  get __grammems_provider () {\r\n    if (!this.___grammems_provider) {\r\n      this.___grammems_provider = this.createGrammemsProvider();\r\n    }\r\n\r\n    return this.___grammems_provider;\r\n  }\r\n  set __grammems_provider (value) {\r\n    this.___grammems_provider = (!_.isUndefined(value)) ? value : null;\r\n  }\r\n\r\n  ////////////////////\r\n  // factory methods\r\n  ////////////////////\r\n  createGrammemsProvider () {\r\n    return Morphy_GrammemsProvider_Factory.create(this);\r\n  }\r\n\r\n  createWordDescriptorSerializer () {\r\n    return new Morphy_WordDescriptor_Collection_Serializer();\r\n  }\r\n\r\n  createFilesBundle (dir, lang) {\r\n    return new Morphy_FilesBundle(dir, lang);\r\n  }\r\n\r\n  createStorageFactory () {\r\n    return new Morphy_Storage_Factory();\r\n  }\r\n\r\n  /**\r\n   * @param {Morphy_Storage} storage\r\n   * @param {boolean} lazy\r\n   * @returns {*}\r\n   */\r\n  createFsa (storage, lazy) {\r\n    return Morphy_Fsa.create(storage, lazy);\r\n  }\r\n\r\n  /**\r\n   * @param {Morphy_Storage} graminfoFile\r\n   * @param {Morphy_FilesBundle} bundle\r\n   */\r\n  createGramInfo (graminfoFile, bundle) {\r\n    const result = new Morphy_GramInfo_RuntimeCaching(\r\n      new Morphy_GramInfo_Proxy_WithHeader(\r\n        graminfoFile,\r\n        bundle.getGramInfoHeaderCacheFile()\r\n      )\r\n    );\r\n\r\n    if (this.options['use_ancodes_cache']) {\r\n      return new Morphy_GramInfo_AncodeCache(\r\n        result,\r\n        this.storage_factory.open(this.options['storage'], bundle.getGramInfoAncodesCacheFile(), true)\r\n      );\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @param {Morphy_Storage} storage\r\n   * @returns {Morphy_GramTab_Proxy}\r\n   */\r\n  createGramTab (storage) {\r\n    return new Morphy_GramTab_Proxy(storage);\r\n  }\r\n\r\n  /**\r\n   * @param {Morphy_GramTab_Interface} gramtab\r\n   * @param {Morphy_FilesBundle} bundle\r\n   */\r\n  createAncodesResolverInternal (gramtab, bundle) {\r\n    switch (this.options['resolve_ancodes']) {\r\n      case RESOLVE_ANCODES_AS_TEXT:\r\n        return ['Morphy_AncodesResolver_ToText', [gramtab]];\r\n      case RESOLVE_ANCODES_AS_INT:\r\n        return ['Morphy_AncodesResolver_AsIs', []];\r\n      case RESOLVE_ANCODES_AS_DIALING:\r\n        return ['Morphy_AncodesResolver_ToDialingAncodes', [\r\n          this.storage_factory.open(\r\n            this.options['storage'],\r\n            bundle.getAncodesMapFile(),\r\n            true\r\n          )\r\n        ]];\r\n      default:\r\n        throw new Error('Invalid resolve_ancodes option, valid values are RESOLVE_ANCODES_AS_DIALING, RESOLVE_ANCODES_AS_INT, RESOLVE_ANCODES_AS_TEXT');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Morphy_GramTab_Interface} gramtab\r\n   * @param {Morphy_FilesBundle} bundle\r\n   * @param {boolean} lazy\r\n   */\r\n  createAncodesResolver (gramtab, bundle, lazy) {\r\n    const [className, args] = this.createAncodesResolverInternal(gramtab, bundle);\r\n        \r\n    if (!!lazy) {\r\n      return new Morphy_AncodesResolver_Proxy(className, args);\r\n    }\r\n\r\n    return Morphy_AncodesResolver_Proxy.instantinate(className, args);\r\n  }\r\n\r\n  /**\r\n   * @param {Morphy_GramInfo_Interface} graminfo\r\n   * @param {Morphy_GramTab_Interface} gramtab\r\n   * @param {boolean} graminfoAsText\r\n   * @param {Morphy_FilesBundle} bundle\r\n   */\r\n  createMorphierHelper (graminfo, gramtab, graminfoAsText, bundle) {\r\n\r\n    return new Morphy_Morphier_Helper(\r\n      graminfo,\r\n      gramtab,\r\n      this.createAncodesResolver(gramtab, bundle, true),\r\n      graminfoAsText\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {Morphy_Fsa_Interface} fsa\r\n   * @param {Morphy_Morphier_Helper} helper\r\n   */\r\n  createCommonMorphier (fsa, helper) {\r\n    return new Morphy_Morphier_Common(fsa, helper);\r\n  }\r\n\r\n  /**\r\n   * @param {Morphy_Fsa_Interface} fsa\r\n   * @param {Morphy_Morphier_Helper} helper\r\n   */\r\n  createBulkMorphier (fsa, helper) {\r\n    return new Morphy_Morphier_Bulk(fsa, helper);\r\n  }\r\n\r\n  /**\r\n   * @param {Morphy_Fsa_Interface} fsa\r\n   * @param {Morphy_Morphier_Helper} helper\r\n   */\r\n  createPredictByDbMorphier (fsa, helper) {\r\n    if (this.options['predict_by_db']) {\r\n      return new Morphy_Morphier_Predict_Database(fsa, helper);\r\n    }\r\n\r\n    return new Morphy_Morphier_Empty();\r\n  }\r\n\r\n  /**\r\n   * @param {Morphy_Fsa_Interface} fsa\r\n   * @param {Morphy_Morphier_Helper} helper\r\n   */\r\n  createPredictBySuffixMorphier (fsa, helper) {\r\n    if (this.options['predict_by_suffix']) {\r\n      return new Morphy_Morphier_Predict_Suffix(fsa, helper);\r\n    }\r\n\r\n    return new Morphy_Morphier_Empty();\r\n  }\r\n\r\n}\r\n\r\nexport default phpMorphy;\r\nexport {\r\n  STORAGE_FILE,\r\n  STORAGE_MEM,\r\n  SOURCE_FSA,\r\n  RESOLVE_ANCODES_AS_TEXT,\r\n  RESOLVE_ANCODES_AS_DIALING,\r\n  RESOLVE_ANCODES_AS_INT,\r\n  NORMAL,\r\n  IGNORE_PREDICT,\r\n  ONLY_PREDICT,\r\n  PREDICT_BY_NONE,\r\n  PREDICT_BY_SUFFIX,\r\n  PREDICT_BY_DB\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/common.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\n\nclass Morphy_Link_Base {\n\n  /**\n   * @param {Morphy_Fsa_Interface} fsa\n   * @param trans\n   * @param rawTrans\n   */\n  constructor (fsa, trans, rawTrans) {\n    this.fsa       = fsa;\n    this.trans     = trans;\n    this.raw_trans = rawTrans;\n  }\n\n  isAnnotation () {}\n\n  getTrans () {\n    return this.trans;\n  }\n\n  getFsa () {\n    return this.fsa;\n  }\n\n  getRawTrans () {\n    return this.raw_trans;\n  }\n\n}\n\n/**\n * This class represent \"normal\" link i.e. link that points to automat state\n */\nclass Morphy_Link extends Morphy_Link_Base {\n\n  constructor (...args) {\n    super(...args);\n  }\n\n  isAnnotation () {\n    return false;\n  }\n\n  getDest () {\n    return this.trans['dest'];\n  }\n\n  getAttr () {\n    return this.trans['attr'];\n  }\n\n  getTargetState () {\n    return this.createState(this.trans['dest']);\n  }\n  \n  createState (index) {\n    return new Morphy_State(this.fsa, index);\n  }\n\n}\n\nclass Morphy_Link_Annot extends Morphy_Link_Base {\n\n  constructor (...args) {\n    super(...args);\n  }\n\n  isAnnotation () {\n    return true;\n  }\n\n  getAnnotation () {\n    return this.fsa.getAnnot(this.raw_trans);\n  }\n\n}\n\nclass Morphy_State {\n\n  /**\n   * @param {Morphy_Fsa_Interface} fsa\n   * @param index\n   */\n  constructor (fsa, index) {\n    this.fsa         = fsa;\n    this.raw_transes = fsa.readState(index);\n    this.transes     = fsa.unpackTranses(this.raw_transes);\n  }\n\n  getLinks () {\n    let trans;\n    const result = [];\n\n    for (let i = 0, c = this.transes.length; i < c; i++) {\n      trans = this.transes[i];\n\n      if (!trans['term']) {\n        result.push(this.createNormalLink(trans, this.raw_transes[i]));\n      } else {\n        result.push(this.createAnnotLink(trans, this.raw_transes[i]));\n      }\n    }\n\n    return result;\n  }\n\n  getSize () {\n    return _.size(this.transes);\n  }\n\n  createNormalLink (trans, raw) {\n    return new Morphy_Link(this.fsa, trans, raw);\n  }\n\n  createAnnotLink (trans, raw) {\n    return new Morphy_Link_Annot(this.fsa, trans, raw);\n  }\n\n}\n\nexport {\n  Morphy_Link_Base,\n  Morphy_Link,\n  Morphy_Link_Annot,\n  Morphy_State\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/fsa/fsa_state.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\nimport { php } from '../utils';\n\nclass Morphy_GramTab_Interface  {\n\n  getGrammems (ancodeId) {}\n\n  getPartOfSpeech (ancodeId) {}\n\n  resolveGrammemIds (ids) {}\n\n  resolvePartOfSpeechId (id) {}\n\n  includeConsts () {}\n  \n  /**\n   * @param ancodeId\n   * @param {*} [commonAncode=null]\n   */\n  ancodeToString (ancodeId, commonAncode = null) {}\n\n  stringToAncode (string) {}\n\n  toString (partOfSpeechId, grammemIds) {}\n\n}\n\nclass Morphy_GramTab_Empty extends Morphy_GramTab_Interface {\n\n  getGrammems (ancodeId) {\n    return [];\n  }\n\n  getPartOfSpeech (ancodeId) {\n    return 0;\n  }\n\n  resolveGrammemIds (ids) {\n    return php.is_array(ids) ? {} : '';\n  }\n\n  resolvePartOfSpeechId (id) {\n    return '';\n  }\n\n  includeConsts () {}\n\n  ancodeToString (ancodeId, commonAncode) {\n    return '';\n  }\n\n  stringToAncode (string) {\n    return null;\n  }\n\n  toString (partOfSpeechId, grammemIds) {\n    return '';\n  }\n\n}\n\nclass Morphy_GramTab_Proxy extends Morphy_GramTab_Interface {\n\n  /**\n   * @param {Morphy_Storage} storage\n   */\n  constructor (storage) {\n    super();\n    this.storage = storage;\n    this.___obj  = null;\n  }\n\n  getGrammems (...args) {\n    return this.__obj.getGrammems(...args);\n  }\n\n  getPartOfSpeech (...args) {\n    return this.__obj.getPartOfSpeech(...args);\n  }\n\n  resolveGrammemIds (...args) {\n    return this.__obj.resolveGrammemIds(...args);\n  }\n\n  resolvePartOfSpeechId (...args) {\n    return this.__obj.resolvePartOfSpeechId(...args);\n  }\n\n  includeConsts (...args) {\n    return this.__obj.includeConsts(...args);\n  }\n\n  ancodeToString (...args) {\n    return this.__obj.ancodeToString(...args);\n  }\n\n  stringToAncode (...args) {\n    return this.__obj.stringToAncode(...args);\n  }\n\n  toString (...args) {\n    return this.__obj.toString(...args);\n  }\n\n  get __obj () {\n    if (!this.___obj) {\n      this.___obj = Morphy_GramTab.create(this.storage);\n      delete this.storage;\n    }\n\n    return this.___obj;\n  }\n  \n  set __obj (value) {\n    this.___obj = (!_.isUndefined(value)) ? value : null;\n  }\n\n}\n\nclass Morphy_GramTab extends Morphy_GramTab_Interface {\n\n  /**\n   * @param {Morphy_Storage} $storage\n   * @returns {Morphy_GramTab}\n   */\n  static create ($storage) {\n    return new Morphy_GramTab($storage);\n  }\n\n  /**\n   * @param {Morphy_Storage} storage\n   */\n  constructor (storage) {\n    super();\n    \n    this.data = php.unserialize(storage.read(0, storage.getFileSize()).toString());\n    if (this.data == false) {\n      throw new Error('Broken gramtab data');\n    }\n\n    this.grammems       = this.data['grammems'];\n    this.poses          = this.data['poses'];\n    this.ancodes        = this.data['ancodes'];\n    this.___ancodes_map = null;\n  }\n\n  getGrammems (ancodeId) {\n    if (!php.isset(this.ancodes[ancodeId])) {\n      throw new Error(`Invalid ancode id '${ ancodeId }'`);\n    }\n    \n    return this.ancodes[ancodeId]['grammem_ids'];\n  }\n\n  getPartOfSpeech (ancodeId) {\n    if (!php.isset(this.ancodes[ancodeId])) {\n      throw new Error(`Invalid ancode id '${ ancodeId} '`);\n    }\n    \n    return this.ancodes[ancodeId].pos_id;\n  }\n\n  resolveGrammemIds (ids) {\n    if (php.is_array(ids)) {\n      const result = [];\n\n      _.forEach(ids, id => {\n        if (!php.isset(this.grammems[id])) {\n          throw new Error(`Invalid grammem id '${ id }'`);\n        }\n\n        result.push(this.grammems[id]['name']);\n      });\n\n      return result;\n    }\n\n    if (!php.isset(this.grammems[ids])) {\n      throw new Error(`Invalid grammem id '${ ids }'`);\n    }\n\n    return this.grammems[ids]['name'];\n  }\n\n  resolvePartOfSpeechId (id) {\n    if (!php.isset(this.poses[id])) {\n      throw new Error(`Invalid part of speech id '${ id }'`);\n    }\n\n    return this.poses[id]['name'];\n  }\n\n  includeConsts () {\n    /** todo: вот те самые константы */\n    return require('./gramtab_consts');\n  }\n\n  ancodeToString (ancodeId, commonAncode) {\n    commonAncode = (!_.isUndefined(commonAncode)) ? commonAncode : null;\n\n    if (php.isset(commonAncode)) {\n      commonAncode = this.getGrammems(commonAncode).join(',') + ',';\n    }\n\n    return [\n      this.getPartOfSpeech(ancodeId),\n      ' ',\n      (commonAncode ? commonAncode : ''),\n      this.getGrammems(ancodeId).join(',')\n    ].join('');\n  }\n\n  findAncode (partOfSpeech, grammems) {}\n\n  stringToAncode (string) {\n    if (!php.isset(string)) {\n      return null;\n    }\n\n    if (!php.isset(this.__ancodes_map[string])) {\n      throw new Error(`Ancode with '${ string }' graminfo not found`);\n    }\n\n    return this.__ancodes_map[string];\n  }\n\n  /**\n   * @param partOfSpeechId\n   * @param grammemIds\n   * @returns {string}\n   */\n  toString (partOfSpeechId, grammemIds) {\n    return partOfSpeechId + ' ' + php.implode(',', grammemIds);\n  }\n\n  buildAncodesMap () {\n    const result = {};\n\n    _.forEach(this.ancodes, (data, ancode_id) => {\n      const key = this.toString(data['pos_id'], data['grammem_ids']);\n\n      result[key] = ancode_id;\n    });\n\n    return result;\n  }\n\n  get __ancodes_map () {\n    if (!this.___ancodes_map) {\n      this.___ancodes_map = this.buildAncodesMap();\n    }\n\n    return this.___ancodes_map;\n  }\n\n  set __ancodes_map (value) {\n    this.___ancodes_map = (!_.isUndefined(value)) ? value : null;\n  }\n\n}\n\nexport {\n  Morphy_GramTab_Interface,\n  Morphy_GramTab_Empty,\n  Morphy_GramTab_Proxy,\n  Morphy_GramTab\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/gramtab.js","// This file is autogenerated at Mon, 31 Aug 2009 04:56:59 +0400, don`t change it!\n\n// parts of speech\nexport const PMY_RP_NOUN = 0;\nexport const PMY_RP_ADJ_FULL = 1;\nexport const PMY_RP_VERB = 2;\nexport const PMY_RP_PRONOUN = 3;\nexport const PMY_RP_PRONOUN_P = 4;\nexport const PMY_RP_PRONOUN_PREDK = 5;\nexport const PMY_RP_NUMERAL = 6;\nexport const PMY_RP_NUMERAL_P = 7;\nexport const PMY_RP_ADV = 8;\nexport const PMY_RP_PREDK = 9;\nexport const PMY_RP_PREP = 10;\nexport const PMY_RP_POSL = 11;\nexport const PMY_RP_CONJ = 12;\nexport const PMY_RP_INTERJ = 13;\nexport const PMY_RP_INP = 14;\nexport const PMY_RP_PHRASE = 15;\nexport const PMY_RP_PARTICLE = 16;\nexport const PMY_RP_ADJ_SHORT = 17;\nexport const PMY_RP_PARTICIPLE = 18;\nexport const PMY_RP_ADVERB_PARTICIPLE = 19;\nexport const PMY_RP_PARTICIPLE_SHORT = 20;\nexport const PMY_RP_INFINITIVE = 21;\nexport const PMY_RP_EMPTY = 22;\n\n// grammems\nexport const PMY_RG_PLURAL = 0;\nexport const PMY_RG_SINGULAR = 1;\nexport const PMY_RG_NOMINATIV = 2;\nexport const PMY_RG_GENITIV = 3;\nexport const PMY_RG_DATIV = 4;\nexport const PMY_RG_ACCUSATIV = 5;\nexport const PMY_RG_INSTRUMENTALIS = 6;\nexport const PMY_RG_LOCATIV = 7;\nexport const PMY_RG_VOCATIV = 8;\nexport const PMY_RG_MASCULINUM = 9;\nexport const PMY_RG_FEMINUM = 10;\nexport const PMY_RG_NEUTRUM = 11;\nexport const PMY_RG_MASC_FEM = 12;\nexport const PMY_RG_PRESENT_TENSE = 13;\nexport const PMY_RG_FUTURE_TENSE = 14;\nexport const PMY_RG_PAST_TENSE = 15;\nexport const PMY_RG_FIRST_PERSON = 16;\nexport const PMY_RG_SECOND_PERSON = 17;\nexport const PMY_RG_THIRD_PERSON = 18;\nexport const PMY_RG_IMPERATIVE = 19;\nexport const PMY_RG_ANIMATIVE = 20;\nexport const PMY_RG_NON_ANIMATIVE = 21;\nexport const PMY_RG_COMPARATIVE = 22;\nexport const PMY_RG_PERFECTIVE = 23;\nexport const PMY_RG_NON_PERFECTIVE = 24;\nexport const PMY_RG_NON_TRANSITIVE = 25;\nexport const PMY_RG_TRANSITIVE = 26;\nexport const PMY_RG_ACTIVE_VOICE = 27;\nexport const PMY_RG_PASSIVE_VOICE = 28;\nexport const PMY_RG_INDECLINABLE = 29;\nexport const PMY_RG_INITIALISM = 30;\nexport const PMY_RG_PATRONYMIC = 31;\nexport const PMY_RG_TOPONYM = 32;\nexport const PMY_RG_ORGANISATION = 33;\nexport const PMY_RG_QUALITATIVE = 34;\nexport const PMY_RG_DE_FACTO_SING_TANTUM = 35;\nexport const PMY_RG_INTERROGATIVE = 36;\nexport const PMY_RG_DEMONSTRATIVE = 37;\nexport const PMY_RG_NAME = 38;\nexport const PMY_RG_SUR_NAME = 39;\nexport const PMY_RG_IMPERSONAL = 40;\nexport const PMY_RG_SLANG = 41;\nexport const PMY_RG_MISPRINT = 42;\nexport const PMY_RG_COLLOQUIAL = 43;\nexport const PMY_RG_POSSESSIVE = 44;\nexport const PMY_RG_ARCHAISM = 45;\nexport const PMY_RG_SECOND_CASE = 46;\nexport const PMY_RG_POETRY = 47;\nexport const PMY_RG_PROFESSION = 48;\nexport const PMY_RG_SUPERLATIVE = 49;\nexport const PMY_RG_POSITIVE = 50;\nexport const PMY_RG_SHORT = 51;\nexport const PMY_RG_INFO = 52;\nexport const PMY_RG_DEEPR = 53;\nexport const PMY_RG_PR = 54;\n// -------------------------------------------------------------------------------\n\n// parts of speech\nexport const PMY_EP_NOUN = 0;\nexport const PMY_EP_ADJ = 1;\nexport const PMY_EP_VERB = 2;\nexport const PMY_EP_VBE = 3;\nexport const PMY_EP_MOD = 4;\nexport const PMY_EP_NUMERAL = 5;\nexport const PMY_EP_CONJ = 6;\nexport const PMY_EP_INTERJ = 7;\nexport const PMY_EP_PREP = 8;\nexport const PMY_EP_PARTICLE = 9;\nexport const PMY_EP_ART = 10;\nexport const PMY_EP_ADV = 11;\nexport const PMY_EP_PN = 12;\nexport const PMY_EP_ORDNUM = 13;\nexport const PMY_EP_PRON = 14;\nexport const PMY_EP_POSS = 15;\nexport const PMY_EP_PN_ADJ = 16;\nexport const PMY_EP_EMPTY = 17;\n\n// grammems\nexport const PMY_EG_SINGULAR = 0;\nexport const PMY_EG_PLURAL = 1;\nexport const PMY_EG_MASCULINUM = 2;\nexport const PMY_EG_FEMINUM = 3;\nexport const PMY_EG_ANIMATIVE = 4;\nexport const PMY_EG_PERFECTIVE = 5;\nexport const PMY_EG_NOMINATIVE = 6;\nexport const PMY_EG_OBJECT_CASE = 7;\nexport const PMY_EG_NARRATIVE = 8;\nexport const PMY_EG_GEOGRAPHICS = 9;\nexport const PMY_EG_PROPER = 10;\nexport const PMY_EG_PERSONAL_PRONOUN = 11;\nexport const PMY_EG_POSSESSIVE = 12;\nexport const PMY_EG_PREDICATIVE = 13;\nexport const PMY_EG_UNCOUNTABLE = 14;\nexport const PMY_EG_REFLEXIVE_PRONOUN = 15;\nexport const PMY_EG_DEMONSTRATIVE_PRONOUN = 16;\nexport const PMY_EG_MASS = 17;\nexport const PMY_EG_COMPARATIV = 18;\nexport const PMY_EG_SUPREMUM = 19;\nexport const PMY_EG_FIRST_PERSON = 20;\nexport const PMY_EG_SECOND_PERSON = 21;\nexport const PMY_EG_THIRD_PERSON = 22;\nexport const PMY_EG_PRESENT_INDEF = 23;\nexport const PMY_EG_INFINITIVE = 24;\nexport const PMY_EG_PAST_INDEF = 25;\nexport const PMY_EG_PAST_PARTICIPLE = 26;\nexport const PMY_EG_GERUND = 27;\nexport const PMY_EG_FUTURUM = 28;\nexport const PMY_EG_CONDITIONAL = 29;\nexport const PMY_EG_APOSTROPHE_S = 30;\nexport const PMY_EG_APOSTROPHE = 31;\nexport const PMY_EG_NAMES = 32;\nexport const PMY_EG_ORGANISATION = 33;\n// -------------------------------------------------------------------------------\n\n// parts of speech\nexport const PMY_GP_ART = 0;\nexport const PMY_GP_ADJ = 1;\nexport const PMY_GP_ADV = 2;\nexport const PMY_GP_EIG = 3;\nexport const PMY_GP_SUB = 4;\nexport const PMY_GP_VER = 5;\nexport const PMY_GP_P_A1 = 6;\nexport const PMY_GP_P_A2 = 7;\nexport const PMY_GP_PRONOMEN = 8;\nexport const PMY_GP_PRP = 9;\nexport const PMY_GP_KON = 10;\nexport const PMY_GP_NEG = 11;\nexport const PMY_GP_INJ = 12;\nexport const PMY_GP_ZAL = 13;\nexport const PMY_GP_ZUS = 14;\nexport const PMY_GP_PRO_BEG = 15;\nexport const PMY_GP_ZU_INFINITIV = 16;\nexport const PMY_GP_EMPTY = 17;\n\n// grammems\nexport const PMY_GG_NOA_UNK = 0;\nexport const PMY_GG_PREDIK_BENUTZ = 1;\nexport const PMY_GG_PRO_UNK = 2;\nexport const PMY_GG_TMP_UNK = 3;\nexport const PMY_GG_NAC = 4;\nexport const PMY_GG_MOU = 5;\nexport const PMY_GG_COU = 6;\nexport const PMY_GG_GEO = 7;\nexport const PMY_GG_WASSER = 8;\nexport const PMY_GG_GEB = 9;\nexport const PMY_GG_STD = 10;\nexport const PMY_GG_LOK = 11;\nexport const PMY_GG_VOR = 12;\nexport const PMY_GG_SICH_ACC = 13;\nexport const PMY_GG_SICH_DAT = 14;\nexport const PMY_GG_SCHWACH = 15;\nexport const PMY_GG_NICHT_SCHWACH = 16;\nexport const PMY_GG_MODAL = 17;\nexport const PMY_GG_AUXILIAR = 18;\nexport const PMY_GG_KONJ1 = 19;\nexport const PMY_GG_KONJ2 = 20;\nexport const PMY_GG_PARTIZIP1 = 21;\nexport const PMY_GG_PARTIZIP2 = 22;\nexport const PMY_GG_ZU_VERB_FORM = 23;\nexport const PMY_GG_IMPERATIV = 24;\nexport const PMY_GG_PRAETERITUM = 25;\nexport const PMY_GG_PRASENS = 26;\nexport const PMY_GG_GRUNDFORM = 27;\nexport const PMY_GG_KOMPARATIV = 28;\nexport const PMY_GG_SUPERLATIV = 29;\nexport const PMY_GG_PROPORTIONAL_KONJUNKTION = 30;\nexport const PMY_GG_INFINITIV = 31;\nexport const PMY_GG_VERGLEICHS_KONJUNKTION = 32;\nexport const PMY_GG_NEBENORDNENDE = 33;\nexport const PMY_GG_UNTERORDNENDE = 34;\nexport const PMY_GG_PERSONAL = 35;\nexport const PMY_GG_DEMONSTRATIV = 36;\nexport const PMY_GG_INTERROGATIV = 37;\nexport const PMY_GG_POSSESSIV = 38;\nexport const PMY_GG_REFLEXIV = 39;\nexport const PMY_GG_RIN_PRONOMEN = 40;\nexport const PMY_GG_ALG_PRONOMEN = 41;\nexport const PMY_GG_ADJEKTIVE_OHNE_ARTIKEL = 42;\nexport const PMY_GG_ADJEKTIVE_MIT_UNBESTIMMTE = 43;\nexport const PMY_GG_ADJEKTIVE_MIT_BESTIMMTE = 44;\nexport const PMY_GG_ERSTE_PERSON = 45;\nexport const PMY_GG_ZWEITE_PERSON = 46;\nexport const PMY_GG_DRITTE_PERSON = 47;\nexport const PMY_GG_FEMININ = 48;\nexport const PMY_GG_MASKULIN = 49;\nexport const PMY_GG_NEUTRUM = 50;\nexport const PMY_GG_PLURAL = 51;\nexport const PMY_GG_SINGULAR = 52;\nexport const PMY_GG_NOMINATIV = 53;\nexport const PMY_GG_GENITIV = 54;\nexport const PMY_GG_DATIV = 55;\nexport const PMY_GG_AKKUSATIV = 56;\nexport const PMY_GG_ABBREVIATION = 57;\nexport const PMY_GG_EINWOHNER = 58;\nexport const PMY_GG_TRANSITIV = 59;\nexport const PMY_GG_INTRANSITIV = 60;\nexport const PMY_GG_IMPERSONAL = 61;\n// -------------------------------------------------------------------------------\n\n// parts of speech\nexport const PMY_UP_UNKNOWN = 0;\n\n// grammems\nexport const PMY_UG_UNKNOWN = 0;\n// -------------------------------------------------------------------------------\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/gramtab_consts.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nclass Morphy_Source_Interface {\n\n  getValue (key) {}\n\n}\n\nclass Morphy_Source_Fsa extends Morphy_Source_Interface {\n\n  /**\n   * @param {Morphy_Fsa_Interface} fsa\n   */\n  constructor (fsa) {\n    this.fsa = fsa;\n    this.root = fsa.getRootTrans();\n  }\n\n  getFsa () {\n    return this.fsa;\n  }\n\n  getValue (key) {\n    const result = this.fsa.walk(this.root, key, true);\n    if (result === false || !result['annot']) {\n      return false;\n    }\n\n    return result['annot'];\n  }\n\n}\n\nexport {\n  Morphy_Source_Interface,\n  Morphy_Source_Fsa\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/source.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\nimport fs from 'fs';\nimport { php } from '../utils';\nimport { STORAGE_FILE, STORAGE_MEM } from './constants';\n\nclass Morphy_Storage {\n\n  constructor (fileName = '') {\n    if (fileName) {\n      this.file_name = fileName;\n      this.resource = this.open(fileName);\n    }\n  }\n\n  getFileName () {\n    return this.file_name;\n  }\n\n  getResource () {\n    return this.resource;\n  }\n\n  getTypeAsString () {\n    return this.getType();\n  }\n\n  /**\n   * @param {number} offset\n   * @param {number} len\n   * @param {boolean} [exactLength=true]\n   * @returns {*}\n   */\n  read (offset, len, exactLength = true) {\n    if (offset >= this.getFileSize()) {\n      throw new Error(`Can't read ${ len } bytes beyond end of '${ this.getFileName() }' file, offset = ${ offset }, file_size = ${ this.getFileSize() }`);\n    }\n\n    let result;\n    try {\n      result = this.readUnsafe(offset, len);\n    } catch (e) {\n      throw new Error(`Can't read ${ len } bytes at ${ offset } offset, from '${ this.getFileName() }' file: ${ e.message }`);\n    }\n\n    if (exactLength && result.length < len) {\n      throw new Error(`Can't read ${ len } bytes at ${ offset } offset, from '${ this.getFileName() }' file`);\n    }\n\n    return result;\n  }\n\n  readUnsafe (offset, len) {}\n\n  getFileSize () {}\n\n  getType () {}\n\n  open (fileName) {}\n\n}\n\nclass Morphy_Storage_Proxy extends Morphy_Storage {\n\n  constructor (type, fileName, factory) {\n    super();\n    this.file_name = fileName;\n    this.type = type;\n    this.factory = factory;\n    this.___obj = null;\n  }\n\n  getFileName () {\n    return this.__obj.getFileName();\n  }\n\n  getResource () {\n    return this.__obj.getResource();\n  }\n\n  getFileSize () {\n    return this.__obj.getFileSize();\n  }\n\n  getType () {\n    return this.__obj.getType();\n  }\n\n  readUnsafe (offset, len) {\n    return this.__obj.readUnsafe(offset, len);\n  }\n\n  open (fileName) {\n    return this.__obj.open(fileName);\n  }\n\n  get __obj () {\n    if (!this.___obj) {\n      this.___obj = this.factory.open(this.type, this.file_name, false);\n\n      delete this.file_name;\n      delete this.type;\n      delete this.factory;\n    }\n\n    return this.___obj;\n  }\n  \n  set __obj (value) {\n    this.___obj = (!_.isUndefined(value)) ? value : null;\n  }\n\n}\n\nclass Morphy_Storage_File extends Morphy_Storage {\n\n  constructor () {\n    super(...arguments);\n  }\n\n  getType () {\n    return STORAGE_FILE;\n  }\n\n  getFileSize () {\n    const stat = fs.fstatSync(this.resource);\n    if (stat === false) {\n      throw new Error(`Can't invoke fs.fstatSync for '${ this.file_name }' file`);\n    }\n\n    return stat['size'];\n  }\n\n  readUnsafe (offset, len) {\n    const buf = Buffer.alloc(len);\n    fs.readSync(this.resource, buf, 0, len, offset);\n\n    return buf;\n  }\n\n  open (fileName) {\n    const fh = fs.openSync(fileName, 'r');\n    if (fh === false) {\n      throw new Error(`Can't open '${ this.file_name }' file`);\n    }\n\n    return fh;\n  }\n\n}\n\nclass Morphy_Storage_Mem extends Morphy_Storage {\n\n  constructor () {\n    super(...arguments);\n  }\n\n  getType () {\n    return STORAGE_MEM;\n  }\n\n  getFileSize () {\n    return this.resource.length;\n  }\n\n  readUnsafe (offset, len) {\n    return php.substr(this.resource, offset, len);\n    //return this.resource.slice(offset, offset + len - 1);\n  }\n\n  open (fileName) {\n    const buffer = fs.readFileSync(fileName);\n    if (buffer === false) {\n      throw new Error(`Can't read '${ fileName }' file`);\n    }\n\n    return buffer;\n  }\n\n}\n\nclass Morphy_Storage_Factory {\n  \n  static get storages () {\n    return {\n      Morphy_Storage_File,\n      Morphy_Storage_Mem\n    };\n  }\n\n  open (type, fileName, lazy) {\n    switch (type) {\n      case STORAGE_FILE:\n      // downfall\n      case STORAGE_MEM:\n        break;\n      default:\n        throw new Error(`Invalid storage type '${ type }' specified`);\n    }\n\n    if (lazy) {\n      return new Morphy_Storage_Proxy(type, fileName, this);\n    }\n\n    const className = 'Morphy_Storage_' + php.ucfirst(type.toLowerCase());\n\n    return new Morphy_Storage_Factory.storages[className](fileName);\n  }\n\n}\n\nexport {\n  Morphy_Storage,\n  Morphy_Storage_Proxy,\n  Morphy_Storage_File,\n  Morphy_Storage_Mem,\n  Morphy_Storage_Factory\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/storage.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\nimport { php, toBuffer, buffer2str } from '../utils';\n\nconst Morphy_UnicodeHelper_cache = {};\nconst Morphy_UnicodeHelper_unicodeHelpers = {};\n\nclass Morphy_UnicodeHelper {\n  \n  static get cache () {\n    return Morphy_UnicodeHelper_cache;\n  }\n  \n  static get unicodeHelpers () {\n    return Morphy_UnicodeHelper_unicodeHelpers;\n  }\n  \n  static create (encoding) {\n    const { cache, doCreate } = Morphy_UnicodeHelper;\n\n    encoding = encoding.toLowerCase();\n    if (php.isset(cache[encoding])) {\n      return cache[encoding];\n    }\n    \n    const result = doCreate(encoding);\n    cache[encoding] = result;\n    \n    return result;\n  }\n  \n  static doCreate (encoding) {\n    let matches = encoding.match(/^(utf|ucs)(-)?([0-9]+)(-)?(le|be)?$/);\n    if (matches) {\n      let tmp;\n      let encoding_name;\n      let className;\n\n      let utf_type = matches[1];\n      let utf_base = parseInt(matches[3], 10);\n      let endiannes = '';\n      \n      switch (utf_type) {\n        case 'utf':\n          if ([8, 16, 32].indexOf(utf_base) < 0) {\n          // if (!php.in_array(utf_base, [8, 16, 32])) {\n            throw new Error('Invalid utf base');\n          }\n          \n          break;\n        case 'ucs':\n          if ([2, 4].indexOf(utf_base) < 0) {\n          // if (!php.in_array(utf_base, [2, 4])) {\n            throw new Error('Invalid ucs base');\n          }\n          \n          break;\n        default:\n          throw new Error('Internal error');\n      }\n      \n      if (utf_base > 8 || 'ucs' === utf_type) {\n        if (php.isset(matches[5])) {\n          endiannes = matches[5] == 'be' ? 'be' : 'le';\n        } else {\n          tmp = php.pack('L', 1);\n          endiannes = php.ord(tmp) == 0 ? 'be' : 'le';\n        }\n      }\n      \n      \n      if (utf_type == 'ucs' || utf_base > 8) {\n        encoding_name = utf_type + '-' + utf_base + endiannes;\n      } else {\n        encoding_name = utf_type + '-' + utf_base;\n      }\n      \n      className = `Morphy_UnicodeHelper_${ php.str_replace('-', '_', encoding_name) }`;\n      \n      return new Morphy_UnicodeHelper.unicodeHelpers[className](encoding_name);\n    } else {\n      return new Morphy_UnicodeHelper_singlebyte(encoding);\n    }\n  }\n\n  firstCharSize (str) {}\n\n  strrev (str) {}\n\n  strlen (str) {}\n\n  fixTrailing (str) {}\n\n}\n\nclass Morphy_UnicodeHelper_Base extends Morphy_UnicodeHelper {\n\n  constructor (encoding) {\n    super(...arguments);\n    this.encoding = encoding;\n  }\n\n  strlen (str) {\n    return buffer2str(str).length;\n  }\n\n  php_strlen (str) {\n    return buffer2str(str).length;\n  }\n\n}\n\nclass Morphy_UnicodeHelper_MultiByteFixed extends Morphy_UnicodeHelper_Base {\n\n  constructor (encoding, size) {\n    super(...arguments);\n    this.size = size;\n  }\n\n  firstCharSize (str) {\n    return this.size;\n  }\n\n  strrev (str) {\n    return php.implode('', php.array_reverse(php.str_split(str, this.size)));\n  }\n\n  php_strlen (str) {\n    return php.strlen(str) / this.size;\n  }\n\n  fixTrailing (str) {\n    const len = php.strlen(str);\n\n    if ((len % this.size) > 0) {\n      return php.substr(str, 0, Math.floor(len / this.size) * this.size);\n    }\n\n    return str;\n  }\n\n}\n\n// single byte encoding\nclass Morphy_UnicodeHelper_singlebyte extends Morphy_UnicodeHelper_Base {\n\n  constructor (encoding, size) {\n    super(...arguments);\n    this.size = size;\n  }\n\n  firstCharSize (str) {\n    return 1;\n  }\n\n  strrev (str) {\n    return toBuffer(buffer2str(str).split('').reverse().join(''));\n  }\n\n  strlen (str) {\n    return buffer2str(str).length;\n  }\n\n  fixTrailing (str) {\n    return str;\n  }\n\n  php_strlen (str) {\n    return buffer2str(str).length;\n  }\n\n}\n\n// utf8\nclass Morphy_UnicodeHelper_utf_8 extends Morphy_UnicodeHelper_Base {\n\n  constructor (encoding) {\n    super(...arguments);\n\n    this.tails_length = this.getTailsLength();\n  }\n\n  firstCharSize (str) {\n    return 1 + this.tails_length[php.ord(str)];\n  }\n\n  strrev (str) {\n    return toBuffer(buffer2str(str).split('').reverse().join(''));\n  }\n\n  fixTrailing (str) {\n    str = toBuffer(str);\n\n    const strlen = str.length;\n\n    if (!strlen) {\n      return '';\n    }\n  \n    let ord = str[strlen - 1];\n    let diff;\n    let seq_len;\n    let miss;\n\n    if ((ord & 0x80) == 0) {\n      return str;\n    }\n\n    for (let i = strlen - 1; i >= 0; i--) {\n      ord = str[i];\n\n      if ((ord & 0xC0) == 0xC0) {\n        diff    = strlen - i;\n        seq_len = this.tails_length[ord] + 1;\n\n        miss = seq_len - diff;\n\n        if (miss) {\n          return str.slice(0, -(seq_len - miss));\n        } else {\n          return str;\n        }\n      }\n    }\n\n    return '';\n  }\n\n  php_strlen (str) {\n    return buffer2str(str).length;\n  }\n\n  getTailsLength () {\n    return [\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,\n      1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,\n      2,2,2,2,2,2,2,2, 2,2,2,2,2,2,2,2,\n      3,3,3,3,3,3,3,3, 4,4,4,4,5,5,0,0\n    ];\n  }\n\n}\n\n// utf16\nclass Morphy_UnicodeHelper_utf_16_Base extends Morphy_UnicodeHelper_Base {\n  \n  constructor (encoding, isBigEndian) {\n    super(...arguments);\n\n    this.is_be = !!isBigEndian;\n    this.char_fmt = isBigEndian ? 'n' : 'v';\n  }\n\n  firstCharSize (str) {\n    const ord = php.unpack(this.char_fmt, str)[1];\n\n    return ord >= 0xD800 && ord <= 0xDFFF ? 4 : 2;\n  }\n\n  strrev (str) {\n    const count = php.strlen(str);\n    const fmt = this.char_fmt + count;\n    const words = php.array_reverse(php.unpack(fmt, str));\n\n    let ord;\n    let t;\n\n    for (let i = 0; i < count; i++) {\n      ord = words[i];\n\n      if (ord >= 0xD800 && ord <= 0xDFFF) {\n        // swap surrogates\n        t = words[i];\n        words[i] = words[i + 1];\n\n        i++;\n        words[i] = t;\n      }\n    }\n\n    php.array_unshift(words, fmt);\n\n    return php.pack(...words);\n  }\n\n  fixTrailing (str) {\n    let strlen = php.strlen(str);\n\n    if (strlen & 1) {\n      strlen--;\n      str = php.substr(str, 0, strlen);\n    }\n\n    if (strlen < 2) {\n      return '';\n    }\n\n    let ord = php.unpack(this.char_fmt, php.substr(str, -2, 2))[1];\n\n    if (this.isSurrogate(ord)) {\n      if (strlen < 4) {\n        return '';\n      }\n\n      ord = php.unpack(this.char_fmt, php.substr(str, -4, 2))[1];\n\n      if (this.isSurrogate(ord)) {\n        // full surrogate pair\n        return str;\n      } else {\n        return php.substr(str, 0, -2);\n      }\n    }\n\n    return str;\n  }\n\n  php_strlen (str) {\n    let count = php.strlen(str) / 2;\n    const fmt = this.char_fmt + count;\n\n    _.forEach(php.unpack(fmt, str), ord => {\n      if (ord >= 0xD800 && ord <= 0xDFFF) {\n        count--;\n      }\n    });\n\n    return count;\n  }\n\n  isSurrogate (ord) {\n    return ord >= 0xD800 && ord <= 0xDFFF;\n  }\n\n}\n\nclass Morphy_UnicodeHelper_utf_16le extends Morphy_UnicodeHelper_utf_16_Base {\n\n  constructor (encoding) {\n    super(encoding, false);\n  }\n\n}\n\nclass Morphy_UnicodeHelper_utf_16be extends Morphy_UnicodeHelper_utf_16_Base {\n\n  constructor (encoding) {\n    super(encoding, true);\n  }\n\n}\n\n// utf32\nclass Morphy_UnicodeHelper_utf_32_Base extends Morphy_UnicodeHelper_MultiByteFixed {\n\n  constructor (encoding) {\n    super(encoding, 4);\n  }\n\n}\n\nclass Morphy_UnicodeHelper_utf_32le extends Morphy_UnicodeHelper_utf_32_Base {\n\n  constructor () {\n    super(...arguments);\n  }\n\n}\n\nclass Morphy_UnicodeHelper_utf_32be extends Morphy_UnicodeHelper_utf_32_Base {\n\n  constructor () {\n    super(...arguments);\n  }\n\n}\n\n// ucs2, ucs4\nclass Morphy_UnicodeHelper_ucs_2le extends Morphy_UnicodeHelper_MultiByteFixed {\n\n  constructor (encoding) {\n    super(encoding, 2);\n  }\n\n}\n\nclass Morphy_UnicodeHelper_ucs_2be extends Morphy_UnicodeHelper_MultiByteFixed {\n\n  constructor (encoding) {\n    super(encoding, 2);\n  }\n\n}\n\nclass Morphy_UnicodeHelper_ucs_4le extends Morphy_UnicodeHelper_MultiByteFixed {\n\n  constructor (encoding) {\n    super(encoding, 4);\n  }\n\n}\n\nclass Morphy_UnicodeHelper_ucs_4be extends Morphy_UnicodeHelper_MultiByteFixed {\n\n  constructor (encoding) {\n    super(encoding, 4);\n  }\n  \n}\n\nObject.assign(Morphy_UnicodeHelper_unicodeHelpers, {\n  Morphy_UnicodeHelper_MultiByteFixed,\n  Morphy_UnicodeHelper_singlebyte,\n  Morphy_UnicodeHelper_utf_8,\n  Morphy_UnicodeHelper_utf_16_Base,\n  Morphy_UnicodeHelper_utf_16le,\n  Morphy_UnicodeHelper_utf_16be,\n  Morphy_UnicodeHelper_utf_32_Base,\n  Morphy_UnicodeHelper_utf_32le,\n  Morphy_UnicodeHelper_utf_32be,\n  Morphy_UnicodeHelper_ucs_2le,\n  Morphy_UnicodeHelper_ucs_2be,\n  Morphy_UnicodeHelper_ucs_4le,\n  Morphy_UnicodeHelper_ucs_4be\n});\n\nexport {\n  Morphy_UnicodeHelper,\n  Morphy_UnicodeHelper_Base,\n  Morphy_UnicodeHelper_MultiByteFixed,\n  Morphy_UnicodeHelper_singlebyte,\n  Morphy_UnicodeHelper_utf_8,\n  Morphy_UnicodeHelper_utf_16_Base,\n  Morphy_UnicodeHelper_utf_16le,\n  Morphy_UnicodeHelper_utf_16be,\n  Morphy_UnicodeHelper_utf_32_Base,\n  Morphy_UnicodeHelper_utf_32le,\n  Morphy_UnicodeHelper_utf_32be,\n  Morphy_UnicodeHelper_ucs_2le,\n  Morphy_UnicodeHelper_ucs_2be,\n  Morphy_UnicodeHelper_ucs_4le,\n  Morphy_UnicodeHelper_ucs_4be\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/unicode.js","var map = {\n\t\"./fsa_sparse_file\": 8,\n\t\"./fsa_sparse_file.js\": 8,\n\t\"./fsa_sparse_mem\": 9,\n\t\"./fsa_sparse_mem.js\": 9,\n\t\"./fsa_tree_file\": 10,\n\t\"./fsa_tree_file.js\": 10,\n\t\"./fsa_tree_mem\": 11,\n\t\"./fsa_tree_mem.js\": 11\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 25;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/fsa/access ^\\.\\/fsa_.*$\n// module id = 25\n// module chunks = 0 1","var map = {\n\t\"./graminfo_file\": 12,\n\t\"./graminfo_file.js\": 12,\n\t\"./graminfo_mem\": 13,\n\t\"./graminfo_mem.js\": 13\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 26;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/graminfo/access ^\\.\\/graminfo_.*$\n// module id = 26\n// module chunks = 0 1","var map = {\n\t\"./common\": 4,\n\t\"./common.js\": 4,\n\t\"./ru_ru\": 14,\n\t\"./ru_ru.js\": 14\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 27;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/langs_stuff ^\\.\\/.*$\n// module id = 27\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.reflect.apply\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.reflect.apply\"\n// module id = 28\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.reflect.construct\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.reflect.construct\"\n// module id = 29\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.reflect.define-property\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.reflect.define-property\"\n// module id = 30\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.reflect.delete-property\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.reflect.delete-property\"\n// module id = 31\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.reflect.get\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.reflect.get\"\n// module id = 32\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.reflect.get-own-property-descriptor\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.reflect.get-own-property-descriptor\"\n// module id = 33\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.reflect.get-prototype-of\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.reflect.get-prototype-of\"\n// module id = 34\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.reflect.has\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.reflect.has\"\n// module id = 35\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.reflect.is-extensible\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.reflect.is-extensible\"\n// module id = 36\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.reflect.own-keys\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.reflect.own-keys\"\n// module id = 37\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.reflect.prevent-extensions\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.reflect.prevent-extensions\"\n// module id = 38\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.reflect.set\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.reflect.set\"\n// module id = 39\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.reflect.set-prototype-of\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.reflect.set-prototype-of\"\n// module id = 40\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.regexp.flags\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.regexp.flags\"\n// module id = 41\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.symbol\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.symbol\"\n// module id = 42\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.weak-map\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.weak-map\"\n// module id = 43\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.weak-set\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.weak-set\"\n// module id = 44\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es7.array.includes\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es7.array.includes\"\n// module id = 45\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es7.string.pad-end\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es7.string.pad-end\"\n// module id = 46\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es7.string.pad-start\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es7.string.pad-start\"\n// module id = 47\n// module chunks = 0 1","module.exports = require(\"core-js/modules/web.dom.iterable\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/web.dom.iterable\"\n// module id = 48\n// module chunks = 0 1","module.exports = require(\"core-js/modules/web.immediate\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/web.immediate\"\n// module id = 49\n// module chunks = 0 1","module.exports = require(\"core-js/modules/web.timers\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/web.timers\"\n// module id = 50\n// module chunks = 0 1","module.exports = require(\"phpjs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"phpjs\"\n// module id = 51\n// module chunks = 0 1","module.exports = require(\"phpunserialize\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"phpunserialize\"\n// module id = 52\n// module chunks = 0 1","module.exports = require(\"util\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"util\"\n// module id = 53\n// module chunks = 0 1","import './tests';\r\n\r\n//\r\n// /**\r\n//  todo\r\n//  - проверить необходимость заменить `_.values(...)` на `_.valuesIn(...)`\r\n//  - проверить необходимость заменить `__.php.array_keys(...)` на `_.keys(...)` или `_.keysIn(...)`\r\n//  - избавиться от интерфейсов и прописать их в jsdoc с помощью @typedef и @implements\r\n//  */\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/test.js","import _ from 'lodash';\r\nimport path from 'path';\r\nimport encoding from 'encoding';\r\nimport { exec } from 'child_process';\r\nimport { inspect, logger, isStringifyedNumber } from '../utils';\r\nimport Morphy from '../';\r\n\r\nimport {\r\n  Morphy_Morphier_Interface,\r\n  Morphy_WordForm,\r\n  Morphy_WordDescriptor,\r\n  Morphy_WordDescriptor_Collection\r\n} from '../lib/morphiers';\r\n\r\n// let html = ``;\r\n// let text = html\r\n//   .replace(/<\\/?[^>]+(>|$)/gm, \"\")\r\n//   .replace(/[^a-zа-яё]+/igm, ' ')\r\n//   .replace(/\\s+/gm, ' ')\r\n//   .trim()\r\n//   .toLowerCase()\r\n// ;\r\n// let words = _(text.split(' '))\r\n//   .filter(w => w.length > 1)\r\n//   .uniq()\r\n//   .sort()\r\n//   .value()\r\n// ;\r\n\r\nconst log = function (...args) {\r\n  logger.log(...args.map(item => inspect(item)));\r\n};\r\n\r\nfunction cliEncode (any) {\r\n  return Buffer.from(JSON.stringify(any)).toString('base64');\r\n}\r\nconst phpTestsFile = path.join(path.relative(process.cwd(), __dirname), 'tests/index.php');\r\nfunction runPhpFileWithArgs (args, cb) {\r\n  cb = _.isFunction(cb) ? cb : _.noop;\r\n  \r\n  const cliArgs = Object.keys(args).map(key => {\r\n    return `--${ key } ${ cliEncode(args[key]) }`;\r\n  }).join(' ');\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    exec(`php ${ phpTestsFile } ${ cliArgs }`, {\r\n      maxBuffer: 1024 * 1000 // 1MB\r\n    }, (err, stdout, stderr) => {\r\n      if (err) {\r\n        cb(err);\r\n        return reject(err);\r\n      }\r\n      if (stderr) {\r\n        cb(stderr);\r\n        return reject(stderr);\r\n      }\r\n      \r\n      cb(null, stdout);\r\n      return resolve(stdout);\r\n    });\r\n  });\r\n}\r\n\r\n\r\nasync function runPhpTests (words, opts) {\r\n  let res;\r\n  \r\n  try { res = await runPhpFileWithArgs({words, opts}); }\r\n  catch (e) { throw e; }\r\n  \r\n  try { res = JSON.parse(res); }\r\n  catch (e) {\r\n    !!res && (e.message = `${ e.message }\r\n[php]: ${inspect(res)}`);\r\n    throw e;\r\n  }\r\n  \r\n  if (!res.success) {\r\n    throw new Error(`[php]: \"${ res.message }\". ${res.words ? inspect(res.words) : ''}`);\r\n  }\r\n  \r\n  return res.words;\r\n}\r\n\r\n/** Declare local tests */\r\nasync function runLocalTests (words, morphy) {\r\n  const tests = {};\r\n  words = _.isArray(words) ? words : [words];\r\n  // для совместимости с результатами из php\r\n  words = words.map(word => word.toUpperCase());\r\n  \r\n  tests['initialize'] = () => {\r\n    return [\r\n      morphy.getEncoding(),\r\n      morphy.getLocale()\r\n    ];\r\n  };\r\n\r\n  tests['getters'] = () => {\r\n    return [\r\n      morphy.getCommonMorphier() instanceof Morphy_Morphier_Interface,\r\n      morphy.getPredictBySuffixMorphier() instanceof Morphy_Morphier_Interface,\r\n      morphy.getPredictByDatabaseMorphier() instanceof Morphy_Morphier_Interface,\r\n      morphy.getBulkMorphier() instanceof Morphy_Morphier_Interface\r\n    ];\r\n  };\r\n\r\n  tests['isLastPredicted'] = () => {\r\n    const res = [];\r\n\r\n    res.push(\r\n      morphy.lemmatize('глокая', Morphy.NORMAL),\r\n      morphy.isLastPredicted()\r\n    );\r\n\r\n    res.push(\r\n      morphy.lemmatize('глокая', Morphy.IGNORE_PREDICT),\r\n      morphy.isLastPredicted()\r\n    );\r\n\r\n    res.push(\r\n      morphy.lemmatize('тест', Morphy.ONLY_PREDICT),\r\n      morphy.isLastPredicted()\r\n    );\r\n\r\n    return res;\r\n  };\r\n\r\n  tests['getLastPredictionType'] = () => {\r\n    const res = [];\r\n\r\n    res.push(\r\n      morphy.lemmatize('тест', Morphy.NORMAL),\r\n      morphy.getLastPredictionType() == Morphy.PREDICT_BY_NONE\r\n    );\r\n\r\n    res.push(\r\n      morphy.lemmatize('глокая', Morphy.IGNORE_PREDICT),\r\n      morphy.getLastPredictionType() == Morphy.PREDICT_BY_NONE\r\n    );\r\n\r\n    res.push(\r\n      morphy.lemmatize('тестдрайв', Morphy.ONLY_PREDICT),\r\n      morphy.getLastPredictionType() == Morphy.PREDICT_BY_SUFFIX\r\n    );\r\n\r\n    res.push(\r\n      morphy.lemmatize('подфигачить', Morphy.ONLY_PREDICT),\r\n      morphy.getLastPredictionType() == Morphy.PREDICT_BY_DB\r\n    );\r\n\r\n    return res;\r\n  };\r\n\r\n  tests['lemmatize && getBaseForm'] = () => {\r\n    let res = { lemmatize: {}, getBaseForm: {} };\r\n\r\n    words.forEach(word => res.lemmatize[word] = morphy.lemmatize(word));\r\n    words.forEach(word => res.getBaseForm[word] = morphy.getBaseForm(word));\r\n\r\n    return res;\r\n  };\r\n\r\n  tests['lemmatize bulk && getBaseForm bulk'] = () => {\r\n    let res = {};\r\n\r\n    res.lemmatize = morphy.lemmatize(words);\r\n    res.getBaseForm = morphy.getBaseForm(words);\r\n\r\n    return res;\r\n  };\r\n\r\n  /**\r\n   * @param {Morphy_WordDescriptor_Collection} paradigms\r\n   * @param {Array} res\r\n   */\r\n  function testFoundWordParadigms (paradigms, res) {\r\n    if (!paradigms) { return; }\r\n\r\n    res.push(\r\n      paradigms instanceof Morphy_WordDescriptor_Collection,\r\n      paradigms.length\r\n    );\r\n\r\n    paradigms.forEach(paradigm => {\r\n      res.push(\r\n        paradigm instanceof Morphy_WordDescriptor,\r\n        paradigm.length,\r\n\r\n        paradigm.getBaseForm(),\r\n        paradigm.getPseudoRoot(),\r\n\r\n        paradigm.getAllForms(),\r\n        paradigm.getFoundWordForm().length,\r\n\r\n        paradigm.hasGrammems('НО'),\r\n        paradigm.hasGrammems('ИМ'),\r\n        paradigm.getWordFormsByGrammems('НО').length,\r\n        paradigm.getWordFormsByGrammems('ИМ').length,\r\n\r\n        paradigm.hasPartOfSpeech('С'),\r\n        paradigm.hasPartOfSpeech('ДЕЕПРИЧАСТИЕ'),\r\n        paradigm.getWordFormsByPartOfSpeech('С').length,\r\n        paradigm.getWordFormsByPartOfSpeech('ДЕЕПРИЧАСТИЕ').length\r\n      );\r\n    });\r\n\r\n    res.push(\r\n      paradigms.getByPartOfSpeech('С').length\r\n    );\r\n    \r\n    // для русских слов\r\n    paradigms.getByPartOfSpeech('С').forEach(paradigm => {\r\n      res.push(\r\n        paradigm instanceof Morphy_WordDescriptor,\r\n        paradigm.length,\r\n        paradigm.length\r\n          ? paradigm.getWordForm(0) instanceof Morphy_WordDescriptor\r\n          : null\r\n      );\r\n\r\n      const formsOfSourceWord = paradigm.getFoundWordForm();\r\n      res.push(formsOfSourceWord.length);\r\n\r\n      formsOfSourceWord.forEach(form => res.push(\r\n        form instanceof Morphy_WordForm,\r\n        form.getWord(),\r\n        form.getFormNo(),\r\n        form.getGrammems(),\r\n        form.hasGrammems(['ЕД', 'РД']),\r\n        form.getPartOfSpeech()\r\n      ));\r\n\r\n      const sampleFormsByGrammem = paradigm.getWordFormsByGrammems('ИМ');\r\n      res.push(sampleFormsByGrammem.length);\r\n\r\n      sampleFormsByGrammem.forEach(form => res.push(\r\n        form instanceof Morphy_WordForm,\r\n        form.getWord(),\r\n        form.getFormNo(),\r\n        form.getGrammems(),\r\n        form.hasGrammems(['ЕД', 'РД']),\r\n        form.getPartOfSpeech()\r\n      ));\r\n\r\n      const sampleFormsByPartOfSpeech = paradigm.getWordFormsByPartOfSpeech('С');\r\n      res.push(sampleFormsByPartOfSpeech.length);\r\n\r\n      sampleFormsByPartOfSpeech.forEach(form => res.push(\r\n        form instanceof Morphy_WordForm,\r\n        form.getWord(),\r\n        form.getFormNo(),\r\n        form.getGrammems(),\r\n        form.hasGrammems(['ЕД', 'РД']),\r\n        form.getPartOfSpeech()\r\n      ));\r\n    });\r\n  \r\n    // для английских слов\r\n    paradigms.getByPartOfSpeech('VERB').forEach(paradigm => {\r\n      res.push(\r\n        paradigm instanceof Morphy_WordDescriptor,\r\n        paradigm.length,\r\n        paradigm.length\r\n          ? paradigm.getWordForm(0) instanceof Morphy_WordDescriptor\r\n          : null\r\n      );\r\n\r\n      const formsOfSourceWord = paradigm.getFoundWordForm();\r\n      res.push(formsOfSourceWord.length);\r\n\r\n      formsOfSourceWord.forEach(form => res.push(\r\n        form instanceof Morphy_WordForm,\r\n        form.getWord(),\r\n        form.getFormNo(),\r\n        form.getGrammems(),\r\n        form.hasGrammems(['ЕД', 'РД']),\r\n        form.getPartOfSpeech()\r\n      ));\r\n\r\n      const sampleFormsByGrammem = paradigm.getWordFormsByGrammems('ИМ');\r\n      res.push(sampleFormsByGrammem.length);\r\n\r\n      sampleFormsByGrammem.forEach(form => res.push(\r\n        form instanceof Morphy_WordForm,\r\n        form.getWord(),\r\n        form.getFormNo(),\r\n        form.getGrammems(),\r\n        form.hasGrammems(['ЕД', 'РД']),\r\n        form.getPartOfSpeech()\r\n      ));\r\n\r\n      const sampleFormsByPartOfSpeech = paradigm.getWordFormsByPartOfSpeech('С');\r\n      res.push(sampleFormsByPartOfSpeech.length);\r\n\r\n      sampleFormsByPartOfSpeech.forEach(form => res.push(\r\n        form instanceof Morphy_WordForm,\r\n        form.getWord(),\r\n        form.getFormNo(),\r\n        form.getGrammems(),\r\n        form.hasGrammems(['ЕД', 'РД']),\r\n        form.getPartOfSpeech()\r\n      ));\r\n    });\r\n  }\r\n\r\n  tests['findWord'] = () => {\r\n    const res = [];\r\n\r\n    words.forEach(word => {\r\n      const paradigms = morphy.findWord(word);\r\n      testFoundWordParadigms(paradigms, res);\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  tests['findWord bulk'] = () => {\r\n    const res = [];\r\n\r\n    _.forEach(morphy.findWord(words), (paradigms, word) => {\r\n      testFoundWordParadigms(paradigms, res);\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  tests['getAllForms'] = () => {\r\n    return words.map(word => morphy.getAllForms(word));\r\n  };\r\n\r\n  tests['getAllForms bulk'] = () => {\r\n    return morphy.getAllForms(words);\r\n  };\r\n\r\n  tests['getPseudoRoot'] = () => {\r\n    return words.map(word => morphy.getPseudoRoot(word));\r\n  };\r\n\r\n  tests['getPseudoRoot bulk'] = () => {\r\n    return morphy.getPseudoRoot(words);\r\n  };\r\n\r\n  tests['getPartOfSpeech'] = () => {\r\n    return words.map(word => morphy.getPartOfSpeech(word));\r\n  };\r\n\r\n  tests['getPartOfSpeech bulk'] = () => {\r\n    return morphy.getPartOfSpeech(words);\r\n  };\r\n\r\n  tests['getAllFormsWithGramInfo'] = () => {\r\n    return {\r\n      asText: words.map(word => morphy.getAllFormsWithGramInfo(word, true)),\r\n      '!asText': words.map(word => morphy.getAllFormsWithGramInfo(word, false))\r\n    };\r\n  };\r\n\r\n  tests['getAllFormsWithGramInfo bulk'] = () => {\r\n    return {\r\n      asText: morphy.getAllFormsWithGramInfo(words, true),\r\n      '!asText': morphy.getAllFormsWithGramInfo(words, false)\r\n    };\r\n  };\r\n\r\n  tests['getAllFormsWithAncodes'] = () => {\r\n    return words.map(word => morphy.getAllFormsWithAncodes(word));\r\n  };\r\n\r\n  tests['getAllFormsWithAncodes bulk'] = () => {\r\n    return morphy.getAllFormsWithAncodes(words);\r\n  };\r\n\r\n  tests['getAncode'] = () => {\r\n    return words.map(word => morphy.getAncode(word));\r\n  };\r\n\r\n  tests['getAncode bulk'] = () => {\r\n    return morphy.getAncode(words);\r\n  };\r\n\r\n  tests['getGramInfo'] = () => {\r\n    return words.map(word => morphy.getGramInfo(word));\r\n  };\r\n\r\n  tests['getGramInfo bulk'] = () => {\r\n    return morphy.getGramInfo(words);\r\n  };\r\n\r\n  tests['getGramInfoMergeForms'] = () => {\r\n    return words.map(word => morphy.getGramInfoMergeForms(word));\r\n  };\r\n\r\n  tests['getGramInfoMergeForms bulk'] = () => {\r\n    return morphy.getGramInfoMergeForms(words);\r\n  };\r\n\r\n  tests['castFormByGramInfo'] = () => {\r\n    const res = [];\r\n\r\n    words.forEach(word => {\r\n      res.push(\r\n        morphy.castFormByGramInfo(word, null, ['МН', 'ПР'], false),\r\n        morphy.castFormByGramInfo(word, null, ['МН', 'ПР'], true),\r\n        morphy.castFormByGramInfo('ШКАФ', null, null, true, (form, partOfSpeech, grammems, formNo) => {\r\n          return _.includes(grammems, 'ИМ');\r\n        }),\r\n        morphy.castFormByGramInfo(word, 'КР_ПРИЛ', ['ЕД', 'ЖР'], true)\r\n      );\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  tests['castFormByPattern'] = () => {\r\n    const res = [];\r\n\r\n    const provider = morphy.getGrammemsProvider();\r\n    provider.excludeGroups('С', 'род');\r\n\r\n    res.push(\r\n      morphy.castFormByPattern('ДИВАН', 'СТОЛАМИ', null, true),\r\n      morphy.castFormByPattern('ДИВАН', 'КРОВАТЯМИ', null, true),\r\n      morphy.castFormByPattern('ДИВАН', 'КРОВАТЯМИ', provider, true),\r\n      morphy.castFormByPattern('КРЕСЛО', 'СТУЛЬЯМИ', provider, true)\r\n    );\r\n\r\n    words.forEach(word => {\r\n      res.push(\r\n        morphy.castFormByPattern(word, 'СТОЛАМИ', null, true),\r\n        morphy.castFormByPattern(word, 'СТОЛАМИ', provider, true),\r\n        morphy.castFormByPattern('СТОЛАМИ', word, null, true),\r\n        morphy.castFormByPattern('СТОЛАМИ', word, provider, true),\r\n\r\n        morphy.castFormByPattern(word, 'ДИВАН', null, true),\r\n        morphy.castFormByPattern(word, 'ДИВАН', provider, true),\r\n        morphy.castFormByPattern('ДИВАН', word, null, true),\r\n        morphy.castFormByPattern('ДИВАН', word, provider, true),\r\n\r\n        morphy.castFormByPattern(word, 'КРОВАТЯМИ', null, true),\r\n        morphy.castFormByPattern(word, 'КРОВАТЯМИ', provider, true),\r\n        morphy.castFormByPattern('КРОВАТЯМИ', word, null, true),\r\n        morphy.castFormByPattern('КРОВАТЯМИ', word, provider, true),\r\n      )\r\n    });\r\n\r\n    morphy.getDefaultGrammemsProvider().excludeGroups('С', 'род');\r\n    res.push(\r\n      morphy.castFormByPattern('ДИВАН', 'КРОВАТЯМИ', null, true)\r\n    );\r\n\r\n    return res;\r\n  };\r\n\r\n  // /** @todo: castFormByAncode */\r\n  // tests['castFormByAncode'] = () => {\r\n  //   const res = [];\r\n  //\r\n  //   return res;\r\n  // };\r\n  \r\n  \r\n  \r\n  /** Run tests */\r\n  const results = {};\r\n  _.forEach(tests, (fn, name) => {\r\n    results[name] = fn();\r\n  });\r\n  \r\n  return results;\r\n}\r\n\r\nconst opts = [{\r\n  name: 'default opts',\r\n  opts: {\r\n    storage: Morphy.STORAGE_MEM,\r\n    predict_by_suffix: true,\r\n    predict_by_db: true,\r\n    graminfo_as_text: true,\r\n    use_ancodes_cache: false,\r\n    resolve_ancodes: Morphy.RESOLVE_ANCODES_AS_TEXT\r\n  }\r\n}, {\r\n  name: 'default opts && storage == Morphy.STORAGE_FILE',\r\n  opts: {\r\n    storage: Morphy.STORAGE_FILE,\r\n    predict_by_suffix: true,\r\n    predict_by_db: true,\r\n    graminfo_as_text: true,\r\n    use_ancodes_cache: false,\r\n    resolve_ancodes: Morphy.RESOLVE_ANCODES_AS_TEXT\r\n  }\r\n}, {\r\n  name: 'default opts && off predict_by_suffix',\r\n  opts: {\r\n    storage: Morphy.STORAGE_MEM,\r\n    predict_by_suffix: false,\r\n    predict_by_db: true,\r\n    graminfo_as_text: true,\r\n    use_ancodes_cache: false,\r\n    resolve_ancodes: Morphy.RESOLVE_ANCODES_AS_TEXT\r\n  }\r\n}, {\r\n  name: 'default opts && off predict_by_db',\r\n  opts: {\r\n    storage: Morphy.STORAGE_MEM,\r\n    predict_by_suffix: true,\r\n    predict_by_db: false,\r\n    graminfo_as_text: true,\r\n    use_ancodes_cache: false,\r\n    resolve_ancodes: Morphy.RESOLVE_ANCODES_AS_TEXT\r\n  }\r\n}, {\r\n  name: 'default opts && off predict_by_suffix && off predict_by_db',\r\n  opts: {\r\n    storage: Morphy.STORAGE_MEM,\r\n    predict_by_suffix: false,\r\n    predict_by_db: false,\r\n    graminfo_as_text: true,\r\n    use_ancodes_cache: false,\r\n    resolve_ancodes: Morphy.RESOLVE_ANCODES_AS_TEXT\r\n  }\r\n}, {\r\n  name: 'default opts && off graminfo_as_text',\r\n  opts: {\r\n    storage: Morphy.STORAGE_MEM,\r\n    predict_by_suffix: true,\r\n    predict_by_db: true,\r\n    graminfo_as_text: false,\r\n    use_ancodes_cache: false,\r\n    resolve_ancodes: Morphy.RESOLVE_ANCODES_AS_TEXT\r\n  }\r\n}, {\r\n  name: 'default opts && on use_ancodes_cache',\r\n  opts: {\r\n    storage: Morphy.STORAGE_MEM,\r\n    predict_by_suffix: true,\r\n    predict_by_db: true,\r\n    graminfo_as_text: false,\r\n    use_ancodes_cache: true,\r\n    resolve_ancodes: Morphy.RESOLVE_ANCODES_AS_TEXT\r\n  }\r\n}, {\r\n  name: 'default opts && resolve_ancodes == Morphy.RESOLVE_ANCODES_AS_INT',\r\n  opts: {\r\n    storage: Morphy.STORAGE_MEM,\r\n    predict_by_suffix: true,\r\n    predict_by_db: true,\r\n    graminfo_as_text: true,\r\n    use_ancodes_cache: false,\r\n    resolve_ancodes: Morphy.RESOLVE_ANCODES_AS_INT\r\n  }\r\n}, {\r\n  name: 'default opts && resolve_ancodes == Morphy.RESOLVE_ANCODES_AS_DIALING',\r\n  opts: {\r\n    lang: 'ru',\r\n    storage: Morphy.STORAGE_MEM,\r\n    predict_by_suffix: true,\r\n    predict_by_db: true,\r\n    graminfo_as_text: true,\r\n    use_ancodes_cache: false,\r\n    resolve_ancodes: Morphy.RESOLVE_ANCODES_AS_DIALING\r\n  }\r\n}];\r\n\r\nconst words = [];\r\nwords.push(...'ет глокая душа красный спать мурелки шлепают пельсиски стакелках светится мычай This has been a known bug with a known solution for at least since 2009 years but no one seems to be willing to fix it'.split(' '));\r\n\r\nlet [wordsEn, another] = _.partition(words, word => /^[a-z]+$/i.test(word));\r\nlet wordsRu = _.filter(another, word => /^[а-яё]+$/i.test(word));\r\n\r\nconst testData = [];\r\n\r\nopts.forEach(config => {\r\n  if (!!config.opts.lang) {\r\n    switch (config.opts.lang) {\r\n      case 'ru':\r\n        wordsRu.length && testData.push(_.merge(config, {\r\n          words: wordsRu,\r\n          opts: {lang: 'ru'}\r\n        }));\r\n        break;\r\n        \r\n      case 'en':\r\n        wordsEn.length && testData.push(_.merge(config, {\r\n          words: wordsEn,\r\n          opts: {lang: 'en'}\r\n        }));\r\n        \r\n        break;\r\n    }\r\n    \r\n    return;\r\n  }\r\n  wordsRu.length && testData.push(_.merge(config, {\r\n    words: wordsRu,\r\n    opts: {lang: 'ru'}\r\n  }));\r\n  wordsEn.length && testData.push(_.merge(config, {\r\n    words: wordsEn,\r\n    opts: {lang: 'en'}\r\n  }));\r\n});\r\n\r\n(async function () {\r\n  const results = {};\r\n  \r\n  console.time('tests time');\r\n  \r\n  await Promise.all(testData.map(async ({ name, words, opts }, idx) => {\r\n    name = name || idx;\r\n  \r\n    const morphy = new Morphy(opts);\r\n    try {\r\n      const [phpResults, localResults] = await Promise.all([\r\n        runPhpTests(words, morphy.options),\r\n        runLocalTests(words, morphy)\r\n      ]);\r\n  \r\n      results[name] = {\r\n        words,\r\n        opts,\r\n        tests: _.keys(localResults).reduce((tests, testName) => {\r\n          tests[testName] = {\r\n            // success: _.isEqual(phpResults[testName], localResults[testName]),\r\n            // php: phpResults[testName],\r\n            // local: localResults[testName]\r\n            success: _.isEqual(\r\n              consistentResults(phpResults[testName]),\r\n              consistentResults(localResults[testName])\r\n            ),\r\n            php: phpResults[testName],\r\n            local: localResults[testName],\r\n          };\r\n          \r\n          return tests;\r\n        }, {})\r\n      };\r\n    \r\n    } catch (err) {\r\n      throw err;\r\n      // logger.error(err);\r\n    }\r\n    \r\n    return true;\r\n  }));\r\n  \r\n  console.timeEnd('tests time');\r\n  \r\n  let hasErrors = false;\r\n  _.forEach(results, ({ words, opts, tests }, groupName) => {\r\n    _.forEach(tests, (test, testName) => {\r\n      if (test.success) { return true; }\r\n  \r\n      hasErrors = true;\r\n      \r\nlogger.error(`\r\n[${ groupName }] Test \"${ testName }\" failed!\r\nData: ${ inspect(words) }\r\nOpts: ${ inspect(opts) }\r\nPhp results: ${ inspect(test.php) }\r\nLocal results: ${ inspect(test.local) }\r\n`);\r\n    });\r\n  });\r\n  \r\n  !hasErrors && logger.log('All tests passed!');\r\n  \r\n})().catch(err => logger.error(err));\r\n\r\nfunction consistentResults (any) {\r\n  if (_.isPlainObject(any)) {\r\n    return Object.keys(any).sort().reduce((res, key) => {\r\n      res[key] = consistentResults(any[key]);\r\n\r\n      return res;\r\n    }, {});\r\n  } else\r\n  if (_.isArray(any)) {\r\n    return _.sortBy(\r\n      any.map(consistentResults),\r\n      (any.length && (_.isNumber(any[0]) || isStringifyedNumber(any[0]))) ? _.toInteger : JSON.stringify\r\n    );\r\n  }\r\n\r\n  return any;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/tests/index.js","module.exports = require(\"child_process\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"child_process\"\n// module id = 56\n// module chunks = 0","module.exports = require(\"core-js/modules/es6.array.from\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.array.from\"\n// module id = 59\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.function.name\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.function.name\"\n// module id = 60\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.map\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.map\"\n// module id = 61\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.promise\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.promise\"\n// module id = 62\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.set\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.set\"\n// module id = 67\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es7.object.entries\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es7.object.entries\"\n// module id = 68\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es7.object.get-own-property-descriptors\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es7.object.get-own-property-descriptors\"\n// module id = 69\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es7.object.values\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es7.object.values\"\n// module id = 70\n// module chunks = 0 1"],"sourceRoot":""}